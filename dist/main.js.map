{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/Controller.js","webpack:///./src/Objects/GameObject.js","webpack:///./src/util/Music.js","webpack:///./src/Objects/Characters/Character.js","webpack:///./src/Player.js","webpack:///./src/util/Collision.js","webpack:///./src/Objects/Projectiles/Projectile.js","webpack:///./src/Objects/Enemies/Enemy.js","webpack:///./src/Objects/Enemies/Helicopter.js","webpack:///./src/Objects/Enemies/Spider.js","webpack:///./src/Objects/Enemies/Vinehead.js","webpack:///./src/Objects/Enemies/BossVinehead.js","webpack:///./src/Levels/Level.js","webpack:///./src/GameHUD.js","webpack:///./src/Game.js","webpack:///./src/GameView.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Controller","player","this","keysPressed","keydown","keyup","window","addEventListener","event","preventDefault","idle","KEYS","keyCode","left","direction","velX","right","up","canClimb","console","log","climbing","velY","down","jump","fire","shootFire","onGround","19","37","38","39","40","65","68","13","GameObject","options","pos","ctx","canvas","width","height","x","y","oldX","oldY","tileSize","rightSide","leftSide","topSide","bottomSide","getTopLeftPos","getTopRightPos","getBottomLeftPos","getBottomRightPos","Math","floor","Music","music","document","createElement","src","id","setAttribute","style","display","play","pause","mute","muted","Character","vel","health","spriteMap","Image","CONSTANTS","Player","character","loadImage","fireballs","idleWidth","runWidth","isRunning","jumpCount","frameCount","isHit","dying","dead","drawPlayer","setOldPos","inAir","isIdle","whichDirection","setRunning","setHit","setDying","isClimbing","getDirX","getDirY","drawImage","scale","vert","keys","length","Projectile","fireballVert","fireball","damage","hitCooldown","setTimeout","climb","Collision","collidePlayer","collidePlatform","collidePlatTop","collidePlatBottom","collidePlatLeft","collidePlatRight","collideSlopeFortyFiveRight","collideSlopeFortyFiveRightBottom","collideSlopeFortyFiveLeft","collideSlopeFortyFiveLeftBottom","collideSlopeTwentyLeft","collideSlopeTwentyLeftBottom","collideSlopeTwentyRight","collideSlopeTwentyRightBottom","climbable","collideEnemy","collisionPlatformKeys","1","obj","colVal","2","3","4","5","6","7","8","9","10","11","12","14","15","16","17","18","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","41","42","43","44","45","46","47","48","49","50","51","58","63","67","cleared","obj1","obj2","gameObj","tileLeft","tileBottom","tileY","tileRight","half","tileTop","gameObject","proj","image","dir","frameStartX","frameStartY","frameWidth","frameHeight","frameNum","collider","timeOutHit","updateProjectile","drawProjectile","hitTimeout","top","bottom","physicalMap","hit","Enemy","enemy","projectiles","getMidX","getMidY","drawEnemy","shootProj","callAttack","helibullet","attackInterval","setInterval","Helicopter","bounds","clearInterval","Spider","startFrameCount","enemyInterval","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","closePath","count","Vinehead","active","opening","playerCheckTimeout","checkPlayerPos","homing","clearTimeout","playerCheckInterval","BossVinehead","attacking","charging","charge","bossInterval","attackTimeout","attack","chargeTimeout","backUp","Level","mapKeys","screen","renderMap","cols","rows","tileMap","mapTileSize","enemies","enemyCount","theme","levelLayers","loadImages","getTile","getLeft","getRight","getTop","getBottom","drawLevel","loadLevel","enemiesInterval","spawnEnemies","renderBackground","renderMid","renderFront","background","mid","front","hel2","spider1","spider2","spider3","vine3","vine1","vine2","boss1","images","col","row","spawnInterval","random","num","tile","tileCut","GameHUD","drawHealth","drawHUD","drawAmmo","img","rect","fillStyle","fill","healthMeter","fromRight","arc","PI","Game","controller","level","level1","HUD","gameOver","embers","playerPlatformCheck","playerUpdate","projectilePlatformCheck","renderFireballs","renderEnemies","renderEnemyProjectiles","runGame","isGameOver","win","enemiesCleared","resizeGame","frameInterval","floorCount","physMap","projectile","move","values","forEach","collideProjectile","won","font","textAlign","fillText","GameView","game","splash","renderGame","newGame","clearRect","requestAnimationFrame","getElementById","getContext"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","class Controller {\n  constructor(player) {\n    // this.gameview = gameview;\n    this.player = player;\n\n    this.keysPressed = {};\n\n    this.keydown = this.keydown.bind(this);\n    this.keyup = this.keyup.bind(this);\n    window.addEventListener(\"keydown\", this.keydown);\n    window.addEventListener(\"keyup\", this.keyup);\n  }\n\n  keydown(event) {\n    event.preventDefault();\n    this.player.idle = false;\n    this.player.keydown = true;\n\n    switch (Controller.KEYS[event.keyCode]) {\n      case \"left\":\n        this.keysPressed.left = true;\n        this.player.direction = \"left\";\n        this.player.velX = -6;\n\n        break;\n      case \"right\":\n        this.keysPressed.right = true;\n        this.player.direction = \"right\";\n        this.player.velX = 7;\n        break;\n      case \"up\":\n        this.keysPressed.up = true;\n        if (this.player.canClimb) {\n          console.log(\"sdlfska;sdlf\");\n          console.log(this.player.canClimb);\n          console.log(this.player.idle);\n\n          this.player.climbing = true;\n          this.player.velY = -7;\n        }\n        break;\n      case \"down\":\n        this.keysPressed.down = true;\n        if (this.player.canClimb) {\n          console.log(this.player.canClimb);\n          this.player.climbing = true;\n          this.player.velY = 7;\n        }\n        break;\n      case \"jump\":\n        this.keysPressed.jump = true;\n        this.player.jump();\n        break;\n      case \"fire\":\n\n        this.keysPressed.fire = true;\n        if (this.keysPressed.up) {\n          this.player.shootFire(\"up\");\n        } else if (this.keysPressed.down && !this.player.onGround) {\n          this.player.shootFire(\"down\");\n        } else {\n          this.player.shootFire();\n\n        }\n        break;\n      case \"space\":\n        // this.gameview.Ticker.paused = (this.gameview.Ticker.paused) ? false: true;\n        break;\n      default:\n        return;\n    }\n\n  }\n\n  keyup(event) {\n    // if (Controller.KEYS[event.keyCode] === \"left\" ||\n    //   Controller.KEYS[event.keyCode] === \"right\") {\n      // this.player.keydown = false;\n    //   // this.player.velX = 0;\n    //   // this.player.idle =ß true;\n    //   return;\n    // }\n    event.preventDefault();\n\n    switch (Controller.KEYS[event.keyCode]) {\n\n      case \"left\":\n        this.keysPressed.left = false;\n        // this.player.velX = 0;\n\n        if (!this.keysPressed.left && !this.keysPressed.right) this.player.velX = 0;\n\n        break;\n      case \"right\":\n        this.keysPressed.right = false;\n        // this.player.velX *= -1;\n        if (!this.keysPressed.left && !this.keysPressed.right) this.player.velX = 0;\n        break;\n      case \"up\":\n        this.keysPressed.up = false;\n        if (this.player.climbing) this.player.climbing = false;\n        break;\n      case \"down\":\n        this.keysPressed.down = false;\n        break;\n      case \"jump\":\n        this.keysPressed.jump = false;\n        break;\n      case \"fire\":\n        this.keysPressed.fire = false;\n        break;\n      case \"space\":\n        // this.gameview.Ticker.paused = (this.gameview.Ticker.paused) ? false: true;\n        break;\n      default:\n        return;\n    }\n\n\n    this.player.idle = true;\n    // this.keysPressed = {};\n    // console.log(Controller.KEYS[event.keyCode])\n    // debugger\n\n  }\n}\n\n\nController.KEYS = {\n  19: 'space',\n  37: 'left',\n  38: 'up',\n  39: 'right',\n  40: 'down',\n  65: 'jump',\n  68: 'fire',\n  13: 'enter'\n};\n\n\n\nexport default Controller;","\n\nclass GameObject {\n  constructor(options) {\n    this.name = options.name;\n    this.pos = options.pos;\n    this.ctx = options.ctx;\n    this.canvas = options.canvas;\n    this.width = options.width;\n    this.height = options.height;\n    this.x = options.pos[0];\n    this.y = options.pos[1];\n    this.oldX = this.x;\n    this.oldY = this.y;\n    this.tileSize = 60;\n\n\n\n    this.rightSide = this.rightSide.bind(this);\n    this.leftSide = this.leftSide.bind(this);\n    this.topSide = this.topSide.bind(this);\n    this.bottomSide = this.bottomSide.bind(this);\n\n    this.getTopLeftPos = this.getTopLeftPos.bind(this);\n    this.getTopRightPos = this.getTopRightPos.bind(this);\n    this.getBottomLeftPos = this.getBottomLeftPos.bind(this);\n    this.getBottomRightPos = this.getBottomRightPos.bind(this);\n  }\n\n  rightSide() {\n    return this.x + this.width;\n  }\n\n  leftSide() {\n    return this.x;\n  }\n\n  topSide() {\n    return this.y;\n  }\n\n  bottomSide() {\n    return this.y + this.height;\n  }\n\n  getTopLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n\n  getTopRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n}\n\nexport default GameObject;","class Music {\n    constructor(options){\n        this.music = document.createElement(\"audio\");\n        this.music.src = options.src;\n        this.music.id = \"theme\";\n        this.music.setAttribute(\"preload\", \"auto\");\n        this.music.setAttribute(\"controls\", \"none\");\n        this.music.setAttribute(\"loop\", \"true\");\n        this.music.setAttribute(\"muted\", \"false\");\n        this.music.style.display = \"none\";\n\n        this.play = this.play.bind(this);\n        this.pause = this.pause.bind(this);\n        this.mute = this.mute.bind(this);\n    };\n\n    play() {\n        this.music.play();\n    }\n    pause() {\n        this.music.pause();\n    }\n\n    mute() {\n        this.music.muted =!this.music.muted;\n    }\n\n}\n\nexport default Music;","import GameObject from \"../GameObject\";\n\nconst GRAVITY = 0.5;\nconst FRICTION = 0.5;\n\nclass Character extends GameObject {\n  constructor(options) {\n    super({ \n      name: options.name, \n      pos: options.pos, \n      ctx: options.ctx, \n      width: options.width,\n      height: options.height\n    });\n    this.vel = [0, 0];\n    this.health = 200;\n \n    \n  }\n\n  loadImage() {\n    let spriteMap = new Image();\n    spriteMap.src = \"./assets/charSprite.png\";\n    return spriteMap;\n    // this.tileMap.onLoad = this.drawLevel(ctx);\n  }\n\n  // drawModel() {\n  //   this.ctx.beginPath();\n  //   this.ctx.rect(20, 40, 40, 70);\n  //   this.ctx.fillStyle = \"#FF000\";\n  //   this.ctx.fill();\n  //   this.ctx.closePath();\n\n  // }\n\n  \n}\n\nexport default Character;","import Character from \"./Objects/Characters/Character\";\nimport Collision from \"./util/Collision\";\nimport Projectile from \"./Objects/Projectiles/Projectile\";\n\n\nconst CONSTANTS = {\n  GRAVITY: 1,\n  FRICTION: 1.5,\n  MAX_VEL: 50,\n};\n\nclass Player {\n  constructor(ctx, canvas) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.character = new Character({\n      name: \"Seisa\",\n      pos: [20, 210],\n      ctx: this.ctx,\n      canvas: this.canvas,\n      width: 30,\n      // width: 40,\n      height: 45\n      // height: 54\n    });\n    this.health = this.character.health;\n    this.spriteMap = this.character.loadImage();\n    this.fireballs = {};\n    \n    this.vel = this.character.vel;\n    this.x = this.character.x;\n    this.y = this.character.y;\n    this.idleWidth = 30;\n    this.runWidth = 31.5;\n    this.oldX = this.x;\n    this.oldY = this.y;\n    this.width = this.character.width;\n    this.height = this.character.height;\n    this.velX = this.vel[0];\n    this.velY = this.vel[1];\n    this.onGround = false;\n    this.idle = true;\n    this.keydown = false;\n    this.isRunning = false;\n    this.direction = \"right\";\n    this.jumpCount = 2;\n    this.canClimb = false;\n    this.climbing = false;\n    this.frameCount = 0;\n    this.isHit = false;\n    this.dying = false;\n    this.dead = false;\n\n\n\n    this.drawPlayer = this.drawPlayer.bind(this);\n    this.jump = this.jump.bind(this);\n    // this.move = this.move.bind(this);\n    this.shootFire = this.shootFire.bind(this);\n\n\n    this.setOldPos = this.setOldPos.bind(this);\n    this.inAir = this.inAir.bind(this);\n    this.isIdle = this.isIdle.bind(this);\n    this.whichDirection = this.whichDirection.bind(this);\n    this.setRunning = this.setRunning.bind(this);\n    this.setHit = this.setHit.bind(this);\n    this.setDying = this.setDying.bind(this);\n    this.isClimbing = this.isClimbing.bind(this);\n    this.getDirX = this.getDirX.bind(this);\n    this.getDirY = this.getDirY.bind(this);\n  }\n\n  drawPlayer(frameCount) {\n// .74\n// .59\n    this.setDying();\n    // this.isIdle();\n    if (this.isHit && frameCount % 3 === 0 ) return;\n    if (this.velX === 0) {\n      if (this.direction === \"right\") {\n        this.ctx.drawImage(\n          this.spriteMap,\n          (Math.floor(frameCount / 2) % 10) * 147,\n          251,\n          147,\n          251,\n          this.x, this.y,\n          this.width, this.height\n          // this.width - 5, this.height\n        );\n      } else {\n        this.ctx.scale(-1, 1);\n        this.ctx.drawImage(\n          this.spriteMap,\n          (Math.floor(frameCount / 2) % 10) * 147,\n          251,\n          147,\n          251,\n          -this.x - this.width, this.y,\n          // -this.x - this.width - 5, this.y,\n          this.width, this.height\n          // this.width - 5, this.height\n        );\n        this.ctx.scale(-1, 1);\n      }\n    } else if (this.velX > 0) {\n      this.ctx.drawImage(\n        this.spriteMap,\n        (frameCount % 10) * 186,\n        0,\n        186,\n        251,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else if (this.velX < 0) {\n      this.ctx.scale(-1, 1);\n      this.ctx.drawImage(\n        this.spriteMap,\n        (frameCount % 10) * 186,\n        0,\n        186,\n        251,\n        -(this.x) - this.width, this.y,\n        this.width, this.height\n      );\n      this.ctx.scale(-1, 1);\n\n    } \n    ///change this.width and height based on movement\n  }\n\n  shootFire(vert = null) {\n    if (Object.keys(this.fireballs).length === 3) return;\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.fireballs[i]) {\n        key = i;\n        break;\n      }\n    }\n    if (vert === \"up\") {\n      this.fireballs[key] = new Projectile(\n        Projectile.fireballVert(\n          [this.rightSide() - (this.width / 2),\n          this.bottomSide() + this.height],\n          0, -20, vert)\n      );\n    } else if (vert === \"down\") {\n      this.fireballs[key] = new Projectile(\n        Projectile.fireballVert(\n          [this.rightSide() - (this.width / 2),\n          this.bottomSide() - this.height],\n          0, 20, vert)\n      );\n      this.velY -= 10;\n      this.jumpCount -= 1;\n    } else if (this.direction === \"right\") {\n      this.fireballs[key] = new Projectile(\n        Projectile.fireball(\n          [this.rightSide() - (this.width / 1.5),\n          this.bottomSide() - (this.height / 1.8)],\n          20, 0, \"right\")\n        );\n    } else if (this.direction === \"left\"){\n      this.fireballs[key] = new Projectile(\n        Projectile.fireball(\n          [\n            this.leftSide() - this.width / 2,\n            this.bottomSide() - this.height / 1.8\n          ],\n          -20,\n          0,\n          \"left\"\n        )\n      );\n        \n    }\n\n  }\n    \n  setHit(damage = 10) {\n    if (!this.isHit) {\n      this.isHit = true;\n      this.hitCooldown = setTimeout(() => {\n        this.isHit = false;\n      }, 2000);\n      this.health -= damage;\n    }\n  }\n\n  setDying() {\n\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      setTimeout(() => {\n        this.dead = true;\n      }, 1000);\n    }\n  }\n\n\n  rightSide() {\n    return this.x + this.width;\n  }\n\n  leftSide() {\n    return this.x;\n  }\n\n  topSide() {\n    return this.y;\n  }\n\n  bottomSide() {\n    return this.y + this.height;\n  }\n\n  \n  setOldPos() {\n    this.oldX = this.x;\n    this.oldY = this.y;\n  }\n\n  getDirX() {\n    return this.x + this.velX;\n  }\n\n  getDirY() {\n    return this.y + this.velY;\n  }\n\n  isIdle() {\n    if (this.velX === 0 && this.velY === 0) {\n      this.idle = true;\n    } else {\n      this.idle = false;\n    }\n  }\n\n  inAir() {\n    if (!this.onGround ) {\n      this.y += this.velY;\n      (this.velY + CONSTANTS.GRAVITY > 25) ? this.velY = 25 : this.velY += CONSTANTS.GRAVITY;\n    } else {\n      this.velY = 0;\n    }\n  }\n\n  isClimbing() {\n    if (this.climbing && this.canClimb && this.keydown) {\n      this.y += this.velY;\n    } else {\n      this.velY = 0;\n    }\n  }\n\n  jump() {\n    if (this.jumpCount === 2) {\n      this.onGround = false;\n      this.velY = 0 - 15;\n      this.jumpCount = 1;\n    } else if (this.jumpCount === 1) {\n      this.velY = 0 - 15;\n      this.jumpCount = 0;\n    }\n  }\n\n  climb() {\n    this.climb = (this.climb) ? false : true;\n  }\n\n\n\n  setRunning() {\n    if (this.velX !== 0) {\n      this.isRunning = true;\n      this.width = this.runWidth;\n    } else {\n      this.isRunning = false;\n      this.width = this.idleWidth;\n    }\n  }\n\n\n\n  whichDirection() {\n    this.direction = this.velX >= 0 ? \"right\" : \"left\";\n  }\n\n}\n\nexport default Player;","import Player from \"../Player\";\nimport Projectile from \"../Objects/Projectiles/Projectile\";\nimport Enemy from \"../Objects/Enemies/Enemy\";\n// import Helicopter from \"../Objects/Enemies/Helicopter\";\n\nclass Collision {\n  constructor() {\n\n\n    this.collidePlayer = this.collidePlayer.bind(this);\n    this.collidePlatform = this.collidePlatform.bind(this);\n    this.collidePlatTop = this.collidePlatTop.bind(this);\n    this.collidePlatBottom = this.collidePlatBottom.bind(this);\n    this.collidePlatLeft = this.collidePlatLeft.bind(this);\n    this.collidePlatRight = this.collidePlatRight.bind(this);\n    // this.collidePlatformSlopeRight = this.collidePlatformSlopeRight.bind(this);\n    this.collideSlopeFortyFiveRight = this.collideSlopeFortyFiveRight.bind(this);\n    this.collideSlopeFortyFiveRightBottom = this.collideSlopeFortyFiveRightBottom.bind(this);\n    this.collideSlopeFortyFiveLeft = this.collideSlopeFortyFiveLeft.bind(this);\n    this.collideSlopeFortyFiveLeftBottom = this.collideSlopeFortyFiveLeftBottom.bind(this);\n\n    this.collideSlopeTwentyLeft = this.collideSlopeTwentyLeft.bind(this);\n    this.collideSlopeTwentyLeftBottom = this.collideSlopeTwentyLeftBottom.bind(this);\n\n    this.collideSlopeTwentyRight = this.collideSlopeTwentyRight.bind(this);\n    this.collideSlopeTwentyRightBottom = this.collideSlopeTwentyRightBottom.bind(this);\n    \n    this.climbable = this.climbable.bind(this);\n\n    this.collideEnemy = this.collideEnemy.bind(this);\n\n    this.collisionPlatformKeys = {\n      1: (obj, x, y, colVal, tileSize) => {\n        this.collidePlatTop(obj, y);\n      },\n      2: (obj, x, y, colVal, tileSize) => {\n        ////thin platform\n        if (obj.velY > 0) {\n          this.collidePlatTop(obj, y);\n        }\n      },\n      3: (obj, x, y, colVal, tileSize) => {\n        /// bottom\n        this.collidePlatBottom(obj, y + tileSize);\n      },\n      4: (obj, x, y, colVal, tileSize) => {\n        ///left\n        this.collidePlatLeft(obj, x);\n      },\n      5: (obj, x, y, colVal, tileSize) => {\n        ///right\n        this.collidePlatRight(obj, x + tileSize);\n      },\n      6: (obj, x, y, colVal, tileSize) => {\n        ///top / left\n        ///  __\n        /// |\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          // this.collidePlatTop(obj, y)\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      7: (obj, x, y, colVal, tileSize) => {\n        ///top / right\n        ///  __\n        ///    |\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n        }\n      },\n      8: (obj, x, y, colVal, tileSize) => {\n        /// bottom / left\n        ///   __|\n\n        if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      9: (obj, x, y, colVal, tileSize) => {\n        /// bottom / right\n        ///   |__\n        if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x);\n        }\n      },\n      10: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom\n        //// ___\n        //// ___\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          this.collidePlatBottom(obj, y + tileSize);\n        }\n      },\n      11: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom / left\n        ////   ___\n        ////  |___ \n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      12: (obj, x, y, colVal, tileSize) => {\n        ///top / left / right\n        ////  ___\n        //// |   | \n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else if (this.collidePlatRight(obj, x + tileSize)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      13: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom / right\n        ////  ___\n        ////  ___| \n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n        }\n      },\n      14: (obj, x, y, colVal, tileSize) => {\n        ///bottom / left / right\n        ////  \n        //// |___|\n        if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else if (this.collidePlatRight(obj, x + tileSize)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      15: (obj, x, y, colVal, tileSize) => {\n        //top half in\n        this.collidePlatTop(obj, y + tileSize / 2);\n      },\n      16: (obj, x, y, colVal, tileSize) => {\n        //bottom half in\n        this.collidePlatBottom(obj, y + tileSize / 2);\n      },\n      17: (obj, x, y, colVal, tileSize) => {\n        //left half in\n        this.collidePlatLeft(obj, x + tileSize / 2);\n      },\n      18: (obj, x, y, colVal, tileSize) => {\n        //right half in\n        this.collidePlatRight(obj, x + tileSize / 2);\n      },\n      19: (obj, x, y, colVal, tileSize) => {\n        //top  half in/ left\n        ///\n        ///|---\n        if (this.collidePlatTop(obj, y + tileSize / 2)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      20: (obj, x, y, colVal, tileSize) => {\n        //top  half in/ right\n        /// ---|\n\n        if (this.collidePlatTop(obj, y + tileSize / 2)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n        }\n      },\n      21: (obj, x, y, colVal, tileSize) => {\n        //bottom half in/ left\n        ///\n        ///|---\n        if (this.collidePlatBottom(obj, y + tileSize / 2)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      22: (obj, x, y, colVal, tileSize) => {\n        //bottom half in/ right\n        /// ---|\n\n        if (this.collidePlatBottom(obj, y + tileSize / 2)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n        }\n      },\n      23: (obj, x, y, colVal, tileSize) => {\n        //top / left half in\n        if (this.collidePlatLeft(obj, x + tileSize / 2)) {\n          return;\n        } else if (obj.x + obj.width > x + tileSize / 2) {\n          this.collidePlatTop(obj, y);\n        }\n      },\n      24: (obj, x, y, colVal, tileSize) => {\n        //top / right half in\n        if (this.collidePlatRight(obj, x + tileSize / 2)) {\n          return;\n        } else if (obj.x < x + tileSize / 2) {\n          this.collidePlatTop(obj, y);\n        }\n      },\n      25: (obj, x, y, colVal, tileSize) => {\n        //bottom / left half in\n        if (this.collidePlatLeft(obj, x + tileSize / 2)) {\n          return;\n        } else if (obj.x + obj.width > x + tileSize / 2) {\n          this.collidePlatBottom(obj, y + tileSize);\n        }\n      },\n      26: (obj, x, y, colVal, tileSize) => {\n        //bottom / right half in\n        if (this.collidePlatRight(obj, x + tileSize / 2)) {\n          return;\n        } else if (obj.x < x + tileSize / 2) {\n          this.collidePlatBottom(obj, y + tileSize);\n        }\n      },\n      27: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom / left half in\n        ////   ___\n        ////  |___ \n        if (this.collidePlatLeft(obj, x + tileSize / 2)) {\n          return;\n        } else if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else {\n          this.collidePlatTop(obj, y);\n        }\n      },\n      28: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom / right half in\n        ////   ___\n        ////   ___| \n        if (this.collidePlatRight(obj, x + tileSize / 2)) {\n          return;\n        } else if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else {\n          this.collidePlatTop(obj, y);\n        }\n      },\n\n      29: (obj, x, y, colVal, tileSize) => {\n        //top half in/ left half in\n        ///\n        ///|---\n        if (this.collidePlatTop(obj, y + tileSize / 2)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x + tileSize / 2);\n        }\n      },\n      30: (obj, x, y, colVal, tileSize) => {\n        //top half in/ right half in\n        /// ---|\n\n        if (this.collidePlatTop(obj, y + tileSize / 2)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize / 2);\n        }\n      },\n      31: (obj, x, y, colVal, tileSize) => {\n        //bottom half in/ left half in\n        ///\n        ///|---\n        if (this.collidePlatBottom(obj, y + tileSize / 2)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x + tileSize / 2);\n        }\n      },\n      32: (obj, x, y, colVal, tileSize) => {\n        //bottom half in/ right half in\n        /// ---|\n\n        if (this.collidePlatBottom(obj, y + tileSize / 2)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize / 2);\n        }\n      },\n      33: (obj, x, y, colVal, tileSize) => {\n        ////For Bottom of Screen\n        if (obj.velY > 0) {\n          this.collidePlatTop(obj, y + tileSize);\n        }\n      },\n\n      34: (obj, x, y, colVal, tileSize) => {\n        //////////SLOPES/////////////\n        //45 deg left\n\n        if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else {\n\n          this.collideSlopeFortyFiveLeft(obj, x + tileSize, y + tileSize);\n        }\n      },\n      35: (obj, x, y, colVal, tileSize) => {\n        //45 deg right\n        this.collideSlopeFortyFiveRight(obj, x, y + tileSize);\n      },\n      36: (obj, x, y, colVal, tileSize) => {\n        //22 deg left bottom half\n        this.collideSlopeTwentyLeft(obj, x + tileSize, y + tileSize);\n      },\n      37: (obj, x, y, colVal, tileSize) => {\n        //22 deg right bottom half\n        this.collideSlopeTwentyRight(obj, x, y + tileSize);\n      },\n      38: (obj, x, y, colVal, tileSize) => {\n        //22 deg left top half\n        this.collideSlopeTwentyLeft(obj, x, y + tileSize, tileSize / 2);\n      },\n      39: (obj, x, y, colVal, tileSize) => {\n        //22 deg right top half\n        this.collideSlopeTwentyRight(obj, x, y + tileSize, tileSize / 2);\n      },\n\n\n      40: (obj, x, y, colVal, tileSize) => {\n        //////////////COLLIDE WITH BOTTOM OF SLOPE//////////\n        //45 deg right bottom\n        ///  /\n        this.collideSlopeFortyFiveRightBottom(obj, x, y + tileSize);\n      },\n      41: (obj, x, y, colVal, tileSize) => {\n        //45 deg left bottom\n          ///  \\\n        this.collideSlopeFortyFiveLeftBottom(obj, x + tileSize, y + tileSize);\n      },\n      42: (obj, x, y, colVal, tileSize) => {\n        //22 deg left bottom / bottom half\n        this.collideSlopeTwentyLeftBottom(obj, x + tileSize, y + tileSize);\n      },\n      43: (obj, x, y, colVal, tileSize) => {\n        //22 deg right bottom / bottom half\n        this.collideSlopeTwentyRightBottom(obj, x, y + tileSize );\n      },\n      44: (obj, x, y, colVal, tileSize) => {\n        //22 deg left bottom / top half\n        this.collideSlopeTwentyLeftBottom(obj, x + tileSize, y + tileSize, tileSize / 2);\n      },\n      45: (obj, x, y, colVal, tileSize) => {\n        //22 deg right bottom / top half\n        this.collideSlopeTwentyRightBottom(obj, x, y + tileSize, tileSize / 2);\n      },\n\n      \n      46: (obj, x, y, colVal, tileSize) => {\n        //45 deg left bottom / top\n        ///  \n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          this.collideSlopeFortyFiveLeftBottom(obj, x, y + tileSize);\n        }\n      },\n      47: (obj, x, y, colVal, tileSize) => {\n        //45 deg right bottom / top\n        ///  \n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          this.collideSlopeFortyFiveRightBottom(obj, x, y + tileSize);\n        }\n      },\n\n\n      48: (obj, x, y, colVal, tileSize) => {\n        //45 deg left & left\n        ///  |\\\n        if (this.collidePlatLeft(obj, x)) {\n          return;\n        } else {\n          this.collideSlopeFortyFiveLeft(obj, x, y + tileSize);\n        }\n      },\n      49: (obj, x, y, colVal, tileSize) => {\n        //45 deg left  & right\n        /// /| \n        if (this.collidePlatRight(obj, x + tileSize)) {\n          return;\n        } else {\n          this.collideSlopeTwentyRight(obj, x, y + tileSize, tileSize / 2);\n        }\n      },\n      50: (obj, x, y, colVal, tileSize) => {\n        //22 deg left top half & left\n        ///  |\\\n        if (this.collidePlatLeft(obj, x)) {\n          return;\n        } else {\n          this.collideSlopeTwentyLeft(obj, x, y + tileSize, tileSize / 2);\n        }\n      },\n      51: (obj, x, y, colVal, tileSize) => {\n        //22 deg left top half & right\n        /// /| \n        if (this.collidePlatRight(obj, x + tileSize)) {\n          return;\n        } else {\n          this.collideSlopeTwentyRight(obj, x, y + tileSize, tileSize / 2);\n        }\n      },\n\n\n      58: (obj, x, y, colVal, tileSize) => {\n        // climb\n        if (obj.x + obj.width > x + (tileSize / 4) && obj.x < x + (tileSize * (3/4))) {\n\n          this.climbable(obj, x, y, tileSize);\n        }\n      },\n\n\n      63: (obj, x, y, colVal, tileSize) => {\n        ///right / left / bottom thorn\n        if (this.collidePlatLeft(obj, x)) {\n          if (obj instanceof Player) {\n            obj.setHit(5);\n          }\n          return;\n        } else if (this.collidePlatBottom(obj, y + tileSize / 6)) {\n          if (obj instanceof Player) {\n            obj.setHit(5);\n          }\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n          if (obj instanceof Player) {\n            obj.setHit(5);\n          }\n        }\n      },\n      67: (obj, x, y, colVal, tileSize) => {\n        ///thorn bottom\n        this.collidePlatBottom(obj, y + tileSize / 6);\n        if (obj instanceof Player) {\n          obj.setHit(5);\n        }\n      },\n    };\n\n\n  //   this.colsionPlatformKeys = {\n  //     1: (obj, x, y, colVal, tileSize) => {\n  //       this.collidePlatTop(obj, y);\n  //     },\n  //     2: (obj, x, y, colVal, tileSize) => {\n  //       ////thin platform\n  //       if (obj.velY > 0) {\n  //         this.collidePlatTop(obj, y);\n  //       }\n  //     },\n  //     3: (obj, x, y, colVal, tileSize) => {\n  //       ///top / left\n  //       if (this.collidePlatTop(obj, y)) {\n  //         return;\n  //       } else {\n  //         // this.collidePlatTop(obj, y)\n  //         this.collidePlatLeft(obj, x);\n  //       }\n  //     },\n  //     4: (obj, x, y, colVal, tileSize) => {\n  //       ///top / left / right\n  //       if (this.collidePlatTop(obj, y)) {\n  //         return;\n  //       } else if (this.collidePlatRight(obj, x + tileSize)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatLeft(obj, x);\n  //       }\n  //     },\n  //     5: (obj, x, y, colVal, tileSize) => {\n  //       ///top / bottom / right\n  //       if (this.collidePlatTop(obj, y)) {\n  //         return;\n  //       } else if (this.collidePlatBottom(obj, y + tileSize)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatRight(obj, x + tileSize);\n  //       }\n  //     },\n  //     6: (obj, x, y, colVal, tileSize) => {\n  //       ///top / bottom\n  //       if (this.collidePlatTop(obj, y)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatBottom(obj, y + tileSize);\n  //       }\n  //     },\n  //     7: (obj, x, y, colVal, tileSize) => {\n  //       ///thorn bottom\n  //       this.collidePlatBottom(obj, y + tileSize / 6);\n  //       if (obj instanceof Player) {\n  //         obj.setHit(5);\n  //       }\n  //     },\n  //     8: (obj, x, y, colVal, tileSize) => {\n  //       ///top / right\n  //       if (this.collidePlatTop(obj, y)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatRight(obj, x + tileSize);\n  //       }\n  //     },\n  //     9: (obj, x, y, colVal, tileSize) => {\n  //       ///left\n  //       this.collidePlatLeft(obj, x);\n  //     },\n  //     10: (obj, x, y, colVal, tileSize) => {\n  //       ///right\n  //       this.collidePlatRight(obj, x + tileSize);\n  //     },\n  //     11: (obj, x, y, colVal, tileSize) => {\n  //       ///right / left / bottom thorn\n  //       if (this.collidePlatLeft(obj, x)) {\n  //         if (obj instanceof Player) {\n  //           obj.setHit(5);\n  //         }\n  //         return;\n  //       } else if (this.collidePlatBottom(obj, y + tileSize / 6)) {\n  //         if (obj instanceof Player) {\n  //           obj.setHit(5);\n  //         }\n  //         return;\n  //       } else {\n  //         this.collidePlatRight(obj, x + tileSize);\n  //         if (obj instanceof Player) {\n  //           obj.setHit(5);\n  //         }\n  //       }\n  //     },\n  //     12: (obj, x, y, colVal, tileSize) => {\n  //       //top / left half in\n  //       if (this.collidePlatLeft(obj, x + tileSize / 2)) {\n  //         return;\n  //       } else if (obj.x + obj.width > x + tileSize / 2) {\n  //         this.collidePlatTop(obj, y);\n  //       }\n  //     },\n  //     13: (obj, x, y, colVal, tileSize) => {\n  //       //top / right half in\n  //       if (this.collidePlatRight(obj, x + tileSize / 2)) {\n  //         return;\n  //       } else if (obj.x < x + tileSize / 2) {\n  //         this.collidePlatTop(obj, y);\n  //       }\n  //     },\n  //     14: (obj, x, y, colVal, tileSize) => {\n  //       /// bottom / left\n  //       if (this.collidePlatBottom(obj, y + tileSize)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatLeft(obj, x);\n  //       }\n  //     },\n  //     15: (obj, x, y, colVal, tileSize) => {\n  //       /// bottom / right\n  //       if (this.collidePlatBottom(obj, y + tileSize)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatRight(obj, x);\n  //       }\n  //     },\n  //     16: (obj, x, y, colVal, tileSize) => {\n  //       /// bottom\n  //       this.collidePlatBottom(obj, y + tileSize);\n  //     },\n  //     17: (obj, x, y, colVal, tileSize) => {\n  //       ///left\n  //       this.collidePlatLeft(obj, x);\n  //     },\n\n  //     18: (obj, x, y, colVal, tileSize) => {\n  //       //45 deg right\n  //       this.collideSlopeFortyFiveRight(obj, x, y + tileSize);\n  //     },\n  //     19: (obj, x, y, colVal, tileSize) => {\n  //       //45 deg left\n  //       this.collideSlopeFortyFiveLeft(obj, x + tileSize, y + tileSize);\n  //     },\n  //     20: (obj, x, y, colVal, tileSize) => {\n  //       //22 deg right bottom half\n  //       this.collideSlopeTwentyRight(obj, x, y + tileSize);\n  //     },\n  //     21: (obj, x, y, colVal, tileSize) => {\n  //       //22 deg left bootom half\n  //       this.collideSlopeTwentyLeft(obj, x + tileSize, y + tileSize);\n  //     },\n  //     22: (obj, x, y, colVal, tileSize) => {\n  //       //22 deg right top half\n  //       this.collideSlopeTwentyRight(obj, x, y + tileSize, tileSize / 2);\n  //     },\n  //     23: (obj, x, y, colVal, tileSize) => {\n  //       //22 deg left top half\n  //       this.collideSlopeTwentyLeft(obj, x, y + tileSize, tileSize / 2);\n  //     },\n  //     24: (obj, x, y, colVal, tileSize) => {\n  //       //22 deg left top half & left\n  //       ///refactor////\n  //       if (this.collidePlatLeft(obj, x)) {\n  //         return;\n  //       } else {\n  //         this.collideSlopeTwentyLeft(obj, x, y + tileSize, tileSize / 2);\n  //       }\n  //     },\n  //     25: (obj, x, y, colVal, tileSize) => {\n  //       //right half in\n  //       this.collidePlatRight(obj, x + tileSize / 2);\n  //     },\n  //     26: (obj, x, y, colVal, tileSize) => {\n  //       //left half in\n  //       this.collidePlatLeft(obj, x + tileSize / 2);\n  //     },\n  //     27: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ right half in\n  //       if (this.collidePlatRight(obj, x + tileSize / 2)) {\n  //         return;\n  //       } else if (obj.x < x + tileSize / 2) {\n  //         this.collidePlatTop(obj, y + tileSize / 2);\n  //       }\n  //     },\n  //     28: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ right half in / bottom\n  //       if (obj.x < x + tileSize / 2) {\n  //         if (this.collidePlatTop(obj, y + tileSize / 2)) {\n  //           return;\n  //         } else if (this.collidePlatBottom(obj, y + tileSize)) {\n  //           return;\n  //         } else {\n  //           this.collidePlatRight(obj, x + tileSize / 2);\n  //         }\n  //       }\n  //     },\n  //     29: (obj, x, y, colVal, tileSize) => {\n  //       //top half in\n  //       this.collidePlatTop(obj, y + tileSize / 2);\n  //     },\n  //     30: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ left half in / bottom\n  //       if (obj.x + obj.width > x + tileSize / 2) {\n  //         if (this.collidePlatTop(obj, y + tileSize / 2)) {\n  //           return;\n  //         } else if (this.collidePlatBottom(obj, y + tileSize)) {\n  //           return;\n  //         } else {\n  //           this.collidePlatLeft(obj, x + tileSize / 2);\n  //         }\n  //       }\n  //     },\n  //     31: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ right\n  //       if (this.collidePlatTop(obj, y + tileSize / 2)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatRight(obj, x + tileSize);\n  //       }\n  //     },\n  //     32: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ left\n  //       if (this.collidePlatTop(obj, y + tileSize / 2)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatLeft(obj, x);\n  //       }\n  //     },\n  //     33: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ left\n  //       if (obj.x > x + (tileSize / 4) && obj.x < x + (tileSize * (3/4))) {\n\n  //         this.climbable(obj, x, y, tileSize);\n  //       }\n  //     }\n  //   };\n  }\n\n  collidePlayer(player, canvas, cleared) {\n    // debugger\n    if (player.x < 0) {\n      player.x = 0.01;\n      player.velX = 0;\n    } else if (player.x + player.width > canvas.width && !cleared) {\n      player.x = canvas.width - player.width;\n      player.velX = 0;\n    }\n\n    // if (player.y < 0) {\n    //   player.velY = 0;\n    //   player.y = 0.01;\n    // } else\n    if (player.y > canvas.height) {\n      // player.velY = 0;\n      // player.y = canvas.height - player.height - 0.1;\n      // player.jumpCount = 2;\n      // player.onGround = true;\n      // player.dead = true;\n      player.y = 0;\n      player.setHit(50);\n    }\n  }\n\n  climbable(obj, x, y) {\n    obj.canClimb = true;\n  }\n\n  collideProjectile(obj1, obj2) {\n    // if (!obj1 || !obj2) return false;\n    // if (obj2.dying || obj2.dead) return false;\n\n    if (\n      obj1.x < obj2.x + obj2.width &&\n      obj1.x + obj1.width > obj2.x &&\n      obj1.y < obj2.y + obj2.height &&\n      obj1.y + obj1.height > obj2.y\n    ) {\n      obj1.velY = -(obj1.velY / 3);\n      obj1.velX = -(obj1.velX / 3);\n      ///hit\n      obj1.setHit(obj2.damage);\n      obj2.setHit();\n      ///change Hit\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  collideEnemy(obj1, obj2) {\n    // if (!obj1 || !obj2) return false;\n    if (obj2.dying || obj2.dead) return false;\n\n    if (\n      obj1.x < obj2.x + obj2.width &&\n      obj1.x + obj1.width > obj2.x &&\n      obj1.y < obj2.y + obj2.height &&\n      obj1.y + obj1.height > obj2.y\n    ) {\n      // if (this.hitBox(obj1, obj2)) {\n      if (obj1 instanceof Player && !obj1.isHit) {\n        obj1.velY = -(obj1.velY / 3);\n        obj1.velX = -(obj1.velX / 3);\n        ///hit\n        obj1.setHit(obj2.damage);\n        return true;\n      }\n      if (obj1 instanceof Projectile) {\n        obj2.setHit(obj1.damage);\n        setTimeout(() => {\n          obj1.setHit();\n        }, 10);\n\n        return true;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  ////////PLATFORM COLLISION\n\n  collideSlopeFortyFiveRight(gameObj, tileLeft, tileBottom) {\n    ///60 x60 120 y 60 120 (60, 120] [ 60, 120])\n    // debugger\n    let tileY = tileBottom - (gameObj.rightSide() - tileLeft);\n    if (gameObj instanceof Player) {\n      if (gameObj.onGround) {\n        if (\n          gameObj.bottomSide() > tileBottom &&\n          gameObj.oldY + gameObj.height < tileBottom\n        ) {\n          gameObj.y = tileBottom - gameObj.height - 0.05;\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          return;\n        }\n        gameObj.y = tileY - gameObj.height - 0.05;\n      } else if (!gameObj.onGround) {\n        if (\n          gameObj.rightSide() > tileLeft &&\n          gameObj.bottomSide() > tileY &&\n          gameObj.oldY + gameObj.height < tileY\n        ) {\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          // gameObj.getDirY() + 60 > tileY) {\n          gameObj.y = tileY - gameObj.height - 0.05;\n        }\n      }\n    }\n\n  }\n\n  collideSlopeFortyFiveRightBottom(gameObj, tileLeft, tileBottom) {\n    ///60 x60 120 y 60 120 (60, 120] [ 60, 120])\n    // debugger\n    let tileY = tileBottom - (gameObj.rightSide() - tileLeft);\n    if (\n      gameObj.rightSide() > tileLeft &&\n      gameObj.topSide() < tileY &&\n      gameObj.oldY > tileY\n    ) {\n\n      // gameObj.getDirY() + 60 > tileY) {\n      gameObj.y = tileY + 0.05;\n    }\n\n  }\n\n  collideSlopeFortyFiveLeft(gameObj, tileRight, tileBottom) {\n    let tileY = tileBottom - (tileRight - gameObj.leftSide());\n    if (gameObj instanceof Player) {\n      if (gameObj.onGround) {\n        if (\n          gameObj.bottomSide() > tileBottom &&\n          gameObj.oldY + gameObj.height < tileBottom\n        ) {\n          gameObj.y = tileBottom - gameObj.height - 0.05;\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          return;\n        }\n        gameObj.y = tileY - gameObj.height - 0.05;\n      } else if (!gameObj.onGround) {\n        if (\n          gameObj.leftSide() < tileRight &&\n          gameObj.bottomSide() > tileY &&\n          gameObj.oldY + gameObj.height < tileY\n        ) {\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          gameObj.y = tileY - gameObj.height - 0.05;\n        }\n      }\n    }\n  }\n\n  collideSlopeFortyFiveLeftBottom(gameObj, tileRight, tileBottom) {\n    let tileY = tileBottom - (tileRight - gameObj.leftSide());\n    if (\n      gameObj.leftSide() < tileRight &&\n      gameObj.topSide() < tileY &&\n      gameObj.oldY > tileY\n    ) {\n\n      // gameObj.getDirY() + 60 > tileY) {\n      gameObj.y = tileY + 0.05;\n    }\n\n  }\n\n \n\n  collideSlopeTwentyRight(gameObj, tileLeft, tileBottom, half = 0) {\n\n    let tileY = tileBottom - (half + (gameObj.rightSide() - tileLeft) / 2);\n    if (gameObj instanceof Player) {\n      // if (gameObj.onGround) {\n      //   if (\n      //     gameObj.bottomSide() > tileBottom &&\n      //     gameObj.oldY + gameObj.height < tileBottom\n      //   ) {\n      //     gameObj.y = tileBottom - gameObj.height - 0.05;\n      //     gameObj.onGround = true;\n      //     gameObj.jumpCount = 2;\n      //     return;\n      //   }\n      //   gameObj.y = tileY - gameObj.height - 0.05;\n      // } else if (!gameObj.onGround) {\n        if (\n          gameObj.rightSide() > tileLeft &&\n          gameObj.bottomSide() > tileY &&\n          gameObj.oldY + gameObj.height < tileY\n        ) {\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n\n          gameObj.y = tileY - gameObj.height - 0.05;\n        }\n      // }\n    }\n  }\n\n  collideSlopeTwentyRightBottom(gameObj, tileLeft, tileBottom, half = 0) {\n\n    let tileY = tileBottom - (half + (gameObj.rightSide() - tileLeft) / 2);\n    if (\n      gameObj.rightSide() > tileLeft &&\n      gameObj.topSide() < tileY &&\n      gameObj.oldY > tileY\n    ) {\n\n      gameObj.y = tileY + 0.05;\n    }\n\n  }\n\n\n  collideSlopeTwentyLeft(gameObj, tileRight, tileBottom, half = 0) {\n    let tileY = tileBottom - (half + (tileRight - gameObj.leftSide()) / 2);\n    if (gameObj instanceof Player) {\n      if (gameObj.onGround) {\n        if (\n          gameObj.bottomSide() > tileBottom &&\n          gameObj.oldY + gameObj.height < tileBottom\n        ) {\n          gameObj.y = tileBottom - gameObj.height - 0.05;\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          return;\n        }\n        gameObj.y = tileY - gameObj.height - 0.05;\n      } else if (!gameObj.onGround) {\n        if (\n          gameObj.leftSide() < tileRight &&\n          gameObj.bottomSide() > tileY &&\n          gameObj.oldY + gameObj.height < tileY\n        ) {\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          gameObj.y = tileY - gameObj.height - 0.05;\n        }\n      }\n    }\n  }\n\n  collideSlopeTwentyLeftBottom(gameObj, tileRight, tileBottom, half = 0) {\n    let tileY = tileBottom - (half + (tileRight - gameObj.leftSide()) / 2);\n    if (\n      gameObj.leftSide() < tileRight &&\n      gameObj.topSide() < tileY &&\n      gameObj.oldY > tileY\n    ) {\n\n      gameObj.y = tileY + 0.05;\n    }\n\n  }\n\n  ///////regular collision\n\n\n  collidePlatTop(gameObj, tileTop) {\n    if (\n      gameObj.bottomSide() > tileTop &&\n      gameObj.oldY + gameObj.height < tileTop\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        //set null\n        return true;\n      }\n      gameObj.velY = 0;\n      gameObj.y = tileTop - gameObj.height - 0.1;\n      if (gameObj instanceof Player) {\n        gameObj.onGround = true;\n        gameObj.jumpCount = 2;\n      }\n      return true;\n    } else {\n      if (gameObj instanceof Player) {\n        gameObj.onGround = false;\n      }\n    }\n    return false;\n  }\n\n  collidePlatBottom(gameObj, tileBottom) {\n    if (\n      gameObj.topSide() < tileBottom &&\n      gameObj.oldY + gameObj.height > tileBottom\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n      }\n      gameObj.y = tileBottom + 0.1;\n      gameObj.velY = 0;\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatRight(gameObj, tileRight) {\n    if (\n      gameObj.leftSide() < tileRight &&\n      gameObj.oldX + gameObj.width > tileRight\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n      }\n      gameObj.x = tileRight + 0.1;\n      // if (gameObj instanceof Enemy) {\n      //   gameObj.x = -gameObj.x;\n      // }\n      // gameObj.velX = 0;\n\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatLeft(gameObj, tileLeft) {\n    if (gameObj.rightSide() > tileLeft && gameObj.oldX < tileLeft) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n      }\n      gameObj.x = tileLeft - gameObj.width - 0.1;\n      // if (!gameObj instanceof Enemy) {\n      //   gameObj.x = -gameObj.x;\n      // }\n      // gameObj.velX = 0;\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatform(gameObject, x, y, colVal, tileSize) {\n    if (!colVal || !this.collisionPlatformKeys[colVal]) return;\n    this.collisionPlatformKeys[colVal](gameObject, x, y, colVal, tileSize);\n  }\n}\n\n\n\nexport default Collision;\n","import GameObject from \"../GameObject\";\nimport Collision from \"../../util/Collision\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\n\nclass Projectile extends GameObject {\n  constructor(options) {\n    super(options);\n    this.proj = this.loadImage(options.image);\n    this.velX = options.velX;\n    this.velY = options.velY;\n    this.oldX = this.x;\n    this.oldY = this.y;\n    this.dir = options.dir || \"right\";\n    this.damage = options.damage;\n\n    this.frameStartX = options.frameStartX;\n    this.frameStartY = options.frameStartY;\n    this.frameWidth = options.frameWidth;\n    this.frameHeight = options.frameHeight;\n    this.frameNum = options.frameNum;\n\n\n    this.tileSize = 60;\n    \n    this.collider = new Collision();\n    this.isHit = false;\n\n\n\n    this.loadImage = this.loadImage.bind(this);\n    this.getTopLeftPos = this.getTopLeftPos.bind(this);\n    this.getTopRightPos = this.getTopRightPos.bind(this);\n    this.getBottomLeftPos = this.getBottomLeftPos.bind(this);\n    this.getBottomRightPos = this.getBottomRightPos.bind(this);\n    this.setHit = this.setHit.bind(this);\n    this.timeOutHit = this.timeOutHit.bind(this);\n    this.updateProjectile = this.updateProjectile.bind(this);\n    this.drawProjectile = this.drawProjectile.bind(this);\n\n    this.timeOutHit();\n  }\n\n  loadImage(image) {\n    let proj = new Image();\n    proj.src = image;\n    return proj;\n  }\n\n  getTopLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n\n  getTopRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n\n  setHit() {\n    this.isHit = !this.isHit;\n  }\n\n  timeOutHit() {\n    this.hitTimeout = setTimeout(() => {\n      this.setHit();\n    }, 2000);\n  }\n\n\n  platformCheck() {\n    let colVal;\n    let top;\n    let bottom;\n    let right;\n    let left;\n    let cols = 15;\n\n    if (this.dir === \"left\") {\n      [left, top] = this.getTopLeftPos();\n      colVal = this.physicalMap[top * cols + left];\n      this.collider.collidePlatform(\n        this,\n        left * this.tileSize,\n        top * this.tileSize,\n        colVal\n      );\n        \n      [left, bottom] = this.getBottomLeftPos();\n      colVal = this.physicalMap[bottom * cols + left];\n      this.collider.collidePlatform(\n        this,\n        left * this.tileSize,\n        bottom * this.tileSize,\n        colVal\n      );\n    }\n\n    if (this.dir === \"right\") {\n      [right, top] = this.getTopRightPos();\n      colVal = this.physicalMap[top * cols + right];\n      this.collider.collidePlatform(\n        this.player,\n        right * this.tileSize,\n        top * this.tileSize,\n        colVal\n      );\n  \n      [right, bottom] = this.getBottomRightPos();\n      colVal = this.physicalMap[bottom * cols + right];\n\n      this.collider.collidePlatform(\n        this.player,\n        right * this.tileSize,\n        bottom * this.tileSize,\n        colVal\n      );\n\n    }\n\n  }\n\n  updateProjectile() {\n    this.oldX = this.x;\n    this.oldY = this.y;\n\n    this.x += this.velX;\n    this.y += this.velY;\n  }\n\n  drawProjectile(ctx, frameCount) {\n    if (this.hit) return;\n\n    this.updateProjectile();\n    if (this.dir === \"up\") {\n      ctx.scale(1, -1);\n\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * 43 + (((frameCount % this.frameNum) + 1) * 21),\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, -this.y + this.height,\n        this.width, this.height\n      );\n      ctx.scale(1, -1);\n\n\n    } else if (this.dir === \"down\") {\n\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * 43 + (((frameCount % this.frameNum) + 1) * 21),\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n\n\n    } else if (this.dir === \"right\") {\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x-this.frameWidth, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  static fireball(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 35,\n      height: 12,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n\n      frameStartX: 10,\n      frameStartY: 277,\n      frameWidth: 65,\n      frameHeight: 16,\n      frameNum: 8,\n      image: \"./assets/fireball.png\",\n      damage: 25\n    };\n  }\n\n  static fireballVert(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 12,\n      height: 35,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n\n      frameStartX: 10,\n      frameStartY: 400,\n      frameWidth: 22,\n      frameHeight: 35,\n      frameNum: 8,\n      image: \"./assets/fireball.png\",\n      damage: 25\n    };\n  }\n\n  static helibullet(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 25,\n      height: 25,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n      frameStartX: 420,\n      frameStartY: 330,\n      frameWidth: 15,\n      frameHeight: 15,\n      frameNum: 1,\n      image: \"./assets/footEn.png\",\n      damage: 10\n    };\n  }\n}\n\nexport default Projectile;\n\n// const fireball = {\n//   name: \"fireball\"\n// }\n\n\n// };","import GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Enemy extends GameObject {\n  constructor(options) {\n    super(options);\n    this.velX = (options.velX) ? options.velX : 0;\n    this.velY = (options.velY) ? options.velY : 0;\n    this.enemy = this.loadImage(options.image);\n    this.frameNum = options.frameNum;\n    this.dir = options.dir || \"right\";\n    this.frameStartX = 68;\n    this.frameStartY = 290;\n    this.frameWidth = 116;\n    this.frameHeight = 80;\n    this.projectiles = {};\n    this.dying = false;\n    this.dead = false;\n    this.health = options.health;\n    this.damage = options.damage;\n    this.isHit = false;\n\n\n    this.setHit = this.setHit.bind(this);\n    this.setDying = this.setDying.bind(this);\n    this.getMidX = this.getMidX.bind(this);\n    this.getMidY = this.getMidY.bind(this);\n\n    this.loadImage = this.loadImage.bind(this);\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n\n    // this.callAttack();\n  }\n\n  getMidX(x = this.x) {\n    return x + (this.width/2);\n  }\n\n  getMidY(y = this.y) {\n    return y + (this.height/2);\n  }\n\n\n\n  loadImage(image) {\n    let enemy = new Image();\n    enemy.src = image;\n    return enemy;\n  }\n\n  setHit(damage = 10) {\n    if (!this.isHit) {\n      this.isHit = true;\n      this.hitCooldown = setTimeout(() => {\n        this.isHit = false;\n      }, 500);\n      this.health -= damage;\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      setTimeout(() => {\n        this.dead = true;\n      }, 1000);\n    }\n  }\n\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    if (this.dir === \"left\") {\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x-this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n    \n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + 30,\n          this.bottomSide() - 23],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - 40,\n          this.bottomSide() - 23],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n\n\n\n  ////////CPU\n  callAttack() {\n    this.attackInterval = setInterval(() => {\n      this.shootProj();\n\n    }, 200);\n  }\n\n\n\n\n\n\n  move(canvas) {\n    this.oldX = this.x;\n    this.x += this.velX;\n\n\n    if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n      this.velX *= -1;\n      this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n    } \n  }\n\n  //////\n  \n\n\n  static helicopter(pos) {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/footEn.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 200,\n      height: 125,\n      velX: 3,\n      dir: \"right\",\n      health: 100,\n      damage: 10\n    };\n  }\n\n  hitBox(obj1, obj2) {\n\n    if (obj1.y < obj2.y + obj2.height && obj1.y > obj2.y + (obj2.height / 2)) {\n      if ((obj2.dir === \"right\" && obj1.x < obj2.x + obj2.width && obj1.x + obj1.width > obj2.x + (obj2.width / 3)) ||\n        (obj2.dir === \"left\" && obj1.x < obj2.x + (obj2.width * (2 / 3)) && obj1.x + obj1.width > obj2.x)){\n        return true;\n      }\n\n    } else if ((obj1.y < (obj2.height / 2) && obj1.y > obj2.y) || obj1.y + obj1.height > obj2.y) {\n      if (obj1.x < obj2.x + obj2.width && obj1.x + obj1.width > obj2.x) {\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nexport default Enemy;\n","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Helicopter extends Enemy {\n  constructor(options) {\n    super(options);\n    this.velX = options.velX || 3;\n    this.velY = 0;\n    this.image = options.image || \"./assets/footEn.png\";\n    this.enemy = this.loadImage(this.image);\n    this.frameNum = options.frameNum || 3;\n    this.frameStartX = options.frameStartX || 68;\n    this.frameStartY = options.frameStartY || 290;\n    this.frameWidth = options.frameWidth || 116;\n    this.frameHeight = options.frameHeight || 80;\n    this.projectiles = {};\n    this.bounds = options.bounds;\n\n    this.loadImage = this.loadImage.bind(this);\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n    this.callAttack();\n  }\n\n\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    if (this.dir === \"left\") {\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x - this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n\n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + (this.width * 0.15),\n            this.bottomSide() - (this.height * 0.184)],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - (this.width * 0.2),\n            this.bottomSide() - (this.height * 0.184)],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      setTimeout(() => {\n        this.dead = true;\n      }, 300);\n    }\n  }\n\n  ////////CPU\n  callAttack() {\n    this.attackInterval = setInterval(() => {\n\n      this.shootProj();\n\n    }, 500);\n  }\n\n  move(canvas) {\n    this.oldX = this.x;\n    this.x += this.velX;\n\n    if (this.bounds) {\n      if ((this.x + (this.width / 2)) < this.bounds[0] || this.x + (this.width / 2) > this.bounds[1]) {\n        this.velX *= -1;\n        this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n      }\n    } else {\n      if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n        this.velX *= -1;\n        this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n      }\n\n    }\n\n  }\n\n  //////\n\n\n\n  static hel1(pos, bounds, dir = \"right\", velY) {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/footEn.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 200,\n      height: 125,\n      health: 100,\n      velX: (dir === \"left\") ? -3 : 3,\n      velY: velY || 0,\n      dir: dir,\n      bounds: bounds\n    };\n  }\n  \n  static hel2(pos, bounds, dir = \"right\") {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/footEn.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 150,\n      height: 85,\n      health: 100,\n      velX: (dir === \"left\") ? -3 : 3,\n      dir: dir,\n      bounds: bounds\n    };\n  }\n\n}\n\nexport default Helicopter;\n","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Spider extends Enemy {\n  constructor(options) {\n    super(options);\n    this.velX = options.velX || 0;\n    this.velY = options.velY || 1;\n    this.image = options.image;\n    this.enemy = this.loadImage(this.image);\n    this.frameNum = options.frameNum || 4;\n    this.frameStartX = 0;\n    this.frameStartY = 0;\n    this.frameWidth = options.frameWidth || 92.5;\n    this.frameHeight = options.frameHeight || 102;\n    this.frameCount = 0;\n    this.bounds = options.bounds;\n    this.damage = options.damage;\n\n\n    this.projectiles = {};\n\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n    this.startFrameCount = this.startFrameCount.bind(this);\n\n\n  }\n\n  startFrameCount() {\n    this.enemyInterval = setInterval(() => {\n      this.frameCount++;\n    }, 1000 / 30);\n  }\n\n  drawEnemy(ctx, frameCount = this.frameCount) {\n    this.setDying();\n\n    ctx.beginPath();\n    ctx.moveTo(this.getMidX(this.pos[0]), this.pos[1]);\n    ctx.lineTo(this.getMidX(this.pos[0]), this.getMidY(this.y));\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"rgba(255, 255, 255, 0.5)\";\n    ctx.stroke();\n    ctx.closePath();\n\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n      let count = Math.floor(frameCount / 2.5) % this.frameNum;\n      // let x = (count > 0) ? 20 : this.frameStartX;\n\n\n      ctx.scale(1, -1);\n\n      ctx.drawImage(\n        this.enemy,\n        // (Math.floor(frameCount / 2) % this.frameNum) * this.frameWidth + this.frameStartX,\n        (count % this.frameNum) * this.frameWidth,\n        // (0) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, -this.y - this.height,\n        this.width, this.height\n      );\n      ctx.scale(1, -1);\n\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n\n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + 30,\n          this.bottomSide() - 23],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - 40,\n          this.bottomSide() - 23],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      setTimeout(() => {\n        this.dead = true;\n      }, 300);\n    }\n  }\n\n  ////////CPU\n  // callAttack() {\n  //   this.attackInterval = setInterval(() => {\n\n  //     this.shootProj();\n\n  //   }, 500);\n  // }\n\n  // move(canvas) {\n  //   this.oldX = this.x;\n  //   this.x += this.velX;\n\n\n  //   if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n  //     this.velX *= -1;\n  //     this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n  //   }\n  // }\n\n\n\n  move(canvas) {\n    this.oldY = this.y;\n    this.y += this.velY;\n\n    if (this.bounds) {\n      if ((this.y + (this.height)) < this.bounds[0] || this.y + (this.height) > this.bounds[1]) {\n        this.velY *= -1;\n        // this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n      }\n    } else {\n      if ((this.y + (this.height)) < 0 || this.y + (this.height) > canvas.height) {\n        this.velY *= -1;\n        // this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n      }\n\n    }\n\n  }\n  //////\n\n\n\n  static spider1(pos, bounds, dir = \"right\") {\n    return {\n      name: \"spider\",\n      image: \"./assets/spider.png\",\n      frameNum: 15,\n      pos: pos,\n      width: 93,\n      height: 102,\n      health: 110,\n      velX: 0,\n      velY: 1,\n      dir: dir,\n      damage: 25,\n      bounds: bounds\n    };\n  }\n  static spider2(pos, bounds, dir = \"right\") {\n    return {\n      name: \"spider\",\n      image: \"./assets/spider.png\",\n      frameNum: 15,\n      pos: pos,\n      width: 60.5,\n      height: 76,\n      health: 70,\n      velX: 0,\n      velY: 1.5,\n      dir: dir,\n      damage: 30,\n      bounds: bounds\n    };\n  }\n  static spider3(pos, bounds, dir = \"right\") {\n    return {\n      name: \"spider\",\n      image: \"./assets/spider.png\",\n      frameNum: 15,\n      pos: pos,\n      width: 46.5,\n      height: 56,\n      health: 70,\n      velX: 0,\n      velY: 2.5,\n      dir: dir,\n      bounds: bounds,\n      damage: 50\n    };\n  }\n\n}\n\nexport default Spider;\n","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Vinehead extends Enemy {\n  constructor(options) {\n    super(options);\n    this.player = options.player;\n    this.velX = options.velX || 0;\n    this.velY = 0;\n    this.image = options.image || \"./assets/vinehead.png\";\n    this.enemy = this.loadImage(this.image);\n    this.frameNum = options.frameNum || 8;\n    this.frameStartX = 0;\n    this.frameStartY = 0;\n    this.frameWidth = options.frameWidth || 57;\n    this.frameHeight = options.frameHeight || 87;\n    this.active = true;\n    this.opening = false;\n    this.projectiles = {};\n    this.playerCheckTimeout = \"\";\n    this.damage = 20;\n\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    // this.setPlayerCheckInterval = this.setPlayerCheckInterval.bind();\n    this.checkPlayerPos = this.checkPlayerPos.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n\n\n  }\n\n  checkPlayerPos(x, y, homing) {\n    if (y > this.y) {\n      this.velY = 1;\n    } else {\n      this.velY = -1;\n    }\n\n    if ((y > this.y && y < this.y + this.height) && (x > this.x || x < this.x) ) {\n      this.velX = (this.dir === \"left\") ? -5 : 5;\n    } else {\n      this.velX = (this.dir === \"left\") ? -1 : 1;\n    }\n\n    if (x > this.x && this.dir === \"left\") {\n      // clearTimeout(this.playerCheckTimeout);\n      this.playerCheckTimeout = setTimeout(() => {\n        this.velX = 1;\n        this.dir = \"right\";\n      }, 1000);\n    } else if (x < this.x && this.dir === \"right\") {\n      // clearTimeout(this.playerCheckTimeout);\n      this.playerCheckTimeout = setTimeout(() => {\n        this.velX = -1;\n        this.dir = \"left\";\n\n      }, 1000);\n      \n    } else if ((x > this.x && this.dir === \"right\") || (x < this.x && this.dir === \"left\")) {\n      clearTimeout(this.playerCheckTimeout);\n    }\n  }\n\n  setPlayerCheckInterval(player) {\n    // debugger\n    this.playerCheckInterval = setInterval(() => {\n      this.checkPlayerPos(player);\n    }, 2);\n  }\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    if (this.dir === \"right\") {\n      let count = Math.floor(frameCount / 2.5) % this.frameNum;\n\n\n      ctx.drawImage(\n        this.enemy,\n        (Math.floor(frameCount / 1.5) % this.frameNum) * this.frameWidth,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x - this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n\n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + 30,\n          this.bottomSide() - 23],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - 40,\n          this.bottomSide() - 23],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      setTimeout(() => {\n        this.dead = true;\n      }, 300);\n    }\n  }\n\n  ////////CPU\n  // callAttack() {\n  //   this.attackInterval = setInterval(() => {\n\n  //     this.shootProj();\n\n  //   }, 500);\n  // }\n\n  move(canvas, x, y) {\n    this.oldY = this.y;\n    this.oldX = this.x;\n    this.x += this.velX;\n    this.y += this.velY;\n    this.checkPlayerPos(x, y);\n\n    // if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n    //   this.velX *= -1;\n    //   this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n    // }\n  }\n\n  //////\n\n\n\n  static vine1(pos, player, dir = \"right\") {\n    \n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 65,\n      height: 95,\n      health: 75,\n      velX: 1,\n      dir: dir,\n      player: player\n    };\n  }\n  static vine2(pos, player, dir = \"right\") {\n    \n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 100,\n      height: 145,\n      health: 120,\n      velX: 1,\n      dir: dir,\n      player: player\n    };\n  }\n  static vine3(pos, player, dir = \"right\") {\n    \n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 35,\n      height: 45,\n      health: 50,\n      velX: 1,\n      dir: dir,\n      player: player\n    };\n  }\n  \n\n}\n\nexport default Vinehead;\n","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\nimport Vinehead from \"./Vinehead\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass BossVinehead extends Enemy {\n  constructor(options) {\n    super(options);\n    this.player = options.player;\n    this.velX = options.velX || 0;\n    this.velY = 0;\n    this.image = options.image || \"./assets/vinehead.png\";\n    this.enemy = this.loadImage(this.image);\n    this.frameNum = options.frameNum || 8;\n    this.frameStartX = 0;\n    this.frameStartY = 0;\n    this.frameWidth = options.frameWidth || 57;\n    this.frameHeight = options.frameHeight || 87;\n    this.active = true;\n    this.opening = false;\n    this.projectiles = {};\n    this.playerCheckTimeout = \"\";\n    this.damage = 50;\n    this.attacking = false;\n    this.charging = false;\n    this.frameCount = 0;\n\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    // this.setPlayerCheckInterval = this.setPlayerCheckInterval.bind();\n    this.checkPlayerPos = this.checkPlayerPos.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n    this.charge = this.charge.bind(this);\n    this.startFrameCount = this.startFrameCount.bind(this);\n\n    this.startFrameCount();\n  }\n\n  startFrameCount() {\n    this.bossInterval = setInterval(() => {\n      this.frameCount++;\n    }, 1000 / 30);\n\n    this.attackTimeout = setTimeout(() => {\n      this.attack();\n    }, 1000);\n  }\n\n  spawnEnemies() {\n    // if (this.enemies.length < 8) {\n    //   this.enemiesnew Vinehead(Vinehead.vine3([500, 100], this.player));\n    // }\n  }\n\n  attack() {\n    this.attacking = true;\n    this.chargeTimeout = setTimeout(() => {\n      this.charge();\n    }, 2500);\n  }\n\n  charge() {\n    this.charging = true;\n    this.velX = -10;\n  }\n  checkPlayerPos(x, y, homing) {\n\n  }\n\n  setPlayerCheckInterval(player) {\n    this.playerCheckInterval = setInterval(() => {\n      this.checkPlayerPos(player);\n    }, 2);\n  }\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n\n    \n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    let y = ((this.attacking && \n      (this.frameCount % 3 === 0 || this.frameCount % 3 === 1)) ||\n      this.charging) ? 87 : this.frameStartY;\n    if (this.dir === \"right\") {\n      let count = Math.floor(frameCount / 2.5) % this.frameNum;\n      ctx.drawImage(\n        this.enemy,\n        (Math.floor(this.frameCount / 1.5) % this.frameNum) * this.frameWidth,\n        y,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (this.frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        y,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x - this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n\n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + 30,\n          this.bottomSide() - 23],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - 40,\n          this.bottomSide() - 23],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      setTimeout(() => {\n        this.dead = true;\n      }, 300);\n    }\n  }\n\n  ////////CPU\n\n  \n  backUp() {\n    this.charging = false;\n    this.velX = 2;\n  }\n\n  move(canvas, x, y) {\n    this.oldX = this.x;\n    this.x += this.velX;\n    if (this.x < 160) {\n      this.x = 160;\n      // this.attacking = false;\n      this.backUp();\n    } else if (this.x > 650) {\n      this.velX = 0;\n      this.attacking = false;\n      this.x = 650;\n\n      this.attackTimeout = setTimeout(() => {\n        this.attack();\n      }, 10000);\n    }\n  }\n\n  //////\n\n\n\n  static boss1(pos, player, dir = \"right\") {\n\n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 260,\n      height: 370,\n      health: 1200,\n      velX: 0,\n      dir: \"left\",\n      player: player\n    };\n  }\n\n\n\n}\n\nexport default BossVinehead;\n","import Tile from \"../Objects/Platforms/Tile\";\nimport Music from \"../util/Music\";\nimport Enemy from \"../Objects/Enemies/Enemy\";\nimport Helicopter from \"../Objects/Enemies/Helicopter\";\nimport Flower from \"../Objects/Enemies/Flower\";\nimport Spider from \"../Objects/Enemies/Spider\";\nimport Vinehead from \"../Objects/Enemies/Vinehead\";\nimport BossVinehead from \"../Objects/Enemies/BossVinehead\";\n\nclass Level {\n  constructor(options) {\n    this.ctx = options.ctx;\n    this.player = options.player;\n    this.mapKeys = options.mapKeys;\n    this.screen = 1;\n    this.renderMap = options.renderMap || this.mapKeys[this.screen].renderMap;\n    this.physicalMap = options.physicalMap || this.mapKeys[this.screen].physicalMap;\n    this.cols = 15;\n    this.rows = 10;\n    this.tileSize = options.tileSize;\n    this.tileMap = this.loadImage();\n    this.mapTileSize = this.tileMap.width / this.rows;\n    this.enemies = this.mapKeys[this.screen].enemies;\n    this.enemyCount = 1;\n    this.theme = new Music({src: this.mapKeys[this.screen].theme});\n    \n    this.levelLayers = this.loadImages(this.mapKeys[this.screen].levelLayers);\n    \n\n    this.getTile = this.getTile.bind(this);\n    this.getLeft = this.getLeft.bind(this);\n    this.getRight = this.getRight.bind(this);\n    this.getTop = this.getTop.bind(this);\n    this.getBottom = this.getBottom.bind(this);\n    this.drawLevel = this.drawLevel.bind(this);\n    this.loadImage = this.loadImage.bind(this);\n    this.loadLevel = this.loadLevel.bind(this);\n    this.enemiesInterval = this.enemiesInterval.bind(this);\n    this.spawnEnemies = this.spawnEnemies.bind(this);\n\n    this.loadImages = this.loadImages.bind(this);\n    this.renderBackground = this.renderBackground.bind(this);\n    this.renderMid = this.renderMid.bind(this);\n    this.renderFront = this.renderFront.bind(this);\n    // this.loadImage(this.ctx);\n\n    this.enemiesInterval();\n\n  }\n\n//15 x 10\n\n  loadImage() {\n    let tileMap = new Image();\n    tileMap.src = \"./assets/tileGen.png\";\n    return tileMap;\n  }\n\n  loadImages(images) {\n    let background = new Image();\n    background.src = images.background;\n\n    let mid = (images.mid) ? new Image() : null;\n    (mid) ? mid.src = images.mid : \"\";\n\n    let front = (images.front) ? new Image() : null;\n    (front) ? front.src = images.front : \"\";\n\n    return {\n      background,\n      mid,\n      front\n    };\n  }\n\n  renderBackground(ctx, canvas) {\n\n      ctx.drawImage(\n        this.levelLayers.background,\n        0,\n        0,\n        900,\n        600,\n        0,\n        0,\n        canvas.width,\n        canvas.height\n      );\n  }\n\n  renderMid(ctx, canvas) {\n\n    ctx.drawImage(\n      this.levelLayers.mid,\n      0,\n      0,\n      900,\n      600,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n  }\n\n  renderFront(ctx, canvas) {\n\n    ctx.drawImage(\n      this.levelLayers.front,\n      0,\n      0,\n      900,\n      600,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n  }\n\n  getTile(col, row) {\n    return this.renderMap[row * this.cols + col];\n  }\n\n  getLeft(col, row) {\n    return Math.floor(col * this.tileSize);\n  }\n  getRight(col, row) {\n    return Math.floor((col * this.tileSize) + this.tileSize);\n  }\n  getTop(col, row) {\n    return Math.floor(row * this.tileSize - this.tileSize);\n  }\n  getBottom(col, row) {\n    return Math.floor(row * this.tileSize);\n  }\n\n  enemiesInterval() {\n    if (this.screen < 6) return;\n    this.spawnInterval = setInterval(() => {\n      if (!this.enemies[1]) {\n        clearInterval(this.spawnInterval);\n      }\n      this.spawnEnemies();\n    }, 8000);\n  }\n\n  spawnEnemies() {\n\n    if (Object.keys(this.enemies).length >= 8) return;\n    this.enemyCount++;\n    let key = this.enemyCount;\n    let y = Math.random() * 600;\n    this.enemies[key] = new Vinehead(Vinehead.vine2([890, y], this.player, \"left\"));\n  }\n\n  loadLevel(num) {\n    // if (this.screen + num === 0) return;\n    this.screen += num;\n\n    this.renderMap = this.mapKeys[this.screen].renderMap;\n    this.physicalMap = this.mapKeys[this.screen].physicalMap;\n    this.enemies = this.mapKeys[this.screen].enemies;\n    if (this.mapKeys[this.screen].levelLayers) {\n\n      this.levelLayers = this.loadImages(this.mapKeys[this.screen].levelLayers);\n    }\n    if (this.mapKeys[this.screen].theme) {\n      let muted = this.theme.music.muted;\n      this.theme.pause();\n      this.theme = new Music({ src: this.mapKeys[this.screen].theme });\n      this.theme.play();\n      this.theme.music.muted = muted;\n    }\n    this.enemiesInterval();\n\n  }\n\n  drawLevel(ctx) {\n\n    for (let c = 0; c < this.cols; c++) {\n      for (let r = 0; r < this.rows; r++) {\n        let tile = this.getTile(c, r);\n        let tileCut = (tile % 8 === 0) ? 8 : (tile % 8);\n\n        if (tile > 0) {\n\n          ctx.drawImage(\n            this.tileMap,\n            (tileCut - 1) * (this.tileMap.width/ 8),\n            (Math.floor(tile / 8) * (this.tileMap.width / 8)),\n            64,\n            64,\n            c * this.tileSize,\n            r * this.tileSize,\n            this.tileSize,\n            this.tileSize\n          );\n        }\n      }\n    }\n  }\n\n\n  static level1() {\n    return {\n      1: {\n        renderMap: [\n          9,  0,  0,  0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0, 38, 39,  0,  0,  0,  0,  0,\n          0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 42,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         28,  0,  0,  0,  0, 22, 23, 23, 63,  0,  0,  0,  0,  0,  0,\n          1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0, 29, 29, 29, 29,\n          9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3, 27, 27, 27,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0,  0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          3,  3,  3, 40,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0, 23,  2,  2,  2, 24,  0,  0,  0,\n          1,  2, 34,  0,  0,  0,  0, 17,  0,  0,  0, 18,  0,  0,  0,\n          0,  0,  0, 34,  0,  0,  0, 17,  0,  0,  0, 18,  0,  0,  0,\n          1,  1,  1,  1,  2,  2,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        // physicalMap: [\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,\n        //   6,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n        //   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        // ],\n        enemies: {\n          // 1: new Spider(Spider.spider2([470, 0], [0, 350])),\n          // 2: new Helicopter(Helicopter.hel1([570, 50], \"left\")),\n          // 3: new Flower(Flower.flow1([600, 500])),\n          // 4: new Flower(Flower.flow1([400, 320])),\n          // 5: new Flower(Flower.flow1([240, 500])),\n \n        },\n        theme: \"./assets/Sound/ff9_stirring_forest.mp3\",\n        levelLayers: {\n          background: \"./assets/Level1/lv1_back.png\",\n          mid: \"./assets/Level1/lv1_mid.png\",\n          front:  \"./assets/Level1/lv1_front.png\"\n        }\n      },\n      2: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0, 29, 29, 29,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0, 53, 54,  1,  1,  2,  0,  0,  0,  0,  0,  0,\n          0,  0,  0, 57, 58,  9, 16, 16, 16,  0,  0, 29, 29, 29, 29,\n          0, 53, 54,  5,  5,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n          1,  5,  5,  5, 11,  0,  0,  0,  0,  0,  0,  5,  5,  5,  5\n        ],\n        physicalMap: [\n        //0       2       4       6       8      10      12\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 17,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 17,  0,\n          0,  0,  0,  0,  0,  0,  0, 12, 39,  0,  0,  0,  0, 17,  0,\n          0,  0,  0,  0,  0,  0,  0,  4, 17,  0,  0,  0,  0, 17,  0,\n          0,  0, 19, 20,  0,  0,  0,  4, 30, 30,  0,  0,  0, 17,  0,\n          0,  0,  4,  5,  0,  0, 37,  4, 40,  0,  0,  0,  0, 31, 16,\n          0,  0,  9,  8,  0,  0,  4,  5,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  4,  5,  0,  0,  0, 31, 15, 15, 15,\n          0,  0,  0,  0,  0, 35,  0,  5,  0,  0,  0,  0,  4,  0,  0,\n          1,  1,  1,  1,  2,  0,  0,  5,  0,  0,  0,  0,  4,  0,  0\n        ],\n        levelLayers: {\n          background: \"./assets/Level1/lvl2_back.png\",\n          mid: \"./assets/Level1/lvl2_mid.png\",\n          front: \"./assets/Level1/lvl2_front.png\"\n        },\n\n        enemies: {\n          1: new Helicopter(Helicopter.hel2([10, 10], [0, 700])),\n          // 2: new Helicopter(Helicopter.hel2([570, 0], [0, 700], \"left\")),\n          3: new Helicopter(Helicopter.hel2([10, 140], [0, 335], \"left\")),\n          4: new Spider(Spider.spider1([600, 0], [0, 380])),\n          5: new Spider(Spider.spider2([520, 0], [20, 440])),\n          6: new Spider(Spider.spider3([150, 0], [20, 250]))\n\n          // 3: new Flower(Flower.flow2([120, 200])),\n          // 4: new Flower(Flower.flow1([400, 320])),\n          // 5: new Flower(Flower.flow1([240, 500])),\n \n        }\n      },\n      3: {\n        renderMap: [\n        //0       2       4       6       8      10      12\n          0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         16,  8,  0,  0,  0, 16,  0,  0,  0, 16,  0,  3,  1,  1,  1,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4, 50,  5,  5,\n         29, 29, 29, 30,  0,  0,  0,  0,  0,  0,  0,  4,  5,  5,  5,\n          0,  0, 40,  0,  0,  0,  0,  0,  0,  0,  0, 55,  5, 40,  5,\n          0,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  5,  5,  5\n        ],\n\n        physicalMap: [\n        //0       2       4       6       8      10      12\n          0, 18, 58,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18, 58,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18, 58,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18, 58,  0,  0,  0, 33,  0,  0,  0,  0,  0,  0, 37, 39,\n          0, 18,  0,  0,  0,  0, 41, 34,  0,  0,  0, 37, 39,  0,  0,\n         16,  8,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  1,  1,  1,\n          0,  0,  0,  0,  0,  0, 33, 33, 33,  0,  0, 44, 16, 42,  3,\n         15, 15, 15, 30,  0,  0, 16, 16, 45,  0,  0,  0,  0,  0,  0,\n          5,  0, 40,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          5,  5,  0,  0, 15, 15, 15, 15, 15, 20,  0, 33, 33, 33, 33\n        ],\n        enemies: {\n          // 1: new Helicopter(Helicopter.hel1([100, 25])),\n          // 3: new Flower(Flower.flow2([250, 140])),\n          // 5: new Vinehead(Vinehead.vine1([500, 100], this.player)),\n          // 6: new Vinehead(Vinehead.vine3([800, 20], this.player)),\n\n          // 4: new Flower(Flower.flow2([450, 140])),\n\n        },\n        levelLayers: {\n          background: \"./assets/Level1/lvl3_back.png\",\n          mid: \"./assets/Level1/lvl3_mid.png\",\n          front: \"./assets/Level1/lvl3_front.png\"\n        },\n      },\n      4: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  0,  0,  0,  3,  5,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4, 28,\n          1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n          9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 16, 16, 16, 16,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  5,  5,  5,  5,  5,  0,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0, 38, 39,  0,  0,  0, 42, 41, 39,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         38, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  8,  0,  0,  0,  2,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n          9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  7,  7,  7,  7,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  9,  0,  0,  0, 10,  0,  1,  1,  1,  1\n        ],\n        enemies: {\n          1: new Helicopter(Helicopter.hel2([500, 0])),\n          // // 3: new Flower(Flower.flow2([290, 190])),\n          4: new Vinehead(Vinehead.vine3([500, 100], this.player)),\n          5: new Vinehead(Vinehead.vine3([300, 450], this.player)),\n          6: new Vinehead(Vinehead.vine3([850, 500], this.player)),\n          7: new Vinehead(Vinehead.vine1([800, -20], this.player)),\n\n          // 4: new Flower(Flower.flow2([530, 190])),\n\n        }\n      },\n      5: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         29, 29, 29, 29, 29, 29, 29,  0, 29, 29, 29, 29, 29, 29, 29,\n          1,  1,  1,  1,  1,  1,  2,  0,  3,  1,  1,  1,  1,  1,  1,\n          5,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 13,  5,  5,\n         28,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4, 28,\n          1,  1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n         16, 16, 16,  0,  0,  0,  0,  0,  0,  0,  0,  5,  5,  5,  5,\n          0,  0,  0,  0,  0, 29, 29, 29, 29, 29,  3,  1,  1,  1,  1,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  5,  5,  5,  5,  5,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  0,  1,  1,  1,  1,  1,  1,  1,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,\n          7,  7,  7,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,  1,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  1,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        enemies: {\n          1: new Vinehead(Vinehead.vine3([10, 530], this.player)),\n          2: new Vinehead(Vinehead.vine3([830, 0], this.player)),\n          3: new Vinehead(Vinehead.vine2([600, 600], this.player)),\n          4: new Vinehead(Vinehead.vine1([500, 100], this.player)),\n          5: new Vinehead(Vinehead.vine2([200, 450], this.player)),\n          6: new Vinehead(Vinehead.vine2([850, 500], this.player)),\n          7: new Vinehead(Vinehead.vine1([800, -20], this.player)),\n        }\n      },\n      6: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0, 13,  5,  5,  5, 49,  5,  5,  5,\n          0,  0,  0,  0,  0,  0,  0,  0, 16, 16, 16, 16, 16, 16, 16,\n          2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         28,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          3,  1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         28,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          5, 29, 29, 29,  0, 29, 29,  0, 47, 47, 47, 47, 47, 47, 47,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        enemies: {\n          1: new BossVinehead(BossVinehead.boss1([500, 100], this.player))\n        },\n        theme: \"./assets/Sound/dk3_boss_boogie.mp3\"\n      }\n    };\n  }\n  // static level2() {\n  //   return {\n  //     1: {\n  //       renderMap: [\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0, 38, 39,  0,  0,  0,  0,  0,\n  //         0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6\n  //       ],\n  //       physicalMap: [\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  1,  1,\n  //         1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n  //       ],\n  //       enemies: {\n  //         1: new Helicopter(Helicopter.hel1([100, 100])),\n  //         2: new Helicopter(Helicopter.hel1([570, 50], \"left\")),\n  //         3: new Flower(Flower.flow1([600, 500])),\n  //         4: new Flower(Flower.flow1([400, 320])),\n  //         5: new Flower(Flower.flow1([240, 500])),\n  //       }\n  //     }\n  //   };\n  // }\n\n}\n\nexport default Level;\n\n\n// [\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0, 38, 39,  0,  0,  0,  0,  0,\n//           0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6\n//         ],","class GameHUD {\n  constructor(options) {\n    // this.health = options.health;\n    // this.name = name;\n    this.fire = this.loadImage();\n    \n\n    this.drawHealth = this.drawHealth.bind(this);\n    this.loadImage = this.loadImage.bind(this);\n    this.drawHUD = this.drawHUD.bind(this);\n    this.drawAmmo = this.drawAmmo.bind(this);\n  }\n\n  loadImage() {\n    let img = new Image();\n    img.src = \"./assets/fireball.png\";\n    return img;\n  }\n\n  drawHUD(canvas, ctx, player, frameCount) {\n    ctx.beginPath();\n    ctx.rect(0, (canvas.height - 40), canvas.width, 40);\n    ctx.fillStyle = \"black\";\n    ctx.fill();\n    ctx.closePath();\n\n    this.drawHealth(canvas, ctx, player);\n    this.drawAmmo(canvas, ctx, player, frameCount);\n  }\n\n\n  drawHealth(canvas, ctx, player) {\n\n    let healthMeter = ((canvas.width / 3) * (player.health / 200));\n\n    ctx.beginPath();\n    ctx.rect(20, (canvas.height - 30), (canvas.width / 3), 18);\n    ctx.fillStyle = \"rgba(255, 255, 255, .1)\";\n    ctx.fill();\n    ctx.closePath();\n\n    ctx.beginPath();\n    ctx.rect(20, (canvas.height - 30), (healthMeter), 18);\n    ctx.fillStyle = \"red\";\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  drawAmmo(canvas, ctx, player, frameCount) {\n    // let healthMeter = ((canvas.width - ) * (player.health / 200));\n    let fromRight = canvas.width - 50;\n    ctx.beginPath();\n    ctx.arc(fromRight, canvas.height - 24, 5, 0, 2 * Math.PI, false);\n    ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n    ctx.fill();\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n    ctx.stroke();\n    ctx.closePath();\n\n    ctx.beginPath();\n    ctx.arc(canvas.width - 100, canvas.height - 24, 5, 0, 2 * Math.PI, false);\n    ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n    ctx.fill();\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n    ctx.stroke();\n    ctx.closePath();\n\n    ctx.beginPath();\n    ctx.arc(canvas.width - 150, canvas.height - 24, 5, 0, 2 * Math.PI, false);\n    ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n    ctx.fill();\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n    ctx.stroke();\n    ctx.closePath();\n\n\n    switch (Object.keys(player.fireballs).length) {\n      case 0: \n        ctx.drawImage(\n          this.fire,\n          (frameCount % 8) * 43 + (((frameCount % 8) + 1) * 21),\n          400,\n          22,\n          35,\n          canvas.width - 165, canvas.height - 40,\n          30, 30\n        );\n      case 1:\n        ctx.drawImage(\n          this.fire,\n          (frameCount % 8) * 43 + (((frameCount % 8) + 1) * 21),\n          400,\n          22,\n          35,\n          canvas.width - 114, canvas.height - 40,\n          30, 30\n        );\n      case 2:\n        ctx.drawImage(\n          this.fire,\n          (frameCount % 8) * 43 + (((frameCount % 8) + 1) * 21),\n          400,\n          25,\n          35,\n          canvas.width - 64, canvas.height - 40,\n          30, 30\n        );\n      default:\n        break;\n\n    }\n\n\n  }\n\n\n}\n\nexport default GameHUD;","import Player from \"./Player\";\nimport Level from \"./Levels/Level\";\nimport Tile from \"./Objects/Platforms/Tile\";\nimport Collision from \"./util/Collision\";\nimport Controller from \"./util/Controller\";\nimport Enemy from \"./Objects/Enemies/Enemy\";\nimport Helicopter from \"./Objects/Enemies/Helicopter\";\nimport Flower from \"./Objects/Enemies/Flower\";\nimport GameHUD from \"./GameHUD\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\n\nclass Game {\n  constructor(canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.player = new Player(this.ctx, this.canvas);\n    this.controller = new Controller(this.player);\n    this.tileSize = this.canvas.width / 15;\n    this.level = new Level({ \n      ctx: ctx,\n      mapKeys: Level.level1(),\n      player: this.player,\n      tileSize: this.tileSize\n    });\n    // this.physicalMap = this.level.physicalMap;\n    this.collider = new Collision(this.tileSize);\n    this.HUD = new GameHUD();\n    this.frameCount = 0;\n    this.enemies = this.level.enemies;\n    this.gameOver = false;\n    this.embers = new Image();\n    this.embers.src = \"./assets/embers.jpg\";\n    // this.getPlayerTilePos = this.getPlayerTilePos.bind(this);\n\n    this.getTopLeftPos = this.getTopLeftPos.bind(this);\n    this.getTopRightPos = this.getTopRightPos.bind(this);\n    this.getBottomLeftPos = this.getBottomLeftPos.bind(this);\n    this.getBottomRightPos = this.getBottomRightPos.bind(this);\n    this.playerPlatformCheck = this.playerPlatformCheck.bind(this);\n    this.playerUpdate = this.playerUpdate.bind(this);\n    this.projectilePlatformCheck = this.projectilePlatformCheck.bind(this);\n    this.renderFireballs = this.renderFireballs.bind(this);\n    this.renderEnemies = this.renderEnemies.bind(this);\n    this.renderEnemyProjectiles = this.renderEnemyProjectiles.bind(this);\n    this.startFrameCount = this.startFrameCount.bind(this);\n    this.runGame = this.runGame.bind(this);\n    this.isGameOver = this.isGameOver.bind(this);\n    this.win = this.win.bind(this);\n    this.enemiesCleared = this.enemiesCleared.bind(this);\n    this.loadLevel = this.loadLevel.bind(this);\n    this.resizeGame = this.resizeGame.bind(this);\n\n    this.enemyCount = Object.keys(this.enemies).length;\n    this.cleared = false;\n\n    this.startFrameCount();\n  }\n\n  startFrameCount() {\n    this.frameInterval = setInterval(() => {\n      this.frameCount++;\n    }, (1000 / 30));\n  }\n\n  resizeGame(canvas) {\n    this.tileSize = canvas.width / 15;\n    this.level.tileSize = this.tileSize;\n  }\n\n  getTopLeftPos() {\n    let x = Math.floor(this.player.leftSide() / this.tileSize);\n    let y = Math.floor(this.player.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getTopRightPos() {\n    let x = Math.floor(this.player.rightSide() / this.tileSize);\n    let y = Math.floor(this.player.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomLeftPos() {\n    let x = Math.floor(this.player.leftSide() / this.tileSize);\n    let y = Math.floor(this.player.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomRightPos() {\n    let x = Math.floor(this.player.rightSide() / this.tileSize);\n    let y = Math.floor(this.player.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n\n\n  enemiesCleared() {\n    if (Object.keys(this.enemies).length === 0) {\n      this.cleared = true;\n      return true;\n    }else {\n      return false;\n    }\n  }\n\n  playerPlatformCheck() {\n    let colVal;\n    let top;\n    let bottom;\n    let right;\n    let left;\n    let cols = 15;\n    let rows = 10;\n    let floorCount = 0;\n    let climbCount = 0;\n\n    let physMap = this.level.physicalMap;\n\n    [left, top] = this.getTopLeftPos();\n    colVal = physMap[top * cols + left];\n    colVal === 33 ? floorCount++ : \"\";\n    this.collider.collidePlatform(\n      this.player,\n      left * this.tileSize,\n      top * this.tileSize,\n      colVal, \n      this.tileSize    \n    );\n\n    [right, top] = this.getTopRightPos();\n    colVal = physMap[top * cols + right];\n    colVal === 33 ? floorCount++ : \"\";\n\n    this.collider.collidePlatform(\n      this.player,\n      right * this.tileSize,\n      top * this.tileSize,\n      colVal,\n      this.tileSize\n    );\n\n    [left, bottom] = this.getBottomLeftPos();\n    colVal = physMap[bottom * cols + left];\n    (colVal === 0) ? floorCount++ : \"\";\n    colVal === 33 ? floorCount++ : \"\";\n    this.collider.collidePlatform(\n      this.player,\n      left * this.tileSize,\n      bottom * this.tileSize,\n      colVal,\n      this.tileSize\n    );\n\n\n    [right, bottom] = this.getBottomRightPos();\n    colVal = physMap[bottom * cols + right];\n    (colVal === 0) ? floorCount++ : \"\";\n    colVal === 33 ? floorCount++ : \"\";\n    if (this.player.canClimb && climbCount === 0) this.player.canClimb = false;\n    if (floorCount === 2) {\n      this.player.onGround = false;\n      // if (this.player.jumpCount === 2) this.player.jumpCount -=;\n    }\n    this.collider.collidePlatform(\n      this.player,\n      right * this.tileSize,\n      bottom * this.tileSize,\n      colVal,\n      this.tileSize\n    );\n  }\n\n\n  projectilePlatformCheck(projectile) {\n    let colVal;\n    let top;\n    let bottom;\n    let right;\n    let left;\n    let cols = 15;\n    let physMap = this.level.physicalMap;\n\n    if (projectile.dir === \"left\") {\n      [left, top] = projectile.getTopLeftPos();\n      colVal = physMap[top * cols + left];\n      this.collider.collidePlatform(\n        projectile,\n        left * this.tileSize,\n        top * this.tileSize,\n        colVal,\n        this.tileSize\n      );\n\n      [left, bottom] = projectile.getBottomLeftPos();\n      colVal = physMap[bottom * cols + left];\n      this.collider.collidePlatform(\n        projectile,\n        left * this.tileSize,\n        bottom * this.tileSize,\n        colVal,\n        this.tileSize\n      );\n    }\n\n    if (projectile.dir === \"right\") {\n      [right, top] = projectile.getTopRightPos();\n      colVal = physMap[top * cols + right];\n      this.collider.collidePlatform(\n        projectile,\n        right * this.tileSize,\n        top * this.tileSize,\n        colVal,\n        this.tileSize\n      );\n\n      [right, bottom] = projectile.getBottomRightPos();\n      colVal = physMap[bottom * cols + right];\n\n      this.collider.collidePlatform(\n        projectile,\n        right * this.tileSize,\n        bottom * this.tileSize,\n        colVal,\n        this.tileSize\n      );\n\n    }\n\n  }\n  \n\n  playerUpdate() {\n    this.player.setRunning();\n    this.player.isIdle();\n    this.player.setOldPos();\n\n    if (!this.player.idle) {\n      \n      // if (this.player.direction === \"right\") {\n      //   if (this.player.onGround && !this.player.keydown) {\n      //     this.player.velX < 1 ? (this.player.velX = 0) : (this.player.velX /= CONSTANTS.FRICTION);\n      //   }\n      // } else if (this.player.direction === \"left\") {\n      //   if (this.player.onGround && !this.player.keydown) {\n      //     this.player.velX > -1 ? (this.player.velX = 0) : (this.player.velX /= CONSTANTS.FRICTION);\n      //   }\n      // }\n      this.player.x += this.player.velX;\n    }\n\n    if (this.player.climbing) {\n        this.player.isClimbing();\n    } else {\n        this.player.inAir();\n\n    }\n\n    this.collider.collidePlayer(this.player, this.canvas, this.cleared);\n    this.playerPlatformCheck();\n  }\n\n  renderEnemies() {\n    if (this.level.screen === 6) {\n      this.enemyCount = Object.keys(this.level.enemies).length;\n    }\n    \n    if (!this.cleared) {\n      for (let key in this.enemies) {\n        if (this.enemies[key].dying && !this.enemies[key].dead) continue;\n        this.projectilePlatformCheck(this.enemies[key]);\n\n        if (!this.enemies[key].dead) {\n          this.enemies[key].move(this.canvas, this.player.x, this.player.y);\n          this.collider.collideEnemy(this.player, this.enemies[key]);\n          this.enemies[key].drawEnemy(this.ctx, this.frameCount);\n\n        } else {\n          delete this.enemies[key];\n          this.enemyCount -= 1;\n        }\n      }\n      this.enemiesCleared();\n    }\n  }\n\n  renderFireballs() {\n    if (Object.keys(this.player.fireballs).length !== 0) {\n      for (let key in this.player.fireballs) {\n        let fireball = this.player.fireballs[key];\n        \n        if (this.enemyCount !== 0) {\n          for (let key in this.enemies) {\n            this.collider.collideEnemy(fireball, this.enemies[key]);\n          }\n        }\n        \n        this.projectilePlatformCheck(fireball);\n\n        (!fireball.isHit) ? \n          fireball.drawProjectile(this.ctx, this.frameCount) :\n          delete this.player.fireballs[key];\n      }\n    }\n  }\n\n  renderEnemyProjectiles() {\n    ///Check if any enemies\n    Object.values(this.enemies).forEach((enemy) => {\n      if (Object.keys(enemy.projectiles).length !== 0) {\n        for (let key in enemy.projectiles) {\n          this.collider.collideProjectile(this.player, enemy.projectiles[key]);\n\n          this.projectilePlatformCheck(enemy.projectiles[key]);\n\n          (!enemy.projectiles[key].isHit) ?\n            enemy.projectiles[key].drawProjectile(this.ctx, this.frameCount) :\n            delete enemy.projectiles[key];\n        }\n      }\n    });\n  }\n\n  loadLevel() {\n    // debugger\n    if (((this.player.x + (this.player.width / 2)) >= this.canvas.width)) {\n      this.level.loadLevel(1);\n      this.cleared = false;\n      this.enemies = this.level.enemies;\n      this.enemyCount = Object.keys(this.enemies);\n      this.player.x = 0;\n    } else if ((this.player.x + (this.player.width / 2)) <= 0) {\n      this.level.loadLevel(-1);\n      this.player.x = this.canvas.width - this.player.width;\n    }\n  }\n\n  isGameOver() {\n    this.win();\n    this.gameOver = (this.player.dead || this.won) ? true : false;\n  }\n\n  //refactor\n  win() {\n    this.won = (this.level.screen === 6 && Object.keys(this.enemies).length === 0) ? true : false;\n  }\n  \n\n  runGame() {\n    this.isGameOver();\n\n    if (!this.gameOver) {\n      this.loadLevel();\n      this.level.renderBackground(this.ctx, this.canvas);\n      if (this.level.screen > 3) this.level.drawLevel(this.ctx);\n      this.player.drawPlayer(this.frameCount);\n      this.playerUpdate();\n      if (this.level.screen < 4) {\n        this.level.renderMid(this.ctx, this.canvas);\n        this.level.renderFront(this.ctx, this.canvas);\n      }\n\n\n      // this.enemies[1].drawEnemy(this.ctx, this.frameCount);\n      this.renderEnemies();\n      // this.enemies[1].callAttack(this.frameCount);\n      \n      this.renderEnemyProjectiles();\n      this.renderFireballs();\n      \n      this.HUD.drawHUD(this.canvas, this.ctx, this.player, this.frameCount);\n\n    } else {\n      if (!this.won) {\n        this.level.theme.pause();\n        // this.ctx.beginPath();\n        // this.ctx.rect(0, 0, this.canvas.width, this.canvas.height);\n        // this.ctx.fillStyle = \"rgba(255, 255, 255, .1)\";\n        // this.ctx.fill();\n        // this.ctx.closePath();\n\n        // // let img = new Image();\n        // // img.src = \"./assets/embers.jpg\";\n        // // img.onload = () => {\n        //   // ctx.drawImage(img, 0, 0);\n            this.ctx.drawImage(\n                this.embers,\n                0,\n                0,\n                852,\n                400,\n                0, 0,\n                900, 600\n          );\n        // };\n  \n        this.ctx.font = \"130px Arial\";\n        this.ctx.fillStyle = \"rgb(46, 2, 2)\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"GAME OVER\", this.canvas.width / 2, this.canvas.height / 2);\n\n\n        this.ctx.font = \"50px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"Press Enter to Play Again\", this.canvas.width / 2, 400);\n\n      } else {\n        this.level.theme.pause();\n\n        this.ctx.drawImage(\n          this.embers,\n          0,\n          0,\n          852,\n          400,\n          0, 0,\n          900, 600\n        );\n        this.ctx.font = \"80px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"CONGRATS!\", this.canvas.width / 2, 160);\n\n\n        this.ctx.font = \"80px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"YOU BEAT LEVEL 1\", this.canvas.width / 2, this.canvas.height / 2);\n\n\n        this.ctx.font = \"50px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"Press Enter to Play Again\", this.canvas.width / 2, 400);\n      }\n\n    } \n    \n  }\n\n}\n\n\n\nexport default Game;","import Controller from \"./util/Controller\";\nimport Level from \"./Levels/Level\";\nimport Player from \"./Player\";\nimport Game from \"./Game\";\nimport GameHUD from \"./GameHUD\";\n\n\nclass GameView {\n  constructor (canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    // this.game = new Game(this.canvas, this.ctx);\n    this.game = null;\n    this.splash = new Image();\n    this.splash.src = \"./assets/firegirl.jpg\";\n    // this.HUD = new GameHUD();\n    // this.tileMap = this.loadImage();\n\n\n    this.renderGame = this.renderGame.bind(this);\n    this.loadImage = this.loadImage.bind(this);\n    this.newGame = this.newGame.bind(this);\n\n    window.addEventListener(\"keydown\", (event) => {\n      if ((!this.game || this.game.gameOver) && event.keyCode === 13) {\n        this.newGame();\n\n      } else if (event.keyCode === 77) {\n        this.game.level.theme.mute();\n        // let music = document.getElementById(\"theme\");\n        // (music.muted === false) ? music.muted = true : false;\n      }\n    });\n\n    window.addEventListener(\"resize\", () => {\n      if (this.game) {\n        this.game.resizeGame(this.canvas);\n      }\n    });\n  }\n\n  loadImage() {\n    let tileMap = new Image();\n    tileMap.src = \"./assets/tileGen.png\";\n    return tileMap;\n  }\n\n  newGame() {\n    if (!this.game || this.game.gameOver) {\n      this.game = new Game(this.canvas, this.ctx);\n      this.game.level.theme.play();\n    }\n  }\n\n\n  renderGame() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    if (!this.game) {\n        this.ctx.drawImage(\n            this.splash,\n            0,\n            0,\n            920,\n            644,\n            0, 0,\n            this.canvas.width, this.canvas.height\n        );\n\n      this.ctx.font = \"50px Arial\";\n      this.ctx.fillStyle = \"rgb(46, 2, 2)\";\n      this.ctx.textAlign = \"center\";\n      this.ctx.fillText(\"FIRE GIRL\", this.canvas.width / 2, this.canvas.height / 3);\n\n      this.ctx.font = \"1.1em Arial\";\n      this.ctx.fillStyle = \"pink\";\n      this.ctx.textAlign = \"center\";\n      this.ctx.fillText(\"Press Enter to Play\", this.canvas.width / 2, this.canvas.height * (2/3));\n    }\n\n    if (this.game) {\n\n      this.game.runGame();\n      \n    }\n\n    window.requestAnimationFrame(this.renderGame);\n  }\n\n\n\n\n} \n\n\n\nexport default GameView;\n\n","import \"./styles/index.scss\";\nimport GameView from \"./GameView\";\n\n// const greeting = testObj?.key2?.key3 || testObj.key1;\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  let canvas = document.getElementById(\"gameCanvas\");\n  let ctx = canvas.getContext(\"2d\");\n  let gameView = new GameView(canvas, ctx);\n\n  gameView.renderGame();\n\n  // ctx.beginPath();\n  // ctx.rect(0, 0, canvas.width, canvas.height);\n  // ctx.fillStyle = \"rgba(255, 255, 255, .1)\";\n  // ctx.fill();\n  // ctx.closePath();\n\n  // ctx.font = \"130px Arial\";\n  // ctx.fillStyle = \"red\";\n  // ctx.textAlign = \"center\";\n  // ctx.fillText(\"GAME OVER\", canvas.width / 2, canvas.height / 2);\n  // let img = new Image();\n  // img.src = \"./assets/firegirl.jpg\";\n  // img.onload = () => {\n  //   // ctx.drawImage(img, 0, 0);\n  //         ctx.drawImage(\n  //         img,\n  //         0,\n  //         0,\n  //         920,\n  //         644,\n  //         0, 0,\n  //         900, 600\n  //   );\n  // };\n  \n\n  // let fromRight = canvas.width - 50;\n  // ctx.beginPath();\n  // ctx.arc(fromRight, canvas.height - 30, 5, 0, 2 * Math.PI, false);\n  // ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.fill();\n  // ctx.lineWidth = 5;\n  // ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.stroke();\n  // ctx.closePath();\n\n  // ctx.beginPath();\n  // ctx.arc(canvas.width - 80, canvas.height - 30, 5, 0, 2 * Math.PI, false);\n  // ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.fill();\n  // ctx.lineWidth = 5;\n  // ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.stroke();\n  // ctx.closePath();\n\n  // ctx.beginPath();\n  // ctx.arc(canvas.width - 110, canvas.height - 30, 5, 0, 2 * Math.PI, false);\n  // ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.fill();\n  // ctx.lineWidth = 5;\n  // ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.stroke();\n  // ctx.closePath();\n  \n  // img.onload = () => {\n  //   ctx.drawImage(\n  //     img,\n  //     22 ,\n  //     400,\n  //     35,\n  //     35,\n  //     0, 0,\n  //     35, 35\n  //   );\n  // };\n\n\n\n});\n"],"sourceRoot":""}