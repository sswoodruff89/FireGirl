{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/Controller.js","webpack:///./src/Objects/GameObject.js","webpack:///./src/util/Music.js","webpack:///./src/Objects/Characters/Character.js","webpack:///./src/Player.js","webpack:///./src/util/Collision.js","webpack:///./src/Objects/Projectiles/Projectile.js","webpack:///./src/Objects/Enemies/Enemy.js","webpack:///./src/Objects/Enemies/Helicopter.js","webpack:///./src/Objects/Enemies/Flower.js","webpack:///./src/Objects/Enemies/Vinehead.js","webpack:///./src/Objects/Enemies/BossVinehead.js","webpack:///./src/Levels/Level.js","webpack:///./src/GameHUD.js","webpack:///./src/Game.js","webpack:///./src/GameView.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Controller","player","this","keysPressed","keydown","keyup","window","addEventListener","event","idle","KEYS","keyCode","left","direction","velX","right","up","down","jump","fire","shootFire","onGround","19","37","38","39","40","65","68","13","GameObject","options","pos","ctx","canvas","width","height","x","y","oldX","oldY","tileSize","rightSide","leftSide","topSide","bottomSide","getTopLeftPos","getTopRightPos","getBottomLeftPos","getBottomRightPos","Math","floor","Music","music","document","createElement","src","id","setAttribute","style","display","play","pause","mute","muted","Character","vel","health","spriteMap","Image","CONSTANTS","Player","character","loadImage","fireballs","idleWidth","runWidth","velY","isRunning","jumpCount","frameCount","isHit","dying","dead","drawPlayer","setOldPos","inAir","isIdle","whichDirection","setRunning","setHit","setDying","drawImage","scale","vert","keys","length","Projectile","fireballVert","fireball","damage","hitCooldown","setTimeout","Collision","collidePlayer","collidePlatform","collidePlatTop","collidePlatBottom","collidePlatLeft","collidePlatRight","collidePlatformSlopeRight","collideEnemy","collisionPlatformKeys","1","obj","colVal","2","3","4","5","6","7","8","9","10","11","12","cleared","obj1","obj2","gameObj","tileLeft","tileBottom","console","log","slopeY","tan","PI","oldSlopeY","getDirY","tileTop","tileRight","gameObject","proj","image","dir","frameStartX","frameStartY","frameWidth","frameHeight","frameNum","collider","timeOutHit","updateProjectile","drawProjectile","hitTimeout","top","bottom","physicalMap","hit","Enemy","enemy","projectiles","drawEnemy","shootProj","callAttack","helibullet","attackInterval","setInterval","Helicopter","clearInterval","Flower","active","opening","count","Vinehead","playerCheckTimeout","checkPlayerPos","homing","clearTimeout","playerCheckInterval","BossVinehead","attacking","charging","charge","startFrameCount","bossInterval","attackTimeout","attack","chargeTimeout","backUp","Level","mapKeys","screen","renderMap","cols","rows","tileMap","mapTileSize","enemies","enemyCount","theme","levelLayers","loadImages","getTile","getLeft","getRight","getTop","getBottom","drawLevel","loadLevel","enemiesInterval","spawnEnemies","renderBackground","renderMid","renderFront","hel1","flow2","vine1","vine3","hel2","vine2","boss1","background","mid","front","col","row","spawnInterval","random","num","tile","tileCut","GameHUD","drawHealth","drawHUD","drawAmmo","img","beginPath","rect","fillStyle","fill","closePath","healthMeter","fromRight","arc","lineWidth","strokeStyle","stroke","Game","controller","level","level1","HUD","gameOver","embers","playerPlatformCheck","playerUpdate","projectilePlatformCheck","renderFireballs","renderEnemies","renderEnemyProjectiles","runGame","isGameOver","win","enemiesCleared","frameInterval","floorCount","physMap","projectile","move","values","forEach","collideProjectile","won","font","textAlign","fillText","GameView","game","splash","renderGame","newGame","clearRect","requestAnimationFrame","getElementById","getContext"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","class Controller {\n  constructor(player) {\n    // this.gameview = gameview;\n    this.player = player;\n\n    this.keysPressed = {};\n\n    this.keydown = this.keydown.bind(this);\n    this.keyup = this.keyup.bind(this);\n    window.addEventListener(\"keydown\", this.keydown);\n    window.addEventListener(\"keyup\", this.keyup);\n  }\n\n  keydown(event) {\n    this.player.idle = false;\n    this.player.keydown = true;\n\n    switch (Controller.KEYS[event.keyCode]) {\n      case \"left\":\n        this.keysPressed.left = true;\n        this.player.direction = \"left\";\n        this.player.velX = -6;\n\n        break;\n      case \"right\":\n        this.keysPressed.right = true;\n        this.player.direction = \"right\";\n        this.player.velX = 7;\n        break;\n      case \"up\":\n        this.keysPressed.up = true;\n        break;\n      case \"down\":\n        this.keysPressed.down = true;\n        break;\n      case \"jump\":\n        this.keysPressed.jump = true;\n        this.player.jump();\n        break;\n      case \"fire\":\n\n        this.keysPressed.fire = true;\n        if (this.keysPressed.up) {\n          this.player.shootFire(\"up\");\n        } else if (this.keysPressed.down && !this.player.onGround) {\n          this.player.shootFire(\"down\");\n        } else {\n          this.player.shootFire();\n\n        }\n        break;\n      case \"space\":\n        // this.gameview.Ticker.paused = (this.gameview.Ticker.paused) ? false: true;\n        break;\n      default:\n        return;\n    }\n\n  }\n\n  keyup(event) {\n    // if (Controller.KEYS[event.keyCode] === \"left\" ||\n    //   Controller.KEYS[event.keyCode] === \"right\") {\n    //   this.player.keydown = false;\n    //   // this.player.velX = 0;\n    //   // this.player.idle =ß true;\n    //   return;\n    // }\n    switch (Controller.KEYS[event.keyCode]) {\n      case \"left\":\n        this.keysPressed.left = false;\n        // this.player.velX = 0;\n\n        if (!this.keysPressed.left && !this.keysPressed.right) this.player.velX = 0;\n\n        break;\n      case \"right\":\n        this.keysPressed.right = false;\n        // this.player.velX *= -1;\n        if (!this.keysPressed.left && !this.keysPressed.right) this.player.velX = 0;\n        break;\n      case \"up\":\n        this.keysPressed.up = false;\n        break;\n      case \"down\":\n        this.keysPressed.down = false;\n        break;\n      case \"jump\":\n        this.keysPressed.jump = false;\n        break;\n      case \"fire\":\n        this.keysPressed.fire = false;\n        break;\n      case \"space\":\n        // this.gameview.Ticker.paused = (this.gameview.Ticker.paused) ? false: true;\n        break;\n      default:\n        return;\n    }\n\n\n    this.player.idle = true;\n    // this.keysPressed = {};\n    // console.log(Controller.KEYS[event.keyCode])\n    // debugger\n\n  }\n}\n\n\nController.KEYS = {\n  19: 'space',\n  37: 'left',\n  38: 'up',\n  39: 'right',\n  40: 'down',\n  65: 'jump',\n  68: 'fire',\n  13: 'enter'\n};\n\n\n\nexport default Controller;","\n\nclass GameObject {\n  constructor(options) {\n    this.name = options.name;\n    this.pos = options.pos;\n    this.ctx = options.ctx;\n    this.canvas = options.canvas;\n    this.width = options.width;\n    this.height = options.height;\n    this.x = options.pos[0];\n    this.y = options.pos[1];\n    this.oldX = this.x;\n    this.oldY = this.y;\n    this.tileSize = 60;\n\n\n\n    this.rightSide = this.rightSide.bind(this);\n    this.leftSide = this.leftSide.bind(this);\n    this.topSide = this.topSide.bind(this);\n    this.bottomSide = this.bottomSide.bind(this);\n\n    this.getTopLeftPos = this.getTopLeftPos.bind(this);\n    this.getTopRightPos = this.getTopRightPos.bind(this);\n    this.getBottomLeftPos = this.getBottomLeftPos.bind(this);\n    this.getBottomRightPos = this.getBottomRightPos.bind(this);\n  }\n\n  rightSide() {\n    return this.x + this.width;\n  }\n\n  leftSide() {\n    return this.x;\n  }\n\n  topSide() {\n    return this.y;\n  }\n\n  bottomSide() {\n    return this.y + this.height;\n  }\n\n  getTopLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n\n  getTopRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n}\n\nexport default GameObject;","class Music {\n    constructor(options){\n        this.music = document.createElement(\"audio\");\n        this.music.src = options.src;\n        this.music.id = \"theme\";\n        this.music.setAttribute(\"preload\", \"auto\");\n        this.music.setAttribute(\"controls\", \"none\");\n        this.music.setAttribute(\"loop\", \"true\");\n        this.music.setAttribute(\"muted\", \"false\");\n        this.music.style.display = \"none\";\n\n        this.play = this.play.bind(this);\n        this.pause = this.pause.bind(this);\n        this.mute = this.mute.bind(this);\n    };\n\n    play() {\n        debugger\n        this.music.play();\n    }\n    pause() {\n        this.music.pause();\n    }\n\n    mute() {\n        this.music.muted =!this.music.muted;\n    }\n\n}\n\nexport default Music;","import GameObject from \"../GameObject\";\n\nconst GRAVITY = 0.5;\nconst FRICTION = 0.5;\n\nclass Character extends GameObject {\n  constructor(options) {\n    super({ \n      name: options.name, \n      pos: options.pos, \n      ctx: options.ctx, \n      width: options.width,\n      height: options.height\n    });\n    this.vel = [0, 0];\n    this.health = 200;\n \n    \n  }\n\n  loadImage() {\n    let spriteMap = new Image();\n    spriteMap.src = \"./assets/charSprite.png\";\n    return spriteMap;\n    // this.tileMap.onLoad = this.drawLevel(ctx);\n  }\n\n  // drawModel() {\n  //   this.ctx.beginPath();\n  //   this.ctx.rect(20, 40, 40, 70);\n  //   this.ctx.fillStyle = \"#FF000\";\n  //   this.ctx.fill();\n  //   this.ctx.closePath();\n\n  // }\n\n  \n}\n\nexport default Character;","import Character from \"./Objects/Characters/Character\";\nimport Collision from \"./util/Collision\";\nimport Projectile from \"./Objects/Projectiles/Projectile\";\n\n\nconst CONSTANTS = {\n  GRAVITY: 1,\n  FRICTION: 1.5,\n  MAX_VEL: 50,\n};\n\nclass Player {\n  constructor(ctx, canvas) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.character = new Character({\n      name: \"Seisa\",\n      pos: [20, 350],\n      ctx: this.ctx,\n      canvas: this.canvas,\n      width: 40,\n      height: 54\n    });\n    this.health = this.character.health;\n    this.spriteMap = this.character.loadImage();\n    this.fireballs = {};\n    \n    this.vel = this.character.vel;\n    this.x = this.character.x;\n    this.y = this.character.y;\n    this.idleWidth = 35;\n    this.runWidth = 40;\n    this.oldX = this.x;\n    this.oldY = this.y;\n    this.width = this.character.width;\n    this.height = this.character.height;\n    this.velX = this.vel[0];\n    this.velY = this.vel[1];\n    this.onGround = false;\n    this.idle = true;\n    this.keydown = false;\n    this.isRunning = false;\n    this.direction = \"right\";\n    this.jumpCount = 2;\n    this.frameCount = 0;\n    this.isHit = false;\n    this.dying = false;\n    this.dead = false;\n\n\n\n    this.drawPlayer = this.drawPlayer.bind(this);\n    this.jump = this.jump.bind(this);\n    // this.move = this.move.bind(this);\n    this.shootFire = this.shootFire.bind(this);\n\n\n    this.setOldPos = this.setOldPos.bind(this);\n    this.inAir = this.inAir.bind(this);\n    this.isIdle = this.isIdle.bind(this);\n    this.whichDirection = this.whichDirection.bind(this);\n    this.setRunning = this.setRunning.bind(this);\n    this.setHit = this.setHit.bind(this);\n    this.setDying = this.setDying.bind(this);\n\n    // this.getDirX = this.getDirX.bind(this);\n    // this.getDirY = this.getDirY.bind(this);\n  }\n\n  drawPlayer(frameCount) {\n// .74\n// .59\n    this.setDying();\n    // this.isIdle();\n    if (this.isHit && frameCount % 3 === 0 ) return;\n    if (this.velX === 0) {\n      if (this.direction === \"right\") {\n        this.ctx.drawImage(\n          this.spriteMap,\n          (Math.floor(frameCount / 2) % 10) * 147,\n          251,\n          147,\n          251,\n          this.x, this.y,\n          this.width, this.height\n          // this.width - 5, this.height\n        );\n      } else {\n        this.ctx.scale(-1, 1);\n        this.ctx.drawImage(\n          this.spriteMap,\n          (Math.floor(frameCount / 2) % 10) * 147,\n          251,\n          147,\n          251,\n          -this.x - this.width, this.y,\n          // -this.x - this.width - 5, this.y,\n          this.width, this.height\n          // this.width - 5, this.height\n        );\n        this.ctx.scale(-1, 1);\n      }\n    } else if (this.velX > 0) {\n      this.ctx.drawImage(\n        this.spriteMap,\n        (frameCount % 10) * 186,\n        0,\n        186,\n        251,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else if (this.velX < 0) {\n      this.ctx.scale(-1, 1);\n      this.ctx.drawImage(\n        this.spriteMap,\n        (frameCount % 10) * 186,\n        0,\n        186,\n        251,\n        -(this.x) - this.width, this.y,\n        this.width, this.height\n      );\n      this.ctx.scale(-1, 1);\n\n    } \n    ///change this.width and height based on movement\n  }\n\n  shootFire(vert = null) {\n    if (Object.keys(this.fireballs).length === 3) return;\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.fireballs[i]) {\n        key = i;\n        break;\n      }\n    }\n    if (vert === \"up\") {\n      this.fireballs[key] = new Projectile(\n        Projectile.fireballVert(\n          [this.rightSide() - (this.width / 2),\n          this.bottomSide() + this.height],\n          0, -20, vert)\n      );\n    } else if (vert === \"down\") {\n      this.fireballs[key] = new Projectile(\n        Projectile.fireballVert(\n          [this.rightSide() - (this.width / 2),\n          this.bottomSide() - this.height],\n          0, 20, vert)\n      );\n      this.velY -= 10;\n      this.jumpCount -= 1;\n    } else if (this.direction === \"right\") {\n      this.fireballs[key] = new Projectile(\n        Projectile.fireball(\n          [this.rightSide() - this.width,\n          this.bottomSide() - (this.height / 1.8)],\n          20, 0, \"right\")\n        );\n    } else if (this.direction === \"left\"){\n      this.fireballs[key] = new Projectile(\n        Projectile.fireball(\n          [this.leftSide(),\n          this.bottomSide() - (this.height / 1.8)],\n          -20, 0, \"left\")\n        );\n        \n    }\n\n  }\n    \n  setHit(damage = 10) {\n    if (!this.isHit) {\n      this.isHit = true;\n      this.hitCooldown = setTimeout(() => {\n        this.isHit = false;\n      }, 2000);\n      this.health -= damage;\n    }\n  }\n\n  setDying() {\n\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      setTimeout(() => {\n        this.dead = true;\n      }, 1000);\n    }\n  }\n\n\n  rightSide() {\n    return this.x + this.width;\n  }\n\n  leftSide() {\n    return this.x;\n  }\n\n  topSide() {\n    return this.y;\n  }\n\n  bottomSide() {\n    return this.y + this.height;\n  }\n\n  \n  setOldPos() {\n    this.oldX = this.x;\n    this.oldY = this.y;\n  }\n\n  getDirX() {\n    return this.x + this.velX;\n  }\n\n  getDirY() {\n    return this.y + this.velY;\n  }\n\n  isIdle() {\n    if (this.velX === 0 && this.velY === 0) {\n      this.idle = true;\n    } else {\n      this.idle = false;\n    }\n  }\n\n  inAir() {\n    if (!this.onGround ) {\n      this.y += this.velY;\n      (this.velY + CONSTANTS.GRAVITY > 25) ? this.velY = 25 : this.velY += CONSTANTS.GRAVITY;\n    } else {\n      this.velY = 0;\n    }\n  }\n\n  jump() {\n    if (this.jumpCount === 2) {\n      this.onGround = false;\n      this.velY = 0 - 15;\n      this.jumpCount = 1;\n    } else if (this.jumpCount === 1) {\n      this.velY = 0 - 15;\n      this.jumpCount = 0;\n    }\n  }\n\n\n\n  setRunning() {\n    if (this.velX !== 0) {\n      this.isRunning = true;\n      this.width = this.runWidth;\n    } else {\n      this.isRunning = false;\n      this.width = this.idleWidth;\n    }\n  }\n\n\n\n  whichDirection() {\n    this.direction = this.velX >= 0 ? \"right\" : \"left\";\n  }\n\n}\n\nexport default Player;","import Player from \"../Player\";\nimport Projectile from \"../Objects/Projectiles/Projectile\";\nimport Enemy from \"../Objects/Enemies/Enemy\";\n\nclass Collision {\n  constructor() {\n    this.collidePlayer = this.collidePlayer.bind(this);\n    this.collidePlatform = this.collidePlatform.bind(this);\n    this.collidePlatTop = this.collidePlatTop.bind(this);\n    this.collidePlatBottom = this.collidePlatBottom.bind(this);\n    this.collidePlatLeft = this.collidePlatLeft.bind(this);\n    this.collidePlatRight = this.collidePlatRight.bind(this);\n    this.collidePlatformSlopeRight = this.collidePlatformSlopeRight.bind(this);\n    this.collideEnemy = this.collideEnemy.bind(this);\n\n\n    this.collisionPlatformKeys = {\n      1: (obj, x, y, colVal) => {\n        this.collidePlatTop(obj, y);\n      },\n      2: (obj, x, y, colVal) => {\n        ////thin platform\n        if (obj.velY > 0) {\n          this.collidePlatTop(obj, y);\n        }\n      },\n      3: (obj, x, y, colVal) => {\n        ///top / left \n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          // this.collidePlatTop(obj, y)\n          this.collidePlatLeft(obj, x)\n        };\n      },\n      4: (obj, x, y, colVal) => {\n        ///top / left / right\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else if (this.collidePlatRight(obj, x + 60)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        };\n      },\n      5: (obj, x, y, colVal) => {\n        ///top / bottom / right\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else if (this.collidePlatBottom(obj, y + 60)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + 60);\n        };\n      },\n      6: (obj, x, y, colVal) => {\n        ///top / bottom\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          this.collidePlatBottom(obj, y + 60);\n        }\n      },\n      7: (obj, x, y, colVal) => {\n        ///thorn bottom\n        this.collidePlatBottom(obj, y + 10);\n        if (obj instanceof Player) {\n          obj.setHit(5);\n        }\n      },\n      8: (obj, x, y, colVal) => {\n        ///top / right\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + 60);\n        }\n      },\n      9: (obj, x, y, colVal) => {\n        ///left\n        this.collidePlatLeft(obj, x);\n      },\n      10: (obj, x, y, colVal) => {\n        ///right\n        this.collidePlatRight(obj, x + 60);\n      },\n      11: (obj, x, y, colVal) => {\n        ///right / left / bottom thorn\n        if (this.collidePlatLeft(obj, x)) {\n          if (obj instanceof Player) {\n            obj.setHit(5);\n          }\n          return;\n        } else if (this.collidePlatBottom(obj, y + 10)) {\n          if (obj instanceof Player) {\n            obj.setHit(5);\n          }\n          return;\n        } else {\n          this.collidePlatRight(obj, x + 60);\n          if (obj instanceof Player) {\n            obj.setHit(5);\n          }\n        }\n      },\n      12: (obj, x, y, colVal) => {\n        //top / left half in\n        if (this.collidePlatLeft(obj, x + 30)) {\n          return;\n        } else if (obj.x + obj.width > x + 30){\n          this.collidePlatTop(obj, y);\n        };\n      },\n      13: (obj, x, y, colVal) => {\n        //top / right half in\n        if (this.collidePlatRight(obj, x + 30)) {\n          return;\n        } else if (obj.x < x + 30) {\n          this.collidePlatTop(obj, y);\n        };\n      },\n      13: (obj, x, y, colVal) => {\n        //top / right half in\n        if (this.collidePlatRight(obj, x + 30)) {\n          return;\n        } else if (obj.x < x + 30) {\n          this.collidePlatTop(obj, y);\n        };\n      },\n      14: (obj, x, y, colVal) => {\n        /// bottom / left \n        if (this.collidePlatBottom(obj, y + 60)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        };\n      },\n      15: (obj, x, y, colVal) => {\n        /// bottom / right \n        if (this.collidePlatBottom(obj, y + 60)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x);\n        };\n      },\n      16: (obj, x, y, colVal) => {\n        /// bottom \n        this.collidePlatBottom(obj, y + 60);\n      },\n      17: (obj, x, y, colVal) => {\n        ///left \n          this.collidePlatLeft(obj, x);\n      }\n\n      // 12: (obj, \n      // x, y, colVal) => {\n      //   ///right / left / bottom thorn\n      //   // if (y + obj.height >)\n      //   this.collidePlatformSlopeRight(obj, x, y + 60);\n      // }\n    }\n  }\n\n  collidePlayer(player, canvas, cleared) {\n    // debugger\n    if (player.x < 0) {\n      player.x = 0.01;\n      player.velX = 0;\n    }\n     else if (player.x + player.width > canvas.width && !cleared) {\n      player.x = canvas.width - player.width;\n      player.velX = 0;\n    }\n\n    // if (player.y < 0) {\n    //   player.velY = 0;\n    //   player.y = 0.01;\n    // } else \n    if (player.y > canvas.height) {\n      // player.velY = 0;\n      // player.y = canvas.height - player.height - 0.1;\n      // player.jumpCount = 2;\n      // player.onGround = true;\n      // player.dead = true;\n      player.y = 0;\n      player.setHit(50);\n    }\n  }\n\n  collideProjectile(obj1, obj2) {\n    // if (!obj1 || !obj2) return false;\n    // if (obj2.dying || obj2.dead) return false;\n\n    if (obj1.x < obj2.x + obj2.width &&\n      obj1.x + obj1.width > obj2.x &&\n      obj1.y < obj2.y + obj2.height &&\n      obj1.y + obj1.height > obj2.y) {\n\n      obj1.velY = -(obj1.velY / 3);\n      obj1.velX = -(obj1.velX / 3);\n      ///hit\n      obj1.setHit(obj2.damage);\n      obj2.setHit();\n      ///change Hit\n      return true;\n\n    } else {\n      return false;\n    }\n  }\n\n\n\n  collideEnemy(obj1, obj2) {\n    // if (!obj1 || !obj2) return false;\n    if (obj2.dying || obj2.dead) return false;\n\n    if (obj1.x < obj2.x + obj2.width &&\n      obj1.x + obj1.width > obj2.x &&\n      obj1.y < obj2.y + obj2.height &&\n      obj1.y + obj1.height > obj2.y) {\n\n      // if (this.hitBox(obj1, obj2)) {\n      if (obj1 instanceof Player && !obj1.isHit) {\n        obj1.velY = -(obj1.velY / 3);\n        obj1.velX = -(obj1.velX / 3);\n        ///hit\n        obj1.setHit(this.damage);\n        return true;\n      }\n      if (obj1 instanceof Projectile) {\n        obj2.setHit(obj1.damage);\n        setTimeout(() => {\n          obj1.setHit();\n        }, 10);\n\n        return true;\n      }\n\n    } else {\n      return false;\n    }\n  }\n\n\n\n\n\n\n\n\n  ////////PLATFORM COLLISION\n\n  collidePlatformSlopeRight(gameObj, tileLeft, tileBottom) {\n    ///60 x60 120 y 60 120 (60, 120] [ 60, 120])\n    // debugger\n    console.log(gameObj.bottomSide());\n    console.log(gameObj.rightSide());\n    let midX = gameObj.leftSide() + (gameObj.width / 2);\n    let slopeY = ((Math.tan(45 * Math.PI / 180) / gameObj.rightSide()));\n    let oldSlopeY = ((Math.tan(45 * Math.PI / 180) / gameObj.oldX + gameObj.width))\n    console.log(slopeY);\n    if (gameObj.oldY >= tileBottom - oldSlopeY &&\n      gameObj.getDirY() + gameObj.height >= tileBottom - slopeY\n      // gameObj.oldY + gameObj.height < tileBottom - slopeY\n    ) {\n      // debugger\n      gameObj.onGround = true;\n      gameObj.y = tileBottom - gameObj.height -\n        ((Math.tan(45 * Math.PI / 180) / gameObj.rightSide())) - 0.01;\n      // gameObj.y--;\n      console.log(gameObj.y);\n    }\n  }\n\n  collidePlatTop(gameObj, tileTop) {\n    if (gameObj.bottomSide() > tileTop && (gameObj.oldY + gameObj.height) < tileTop) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        //set null\n        return true;\n      }\n      gameObj.velY = 0;\n      gameObj.y = tileTop - gameObj.height - 0.01;\n      if (gameObj instanceof Player) {\n        gameObj.onGround = true;\n        gameObj.jumpCount = 2;\n      }\n      return true;\n\n    } else {\n      if (gameObj instanceof Player) {\n        gameObj.onGround = false;\n      }\n    }\n    return false;\n  }\n\n  collidePlatBottom(gameObj, tileBottom) {\n    if (gameObj.topSide() < tileBottom && (gameObj.oldY + gameObj.height) > tileBottom) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n      }\n      gameObj.y = tileBottom + 0.05;\n      gameObj.velY = 0;\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatRight(gameObj, tileRight) {\n    if (gameObj.leftSide() < tileRight && (gameObj.oldX + gameObj.width) > tileRight) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n      }\n      gameObj.x = tileRight + 0.05;\n      // gameObj.velX = 0;\n\n\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatLeft(gameObj, tileLeft) {\n    if (gameObj.rightSide() > tileLeft && gameObj.oldX < tileLeft) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n      }\n      gameObj.x = tileLeft - gameObj.width - 0.05;\n      // gameObj.velX = 0;\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatform(gameObject, x, y, colVal) {\n    if (!colVal || !this.collisionPlatformKeys[colVal]) return;\n    this.collisionPlatformKeys[colVal](gameObject, x, y);\n    // switch (colVal) {\n    //   case 1:\n    //     this.collidePlatTop(gameObject, y);\n    //     break;\n    //   case 2:\n    //     if (gameObject.velY > 0) {\n    //       this.collidePlatTop(gameObject, y);\n    //     }\n    //     break;\n    //   case 3:\n    //     if (this.collidePlatTop(gameObject, y)) {\n    //       return;\n    //     } else if (this.collidePlatLeft(gameObject, x)) {\n    //       return;\n    //     } else {\n    //       this.collidePlatRight(gameObject, x + 60);\n    //     }\n    //     break;\n    //   case 4:\n    //     if (this.collidePlatTop(gameObject, y)) {\n    //       return;\n    //     } else if (this.collidePlatRight(gameObject, x + 60)) {\n    //       return;\n    //     } else {\n    //       this.collidePlatLeft(gameObject, x);\n    //       break;\n    //     };\n    //   case 5:\n    //     if (this.collidePlatTop(gameObject, y)) {\n    //       return;\n    //     } else if (this.collidePlatBottom(gameObject, y + 60)) {\n    //       return;\n    //     } else {\n    //       this.collidePlatRight(gameObject, x + 60);\n    //     }\n    //     break;\n    //   case 6: \n    //     if (this.collidePlatTop(gameObject, y)) {\n    //       return;\n    //     } else {\n    //       this.collidePlatBottom(gameObject, y + 60);\n    //     }\n    //     break;\n    //   case 7: \n    //     //thorn\n    //     this.collidePlatBottom(gameObject, y + 10);\n    //     if (gameObject instanceof Player) {\n    //       gameObject.setHit(5);\n    //     }\n\n    //     break;\n    //   case 8: \n    //     if (this.collidePlatTop(gameObject, y)) {\n    //       return;\n    //     } else {\n    //       this.collidePlatRight(gameObject, x + 60);\n    //     }\n    //     break;\n    //   case 9: \n    //     this.collidePlatLeft(gameObject, x);\n    //     break;\n    //   case 10:\n    //     this.collidePlatRight(gameObject, x + 60);\n    //     break;\n    //   case 11:\n    //     //thorn\n    //     if (this.collidePlatLeft(gameObject, x)) {\n    //       if (gameObject instanceof Player) {\n    //         gameObject.setHit(5);\n    //       }\n    //       return;\n    //     } else if (this.collidePlatBottom(gameObject, y + 10)) {\n    //       if (gameObject instanceof Player) {\n    //         gameObject.setHit(5);\n    //       }\n    //       return;\n    //     } else {\n    //       this.collidePlatRight(gameObject, x + 60);\n    //       if (gameObject instanceof Player) {\n    //         gameObject.setHit(5);\n    //       }\n    //     }\n    //     break;\n    // }\n  }\n\n\n}\n\n\n\nexport default Collision;\n","import GameObject from \"../GameObject\";\nimport Collision from \"../../util/Collision\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\n\nclass Projectile extends GameObject {\n  constructor(options) {\n    super(options);\n    this.proj = this.loadImage(options.image);\n    this.velX = options.velX;\n    this.velY = options.velY;\n    this.oldX = this.x;\n    this.oldY = this.y;\n    this.dir = options.dir || \"right\";\n    this.damage = options.damage;\n\n    this.frameStartX = options.frameStartX;\n    this.frameStartY = options.frameStartY;\n    this.frameWidth = options.frameWidth;\n    this.frameHeight = options.frameHeight;\n    this.frameNum = options.frameNum;\n\n\n    this.tileSize = 60;\n    \n    this.collider = new Collision();\n    this.isHit = false;\n\n\n\n    this.loadImage = this.loadImage.bind(this);\n    this.getTopLeftPos = this.getTopLeftPos.bind(this);\n    this.getTopRightPos = this.getTopRightPos.bind(this);\n    this.getBottomLeftPos = this.getBottomLeftPos.bind(this);\n    this.getBottomRightPos = this.getBottomRightPos.bind(this);\n    this.setHit = this.setHit.bind(this);\n    this.timeOutHit = this.timeOutHit.bind(this);\n    this.updateProjectile = this.updateProjectile.bind(this);\n    this.drawProjectile = this.drawProjectile.bind(this);\n\n    this.timeOutHit();\n  }\n\n  loadImage(image) {\n    let proj = new Image();\n    proj.src = image;\n    return proj;\n  }\n\n  getTopLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n\n  getTopRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n\n  setHit() {\n    this.isHit = !this.isHit;\n  }\n\n  timeOutHit() {\n    this.hitTimeout = setTimeout(() => {\n      this.setHit();\n    }, 2000);\n  }\n\n\n  platformCheck() {\n    let colVal;\n    let top;\n    let bottom;\n    let right;\n    let left;\n    let cols = 15;\n\n    if (this.dir === \"left\") {\n      [left, top] = this.getTopLeftPos();\n      colVal = this.physicalMap[top * cols + left];\n      this.collider.collidePlatform(\n        this,\n        left * this.tileSize,\n        top * this.tileSize,\n        colVal\n      );\n        \n      [left, bottom] = this.getBottomLeftPos();\n      colVal = this.physicalMap[bottom * cols + left];\n      this.collider.collidePlatform(\n        this,\n        left * this.tileSize,\n        bottom * this.tileSize,\n        colVal\n      );\n    }\n\n    if (this.dir === \"right\") {\n      [right, top] = this.getTopRightPos();\n      colVal = this.physicalMap[top * cols + right];\n      this.collider.collidePlatform(\n        this.player,\n        right * this.tileSize,\n        top * this.tileSize,\n        colVal\n      );\n  \n      [right, bottom] = this.getBottomRightPos();\n      colVal = this.physicalMap[bottom * cols + right];\n\n      this.collider.collidePlatform(\n        this.player,\n        right * this.tileSize,\n        bottom * this.tileSize,\n        colVal\n      );\n\n    }\n\n  }\n\n  updateProjectile() {\n    this.oldX = this.x;\n    this.oldY = this.y;\n\n    this.x += this.velX;\n    this.y += this.velY;\n  }\n\n  drawProjectile(ctx, frameCount) {\n    if (this.hit) return;\n\n    this.updateProjectile();\n    if (this.dir === \"up\") {\n      ctx.scale(1, -1);\n\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * 43 + (((frameCount % this.frameNum) + 1) * 21),\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, -this.y + this.height,\n        this.width, this.height\n      );\n      ctx.scale(1, -1);\n\n\n    } else if (this.dir === \"down\") {\n\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * 43 + (((frameCount % this.frameNum) + 1) * 21),\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n\n\n    } else if (this.dir === \"right\") {\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x-this.frameWidth, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  static fireball(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 55,\n      height: 16,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n\n      frameStartX: 10,\n      frameStartY: 277,\n      frameWidth: 65,\n      frameHeight: 16,\n      frameNum: 8,\n      image: \"./assets/fireball.png\",\n      damage: 25\n    };\n  }\n\n  static fireballVert(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 16,\n      height: 55,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n\n      frameStartX: 10,\n      frameStartY: 400,\n      frameWidth: 22,\n      frameHeight: 35,\n      frameNum: 8,\n      image: \"./assets/fireball.png\",\n      damage: 25\n    };\n  }\n\n  static helibullet(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 25,\n      height: 25,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n      frameStartX: 420,\n      frameStartY: 330,\n      frameWidth: 15,\n      frameHeight: 15,\n      frameNum: 1,\n      image: \"./assets/footEn.png\",\n      damage: 10\n    };\n  }\n}\n\nexport default Projectile;\n\n// const fireball = {\n//   name: \"fireball\"\n// }\n\n\n// };","import GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Enemy extends GameObject {\n  constructor(options) {\n    super(options);\n    this.velX = (options.velX) ? options.velX : 0;\n    this.velY = (options.velY) ? options.velY : 0;\n    this.enemy = this.loadImage(options.image);\n    this.frameNum = options.frameNum;\n    this.dir = options.dir || \"right\";\n    this.frameStartX = 68;\n    this.frameStartY = 290;\n    this.frameWidth = 116;\n    this.frameHeight = 80;\n    this.projectiles = {};\n    this.dying = false;\n    this.dead = false;\n    this.health = options.health;\n    this.damage = options.damage;\n    this.isHit = false;\n\n\n    this.setHit = this.setHit.bind(this);\n    this.setDying = this.setDying.bind(this);\n\n    this.loadImage = this.loadImage.bind(this);\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n\n    // this.callAttack();\n  }\n\n  loadImage(image) {\n    let enemy = new Image();\n    enemy.src = image;\n    return enemy;\n  }\n\n  setHit(damage = 10) {\n    console.log(this.health);\n    if (!this.isHit) {\n      this.isHit = true;\n      this.hitCooldown = setTimeout(() => {\n        this.isHit = false;\n      }, 500);\n      this.health -= damage;\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      setTimeout(() => {\n        this.dead = true;\n      }, 1000);\n    }\n  }\n\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    if (this.dir === \"left\") {\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x-this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n    \n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + 30,\n          this.bottomSide() - 23],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - 40,\n          this.bottomSide() - 23],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n\n\n\n  ////////CPU\n  callAttack() {\n    this.attackInterval = setInterval(() => {\n      this.shootProj();\n\n    }, 200);\n  }\n\n\n\n\n\n\n  move(canvas) {\n    this.oldX = this.x;\n    this.x += this.velX;\n\n\n    if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n      this.velX *= -1;\n      this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n    } \n  }\n\n  //////\n  \n\n\n  static helicopter(pos) {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/footEn.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 200,\n      height: 125,\n      velX: 3,\n      dir: \"right\",\n      health: 100,\n      damage: 10\n    };\n  }\n\n  hitBox(obj1, obj2) {\n\n    if (obj1.y < obj2.y + obj2.height && obj1.y > obj2.y + (obj2.height / 2)) {\n      if ((obj2.dir === \"right\" && obj1.x < obj2.x + obj2.width && obj1.x + obj1.width > obj2.x + (obj2.width / 3)) ||\n        (obj2.dir === \"left\" && obj1.x < obj2.x + (obj2.width * (2 / 3)) && obj1.x + obj1.width > obj2.x)){\n        return true;\n      }\n\n    } else if ((obj1.y < (obj2.height / 2) && obj1.y > obj2.y) || obj1.y + obj1.height > obj2.y) {\n      if (obj1.x < obj2.x + obj2.width && obj1.x + obj1.width > obj2.x) {\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nexport default Enemy;\n","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Helicopter extends Enemy {\n  constructor(options) {\n    super(options);\n    this.velX = options.velX || 3;\n    this.velY = 0;\n    this.image = options.image || \"./assets/footEn.png\";\n    this.enemy = this.loadImage(this.image);\n    this.frameNum = options.frameNum || 3;\n    this.frameStartX = options.frameStartX || 68;\n    this.frameStartY = options.frameStartY || 290;\n    this.frameWidth = options.frameWidth || 116;\n    this.frameHeight = options.frameHeight || 80;\n    this.projectiles = {};\n\n    this.loadImage = this.loadImage.bind(this);\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n    this.callAttack();\n  }\n\n\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    if (this.dir === \"left\") {\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x - this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n\n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + (this.width * 0.15),\n            this.bottomSide() - (this.height * 0.184)],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - (this.width * 0.2),\n            this.bottomSide() - (this.height * 0.184)],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      setTimeout(() => {\n        this.dead = true;\n      }, 300);\n    }\n  }\n\n  ////////CPU\n  callAttack() {\n    this.attackInterval = setInterval(() => {\n\n      this.shootProj();\n\n    }, 500);\n  }\n\n  move(canvas) {\n    this.oldX = this.x;\n    this.x += this.velX;\n\n\n    if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n      this.velX *= -1;\n      this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n    }\n  }\n\n  //////\n\n\n\n  static hel1(pos, dir = \"right\", velY) {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/footEn.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 200,\n      height: 125,\n      health: 100,\n      velX: (dir === \"left\") ? -3 : 3,\n      velY: velY || 0,\n      dir: dir\n    };\n  }\n  \n  static hel2(pos, dir = \"right\") {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/footEn.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 150,\n      height: 85,\n      health: 100,\n      velX: (dir === \"left\") ? -3 : 3,\n      dir: dir\n    };\n  }\n\n}\n\nexport default Helicopter;\n","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Flower extends Enemy {\n  constructor(options) {\n    super(options);\n    this.velX = options.velX || 0;\n    this.velY = 0;\n    this.image = options.image || \"./assets/footEn.png\";\n    this.enemy = this.loadImage(this.image);\n    this.frameNum = options.frameNum || 4;\n    this.frameStartX = 10;\n    this.frameStartY = 265;\n    this.frameWidth = options.frameWidth || 117;\n    this.frameHeight = options.frameHeight || 107;\n    this.active = true;\n    this.opening = false;\n    \n    this.projectiles = {};\n\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n\n  }\n\n  isActive() {\n\n  }\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    if (this.active) {\n      let count = Math.floor(frameCount / 2.5) % this.frameNum;\n      let x = (count > 0) ? 20 : this.frameStartX;\n\n\n      ctx.drawImage(\n        this.enemy,\n        // (Math.floor(frameCount / 2) % this.frameNum) * this.frameWidth + this.frameStartX,\n        (count % this.frameNum) * this.frameWidth + x,\n        // (0) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x - this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n\n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + 30,\n          this.bottomSide() - 23],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - 40,\n          this.bottomSide() - 23],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      setTimeout(() => {\n        this.dead = true;\n      }, 300);\n    }\n  }\n\n  ////////CPU\n  // callAttack() {\n  //   this.attackInterval = setInterval(() => {\n\n  //     this.shootProj();\n\n  //   }, 500);\n  // }\n\n  move(canvas) {\n    this.oldX = this.x;\n    this.x += this.velX;\n\n\n    if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n      this.velX *= -1;\n      this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n    }\n  }\n\n  //////\n\n\n\n  static flow1(pos, dir = \"right\") {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/plant.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 54,\n      height: 54,\n      health: 50,\n      velX: 0,\n      dir: dir\n    };\n  }\n  static flow2(pos, dir = \"right\") {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/plant.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 84,\n      height: 84,\n      health: 50,\n      velX: 0,\n      dir: dir\n    };\n  }\n  static flow3(pos, dir = \"right\") {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/plant.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 110,\n      height: 110,\n      health: 100,\n      velX: 0,\n      dir: dir\n    };\n  }\n\n}\n\nexport default Flower;\n","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Vinehead extends Enemy {\n  constructor(options) {\n    super(options);\n    this.player = options.player;\n    this.velX = options.velX || 0;\n    this.velY = 0;\n    this.image = options.image || \"./assets/vinehead.png\";\n    this.enemy = this.loadImage(this.image);\n    this.frameNum = options.frameNum || 8;\n    this.frameStartX = 0;\n    this.frameStartY = 0;\n    this.frameWidth = options.frameWidth || 57;\n    this.frameHeight = options.frameHeight || 87;\n    this.active = true;\n    this.opening = false;\n    this.projectiles = {};\n    this.playerCheckTimeout = \"\";\n    this.damage = 20;\n\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    // this.setPlayerCheckInterval = this.setPlayerCheckInterval.bind();\n    this.checkPlayerPos = this.checkPlayerPos.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n\n\n  }\n\n  checkPlayerPos(x, y, homing) {\n    if (y > this.y) {\n      this.velY = 1;\n    } else {\n      this.velY = -1;\n    }\n\n    if ((y > this.y && y < this.y + this.height) && (x > this.x || x < this.x) ) {\n      this.velX = (this.dir === \"left\") ? -5 : 5;\n    } else {\n      this.velX = (this.dir === \"left\") ? -1 : 1;\n    }\n\n    if (x > this.x && this.dir === \"left\") {\n      // clearTimeout(this.playerCheckTimeout);\n      this.playerCheckTimeout = setTimeout(() => {\n        this.velX = 1;\n        this.dir = \"right\";\n      }, 1000);\n    } else if (x < this.x && this.dir === \"right\") {\n      // clearTimeout(this.playerCheckTimeout);\n      this.playerCheckTimeout = setTimeout(() => {\n        this.velX = -1;\n        this.dir = \"left\";\n\n      }, 1000);\n      \n    } else if ((x > this.x && this.dir === \"right\") || (x < this.x && this.dir === \"left\")) {\n      clearTimeout(this.playerCheckTimeout);\n    }\n  }\n\n  setPlayerCheckInterval(player) {\n    // debugger\n    this.playerCheckInterval = setInterval(() => {\n      this.checkPlayerPos(player);\n    }, 2);\n  }\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    if (this.dir === \"right\") {\n      let count = Math.floor(frameCount / 2.5) % this.frameNum;\n\n\n      ctx.drawImage(\n        this.enemy,\n        (Math.floor(frameCount / 1.5) % this.frameNum) * this.frameWidth,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x - this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n\n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + 30,\n          this.bottomSide() - 23],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - 40,\n          this.bottomSide() - 23],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      setTimeout(() => {\n        this.dead = true;\n      }, 300);\n    }\n  }\n\n  ////////CPU\n  // callAttack() {\n  //   this.attackInterval = setInterval(() => {\n\n  //     this.shootProj();\n\n  //   }, 500);\n  // }\n\n  move(canvas, x, y) {\n    this.oldY = this.y;\n    this.oldX = this.x;\n    this.x += this.velX;\n    this.y += this.velY;\n    this.checkPlayerPos(x, y);\n\n    // if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n    //   this.velX *= -1;\n    //   this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n    // }\n  }\n\n  //////\n\n\n\n  static vine1(pos, player, dir = \"right\") {\n    \n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 65,\n      height: 95,\n      health: 75,\n      velX: 1,\n      dir: dir,\n      player: player\n    };\n  }\n  static vine2(pos, player, dir = \"right\") {\n    \n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 100,\n      height: 145,\n      health: 120,\n      velX: 1,\n      dir: dir,\n      player: player\n    };\n  }\n  static vine3(pos, player, dir = \"right\") {\n    \n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 35,\n      height: 45,\n      health: 50,\n      velX: 1,\n      dir: dir,\n      player: player\n    };\n  }\n  \n\n}\n\nexport default Vinehead;\n","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\nimport Vinehead from \"./Vinehead\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass BossVinehead extends Enemy {\n  constructor(options) {\n    super(options);\n    this.player = options.player;\n    this.velX = options.velX || 0;\n    this.velY = 0;\n    this.image = options.image || \"./assets/vinehead.png\";\n    this.enemy = this.loadImage(this.image);\n    this.frameNum = options.frameNum || 8;\n    this.frameStartX = 0;\n    this.frameStartY = 0;\n    this.frameWidth = options.frameWidth || 57;\n    this.frameHeight = options.frameHeight || 87;\n    this.active = true;\n    this.opening = false;\n    this.projectiles = {};\n    this.playerCheckTimeout = \"\";\n    this.damage = 50;\n    this.attacking = false;\n    this.charging = false;\n    this.frameCount = 0;\n\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    // this.setPlayerCheckInterval = this.setPlayerCheckInterval.bind();\n    this.checkPlayerPos = this.checkPlayerPos.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n    this.charge = this.charge.bind(this);\n    this.startFrameCount = this.startFrameCount.bind(this);\n\n    this.startFrameCount();\n  }\n\n  startFrameCount() {\n    this.bossInterval = setInterval(() => {\n      this.frameCount++;\n    }, 1000 / 30);\n\n    this.attackTimeout = setTimeout(() => {\n      this.attack();\n    }, 1000);\n  }\n\n  spawnEnemies() {\n    // if (this.enemies.length < 8) {\n    //   this.enemiesnew Vinehead(Vinehead.vine3([500, 100], this.player));\n    // }\n  }\n\n  attack() {\n    this.attacking = true;\n    this.chargeTimeout = setTimeout(() => {\n      this.charge();\n    }, 2500);\n  }\n\n  charge() {\n    this.charging = true;\n    this.velX = -10;\n  }\n  checkPlayerPos(x, y, homing) {\n\n  }\n\n  setPlayerCheckInterval(player) {\n    this.playerCheckInterval = setInterval(() => {\n      this.checkPlayerPos(player);\n    }, 2);\n  }\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n\n    \n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    let y = ((this.attacking && \n      (this.frameCount % 3 === 0 || this.frameCount % 3 === 1)) ||\n      this.charging) ? 87 : this.frameStartY;\n    if (this.dir === \"right\") {\n      let count = Math.floor(frameCount / 2.5) % this.frameNum;\n      ctx.drawImage(\n        this.enemy,\n        (Math.floor(this.frameCount / 1.5) % this.frameNum) * this.frameWidth,\n        y,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (this.frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        y,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x - this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n\n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + 30,\n          this.bottomSide() - 23],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - 40,\n          this.bottomSide() - 23],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      setTimeout(() => {\n        this.dead = true;\n      }, 300);\n    }\n  }\n\n  ////////CPU\n\n  \n  backUp() {\n    this.charging = false;\n    this.velX = 2;\n  }\n\n  move(canvas, x, y) {\n    this.oldX = this.x;\n    this.x += this.velX;\n    if (this.x < 160) {\n      this.x = 160;\n      // this.attacking = false;\n      this.backUp();\n    } else if (this.x > 650) {\n      this.velX = 0;\n      this.attacking = false;\n      this.x = 650;\n\n      this.attackTimeout = setTimeout(() => {\n        this.attack();\n      }, 10000);\n    }\n  }\n\n  //////\n\n\n\n  static boss1(pos, player, dir = \"right\") {\n\n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 260,\n      height: 370,\n      health: 1200,\n      velX: 0,\n      dir: \"left\",\n      player: player\n    };\n  }\n\n\n\n}\n\nexport default BossVinehead;\n","import Tile from \"../Objects/Platforms/Tile\";\nimport Music from \"../util/Music\";\nimport Enemy from \"../Objects/Enemies/Enemy\";\nimport Helicopter from \"../Objects/Enemies/Helicopter\";\nimport Flower from \"../Objects/Enemies/Flower\";\nimport Vinehead from \"../Objects/Enemies/Vinehead\";\nimport BossVinehead from \"../Objects/Enemies/BossVinehead\";\n\nclass Level {\n  constructor(options) {\n    this.ctx = options.ctx;\n    this.player = options.player;\n    this.mapKeys = options.mapKeys;\n    this.screen = 1;\n    this.renderMap = options.renderMap || this.mapKeys[this.screen].renderMap;\n    this.physicalMap = options.physicalMap || this.mapKeys[this.screen].physicalMap;\n    this.cols = 15;\n    this.rows = 10;\n    this.tileSize = 60;\n    this.tileMap = this.loadImage();\n    this.mapTileSize = this.tileMap.width / this.rows;\n    this.enemies = this.mapKeys[this.screen].enemies;\n    this.enemyCount = 1;\n    this.theme = new Music({src: this.mapKeys[this.screen].theme});\n    \n    this.levelLayers = this.loadImages();\n    \n\n    this.getTile = this.getTile.bind(this);\n    this.getLeft = this.getLeft.bind(this);\n    this.getRight = this.getRight.bind(this);\n    this.getTop = this.getTop.bind(this);\n    this.getBottom = this.getBottom.bind(this);\n    this.drawLevel = this.drawLevel.bind(this);\n    this.loadImage = this.loadImage.bind(this);\n    this.loadLevel = this.loadLevel.bind(this);\n    this.enemiesInterval = this.enemiesInterval.bind(this);\n    this.spawnEnemies = this.spawnEnemies.bind(this);\n\n    this.loadImages = this.loadImages.bind(this);\n    this.renderBackground = this.renderBackground.bind(this);\n    this.renderMid = this.renderMid.bind(this);\n    this.renderFront = this.renderFront.bind(this);\n    // this.loadImage(this.ctx);\n\n    this.enemiesInterval();\n\n  }\n\n//15 x 10\n\n  loadImage() {\n    let tileMap = new Image();\n    tileMap.src = \"./assets/tileGen.png\";\n    return tileMap;\n  }\n\n  loadImages() {\n    let background = new Image();\n    background.src = \"./assets/lv1_back.png\";\n\n    let mid = new Image();\n    mid.src = \"./assets/lv1_mid.png\";\n\n    let front = new Image();\n    front.src = \"./assets/lv1_front.png\";\n\n    return {\n      background,\n      mid,\n      front\n    }\n  }\n\n  renderBackground(ctx, canvas) {\n\n      ctx.drawImage(\n        this.levelLayers.background,\n        0,\n        0,\n        900,\n        600,\n        0,\n        0,\n        canvas.width,\n        canvas.height\n      );\n  }\n\n  renderMid(ctx, canvas) {\n\n    ctx.drawImage(\n      this.levelLayers.mid,\n      0,\n      0,\n      900,\n      600,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n  }\n\n  renderFront(ctx, canvas) {\n\n    ctx.drawImage(\n      this.levelLayers.front,\n      0,\n      0,\n      900,\n      600,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n  }\n\n  getTile(col, row) {\n    return this.renderMap[row * this.cols + col];\n  }\n\n  getLeft(col, row) {\n    return Math.floor(col * this.tileSize);\n  }\n  getRight(col, row) {\n    return Math.floor((col * this.tileSize) + this.tileSize);\n  }\n  getTop(col, row) {\n    return Math.floor(row * this.tileSize - this.tileSize);\n  }\n  getBottom(col, row) {\n    return Math.floor(row * this.tileSize);\n  }\n\n  enemiesInterval() {\n    if (this.screen < 5) return;\n    this.spawnInterval = setInterval(() => {\n      if (!this.enemies[1]) {\n        clearInterval(this.spawnInterval);\n      }\n      this.spawnEnemies();\n    }, 8000);\n  }\n\n  spawnEnemies() {\n\n    if (Object.keys(this.enemies).length >= 8) return;\n    this.enemyCount++;\n    let key = this.enemyCount;\n    let y = Math.random() * 600;\n    this.enemies[key] = new Vinehead(Vinehead.vine2([890, y], this.player, \"left\"));\n  }\n\n  loadLevel(num) {\n    // if (this.screen + num === 0) return;\n    this.screen += num;\n\n    this.renderMap = this.mapKeys[this.screen].renderMap;\n    this.physicalMap = this.mapKeys[this.screen].physicalMap;\n    this.enemies = this.mapKeys[this.screen].enemies;\n    if (this.mapKeys[this.screen].theme) {\n      this.theme.pause();\n      this.theme = new Music({ src: this.mapKeys[this.screen].theme });\n      this.theme.play();\n    }\n    this.enemiesInterval();\n\n  }\n\n  drawLevel(ctx) {\n\n    for (let c = 0; c < this.cols; c++) {\n      for (let r = 0; r < this.rows; r++) {\n        let tile = this.getTile(c, r);\n        let tileCut = (tile % 8 === 0) ? 8 : (tile % 8);\n\n        if (tile > 0) {\n\n          ctx.drawImage(\n            this.tileMap,\n            (tileCut - 1) * (this.tileMap.width/ 8),\n            (Math.floor(tile / 8) * (this.tileMap.width / 8)),\n            this.tileSize,\n            this.tileSize,\n            c * this.tileSize,\n            r * this.tileSize,\n            this.tileSize,\n            this.tileSize\n          );\n        }\n      }\n    }\n  }\n\n\n  static level1() {\n    return {\n      1: {\n        renderMap: [\n          9,  0,  0,  0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0, 38, 39,  0,  0,  0,  0,  0,\n          0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 42,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         28,  0,  0,  0,  0, 22, 23, 23, 63,  0,  0,  0,  0,  0,  0,\n          1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0, 29, 29, 29, 29,\n          9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3, 27, 27, 27,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0, 17,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0, 17,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         16, 16, 16,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0, 12,  4,  4,  4, 13,  0,  0,  0,\n          1,  1,  8,  0,  0,  0,  0, 12,  0,  0,  0, 13,  0,  0,  0,\n          0,  0,  0,  8,  0,  0,  0, 12,  0,  0,  0, 13,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        // physicalMap: [\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,\n        //   6,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n        //   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        // ],\n        enemies: {\n          // 1: new Helicopter(Helicopter.hel1([100, 100])),\n          // 2: new Helicopter(Helicopter.hel1([570, 50], \"left\")),\n          // 3: new Flower(Flower.flow1([600, 500])),\n          // 4: new Flower(Flower.flow1([400, 320])),\n          // 5: new Flower(Flower.flow1([240, 500])),\n \n        },\n        theme: \"./assets/Sound/ff9_stirring_forest.mp3\"\n      },\n      2: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0, 17,  0,  0,  0, 17,  0,  0,  0,  0,  0,\n          0,  0,  0, 17,  0, 16,  0, 17,  0, 16,  0,  3,  1,  1,  1,\n          0,  0,  0, 16,  0,  0,  0, 16,  0,  0,  0,  6,  6,  6,  6,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6,\n          0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6,\n          1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6\n        ],\n        // renderMap: [\n        //   0,  0,  0,  0, 38, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0, 38, 39,  0,  0, 42, 41, 39,\n        //  41, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0, 17,  0,  0,  0, 17,  0,  0,  0,  0,  0,\n        //   0,  0,  0, 17,  0, 16,  0, 17,  0, 16,  0,  3,  1,  1,  1,\n        //   0,  0,  0, 16,  0,  0,  0, 16,  0,  0,  0,  6,  6,  6,  6,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6,\n        //   1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6\n        // ],\n        physicalMap: [\n          0,  0,  0,  0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0, 0, 0,  0,  0, 0, 0, 0,\n          0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  5,  0,  0,  0,  5,  0,  0,  0,  0,  0,\n          0,  0,  0,  5,  0,  7,  0,  5,  0,  7,  0,  3,  1,  1,  1,\n          0,  0,  0,  7,  0,  0,  0,  7,  0,  0,  0,  6,  6,  6,  6,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6,\n          0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6,\n          1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6\n        ],\n        enemies: {\n          1: new Helicopter(Helicopter.hel1([100, 25])),\n          3: new Flower(Flower.flow2([290, 190])),\n          5: new Vinehead(Vinehead.vine1([500, 100], this.player)),\n          6: new Vinehead(Vinehead.vine3([800, 20], this.player)),\n\n          4: new Flower(Flower.flow2([530, 190])),\n\n        }\n      },\n      3: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  0,  0,  0,  3,  5,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4, 28,\n          1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n          9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 16, 16, 16, 16,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  5,  5,  5,  5,  5,  0,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0, 38, 39,  0,  0,  0, 42, 41, 39,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 38,\n         38, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  8,  0,  0,  0,  2,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n          9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  7,  7,  7,  7,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  9,  0,  0,  0, 10,  0,  1,  1,  1,  1\n        ],\n        enemies: {\n          1: new Helicopter(Helicopter.hel2([500, 0])),\n          // // 3: new Flower(Flower.flow2([290, 190])),\n          4: new Vinehead(Vinehead.vine3([500, 100], this.player)),\n          5: new Vinehead(Vinehead.vine3([300, 450], this.player)),\n          6: new Vinehead(Vinehead.vine3([850, 500], this.player)),\n          7: new Vinehead(Vinehead.vine1([800, -20], this.player)),\n\n          // 4: new Flower(Flower.flow2([530, 190])),\n\n        }\n      },\n      4: {\n        renderMap: [\n          0, , , ,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         39, 29, 29, 29, 29, 29, 29,  0, 29, 29, 29, 29, 29, 29, 29,\n          1,  2,  2,  2,  2,  2,  2,  0,  3,  2,  2,  2,  2,  2,  1,\n          5,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 13,  5,  5,\n         28,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4, 28,\n          1,  1,  2,  0,  0, , , ,  0,  0,  0,  3,  1,  1,  1,\n         16, 16, 16,  0,  0,  0,  0,  0,  0,  0,  0,  5,  5,  5,  5,\n          0,  0, , ,  0, 29, 29, 29, 29, 29,  3,  1,  1,  1,  1,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  5,  5,  5,  5,  5,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  0,  1,  1,  1,  1,  1,  1,  1,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,\n          7,  7,  7,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,  1,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  1,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        enemies: {\n          1: new Vinehead(Vinehead.vine3([10, 530], this.player)),\n          2: new Vinehead(Vinehead.vine3([830, 0], this.player)),\n          3: new Vinehead(Vinehead.vine2([600, 600], this.player)),\n          4: new Vinehead(Vinehead.vine1([500, 100], this.player)),\n          5: new Vinehead(Vinehead.vine2([200, 450], this.player)),\n          6: new Vinehead(Vinehead.vine2([850, 500], this.player)),\n          7: new Vinehead(Vinehead.vine1([800, -20], this.player)),\n        }\n      },\n      5: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0, 13,  5,  5,  5, 49,  5,  5,  5,\n         39,  0,  0,  0,  0,  0,  0,  0, 16, 16, 16, 16, 16, 16, 16,\n          2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         28,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          2,  1, 23,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         28,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          5, 29, 29, 29,  0, 29, 29,  0, 47, 47, 47, 47, 47, 47, 47,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        enemies: {\n          1: new BossVinehead(BossVinehead.boss1([650, 120], this.player))\n        },\n        theme: \"./assets/Sound/dk3_boss_boogie.mp3\"\n      }\n    };\n  }\n  // static level2() {\n  //   return {\n  //     1: {\n  //       renderMap: [\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0, 38, 39,  0,  0,  0,  0,  0,\n  //         0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6\n  //       ],\n  //       physicalMap: [\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  1,  1,\n  //         1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n  //       ],\n  //       enemies: {\n  //         1: new Helicopter(Helicopter.hel1([100, 100])),\n  //         2: new Helicopter(Helicopter.hel1([570, 50], \"left\")),\n  //         3: new Flower(Flower.flow1([600, 500])),\n  //         4: new Flower(Flower.flow1([400, 320])),\n  //         5: new Flower(Flower.flow1([240, 500])),\n  //       }\n  //     }\n  //   };\n  // }\n\n}\n\nexport default Level;\n\n\n// [\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0, 38, 39,  0,  0,  0,  0,  0,\n//           0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6\n//         ],","class GameHUD {\n  constructor(options) {\n    // this.health = options.health;\n    // this.name = name;\n    this.fire = this.loadImage();\n    \n\n    this.drawHealth = this.drawHealth.bind(this);\n    this.loadImage = this.loadImage.bind(this);\n    this.drawHUD = this.drawHUD.bind(this);\n    this.drawAmmo = this.drawAmmo.bind(this);\n  }\n\n  loadImage() {\n    let img = new Image();\n    img.src = \"./assets/fireball.png\";\n    return img;\n  }\n\n  drawHUD(canvas, ctx, player, frameCount) {\n    ctx.beginPath();\n    ctx.rect(0, (canvas.height - 55), canvas.width, 55);\n    ctx.fillStyle = \"black\";\n    ctx.fill();\n    ctx.closePath();\n\n    this.drawHealth(canvas, ctx, player);\n    this.drawAmmo(canvas, ctx, player, frameCount);\n  }\n\n\n  drawHealth(canvas, ctx, player) {\n\n    let healthMeter = ((canvas.width / 2) * (player.health / 200));\n\n    ctx.beginPath();\n    ctx.rect(20, (canvas.height - 40), (canvas.width / 2), 25);\n    ctx.fillStyle = \"rgba(255, 255, 255, .1)\";\n    ctx.fill();\n    ctx.closePath();\n\n    ctx.beginPath();\n    ctx.rect(20, (canvas.height - 40), (healthMeter), 25);\n    ctx.fillStyle = \"red\";\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  drawAmmo(canvas, ctx, player, frameCount) {\n    // let healthMeter = ((canvas.width - ) * (player.health / 200));\n    let fromRight = canvas.width - 50;\n    ctx.beginPath();\n    ctx.arc(fromRight, canvas.height - 24, 5, 0, 2 * Math.PI, false);\n    ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n    ctx.fill();\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n    ctx.stroke();\n    ctx.closePath();\n\n    ctx.beginPath();\n    ctx.arc(canvas.width - 100, canvas.height - 24, 5, 0, 2 * Math.PI, false);\n    ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n    ctx.fill();\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n    ctx.stroke();\n    ctx.closePath();\n\n    ctx.beginPath();\n    ctx.arc(canvas.width - 150, canvas.height - 24, 5, 0, 2 * Math.PI, false);\n    ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n    ctx.fill();\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n    ctx.stroke();\n    ctx.closePath();\n\n\n    switch (Object.keys(player.fireballs).length) {\n      case 0: \n        ctx.drawImage(\n          this.fire,\n          (frameCount % 8) * 43 + (((frameCount % 8) + 1) * 21),\n          400,\n          22,\n          35,\n          canvas.width - 170, canvas.height - 50,\n          40, 40\n        );\n      case 1:\n        ctx.drawImage(\n          this.fire,\n          (frameCount % 8) * 43 + (((frameCount % 8) + 1) * 21),\n          400,\n          22,\n          35,\n          canvas.width - 120, canvas.height - 50,\n          40, 40\n        );\n      case 2:\n        ctx.drawImage(\n          this.fire,\n          (frameCount % 8) * 43 + (((frameCount % 8) + 1) * 21),\n          400,\n          22,\n          35,\n          canvas.width - 70, canvas.height - 50,\n          40, 40\n        );\n      default:\n        break;\n\n    }\n\n\n  }\n\n\n}\n\nexport default GameHUD;","import Player from \"./Player\";\nimport Level from \"./Levels/Level\";\nimport Tile from \"./Objects/Platforms/Tile\";\nimport Collision from \"./util/Collision\";\nimport Controller from \"./util/Controller\";\nimport Enemy from \"./Objects/Enemies/Enemy\";\nimport Helicopter from \"./Objects/Enemies/Helicopter\";\nimport Flower from \"./Objects/Enemies/Flower\";\nimport GameHUD from \"./GameHUD\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\n\nclass Game {\n  constructor(canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.player = new Player(this.ctx, this.canvas);\n    this.controller = new Controller(this.player);\n    this.level = new Level({ \n      ctx: ctx,\n      mapKeys: Level.level1(),\n      player: this.player\n    });\n    // this.physicalMap = this.level.physicalMap;\n    this.tileSize = this.level.tileSize;\n    this.collider = new Collision();\n    this.HUD = new GameHUD();\n    this.frameCount = 0;\n    this.enemies = this.level.enemies;\n    this.gameOver = false;\n    this.embers = new Image();\n    this.embers.src = \"./assets/embers.jpg\";\n    // this.getPlayerTilePos = this.getPlayerTilePos.bind(this);\n\n    this.getTopLeftPos = this.getTopLeftPos.bind(this);\n    this.getTopRightPos = this.getTopRightPos.bind(this);\n    this.getBottomLeftPos = this.getBottomLeftPos.bind(this);\n    this.getBottomRightPos = this.getBottomRightPos.bind(this);\n    this.playerPlatformCheck = this.playerPlatformCheck.bind(this);\n    this.playerUpdate = this.playerUpdate.bind(this);\n    this.projectilePlatformCheck = this.projectilePlatformCheck.bind(this);\n    this.renderFireballs = this.renderFireballs.bind(this);\n    this.renderEnemies = this.renderEnemies.bind(this);\n    this.renderEnemyProjectiles = this.renderEnemyProjectiles.bind(this);\n    this.startFrameCount = this.startFrameCount.bind(this);\n    this.runGame = this.runGame.bind(this);\n    this.isGameOver = this.isGameOver.bind(this);\n    this.win = this.win.bind(this);\n    this.enemiesCleared = this.enemiesCleared.bind(this);\n    this.loadLevel = this.loadLevel.bind(this);\n\n    this.enemyCount = Object.keys(this.enemies).length;\n    this.cleared = false;\n\n    this.startFrameCount();\n  }\n\n  startFrameCount() {\n    this.frameInterval = setInterval(() => {\n      this.frameCount++;\n    }, (1000 / 30));\n  }\n\n  getTopLeftPos() {\n    let x = Math.floor(this.player.leftSide() / this.tileSize);\n    let y = Math.floor(this.player.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getTopRightPos() {\n    let x = Math.floor(this.player.rightSide() / this.tileSize);\n    let y = Math.floor(this.player.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomLeftPos() {\n    let x = Math.floor(this.player.leftSide() / this.tileSize);\n    let y = Math.floor(this.player.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomRightPos() {\n    let x = Math.floor(this.player.rightSide() / this.tileSize);\n    let y = Math.floor(this.player.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n\n\n  enemiesCleared() {\n    if (Object.keys(this.enemies).length === 0) {\n      this.cleared = true;\n      return true;\n    }else {\n      return false;\n    }\n  }\n\n  playerPlatformCheck() {\n    let colVal;\n    let top;\n    let bottom;\n    let right;\n    let left;\n    let cols = 15;\n    let rows = 10;\n    let floorCount = 0;\n    let physMap = this.level.physicalMap;\n\n    [left, top] = this.getTopLeftPos();\n    colVal = physMap[top * cols + left];\n    this.collider.collidePlatform(\n      this.player,\n      left * this.tileSize,\n      top * this.tileSize,\n      colVal    \n    );\n\n    [right, top] = this.getTopRightPos();\n    colVal = physMap[top * cols + right];\n    this.collider.collidePlatform(\n      this.player,\n      right * this.tileSize,\n      top * this.tileSize,\n      colVal    \n    );\n\n    [left, bottom] = this.getBottomLeftPos();\n    colVal = physMap[bottom * cols + left];\n    (colVal === 0) ? floorCount++ : \"\";\n    this.collider.collidePlatform(\n      this.player,\n      left * this.tileSize,\n      bottom * this.tileSize,\n      colVal    \n    );\n\n\n    [right, bottom] = this.getBottomRightPos();\n    colVal = physMap[bottom * cols + right];\n    (colVal === 0) ? floorCount++ : \"\";\n    if (floorCount === 2) {\n      this.player.onGround = false;\n      // if (this.player.jumpCount === 2) this.player.jumpCount -=;\n    }\n    this.collider.collidePlatform(\n      this.player,\n      right * this.tileSize,\n      bottom * this.tileSize,\n      colVal\n    );\n  }\n\n\n  projectilePlatformCheck(projectile) {\n    let colVal;\n    let top;\n    let bottom;\n    let right;\n    let left;\n    let cols = 15;\n    let physMap = this.level.physicalMap;\n\n    if (projectile.dir === \"left\") {\n      [left, top] = projectile.getTopLeftPos();\n      colVal = physMap[top * cols + left];\n      this.collider.collidePlatform(\n        projectile,\n        left * this.tileSize,\n        top * this.tileSize,\n        colVal\n      );\n\n      [left, bottom] = projectile.getBottomLeftPos();\n      colVal = physMap[bottom * cols + left];\n      this.collider.collidePlatform(\n        projectile,\n        left * this.tileSize,\n        bottom * this.tileSize,\n        colVal\n      );\n    }\n\n    if (projectile.dir === \"right\") {\n      [right, top] = projectile.getTopRightPos();\n      colVal = physMap[top * cols + right];\n      this.collider.collidePlatform(\n        projectile,\n        right * this.tileSize,\n        top * this.tileSize,\n        colVal\n      );\n\n      [right, bottom] = projectile.getBottomRightPos();\n      colVal = physMap[bottom * cols + right];\n\n      this.collider.collidePlatform(\n        projectile,\n        right * this.tileSize,\n        bottom * this.tileSize,\n        colVal\n      );\n\n    }\n\n  }\n  \n\n  playerUpdate() {\n    this.player.setRunning();\n    this.player.isIdle();\n    this.player.setOldPos();\n\n    if (!this.player.idle) {\n      \n      if (this.player.direction === \"right\") {\n        if (this.player.onGround && !this.player.keydown) {\n          this.player.velX < 1 ? (this.player.velX = 0) : (this.player.velX /= CONSTANTS.FRICTION);\n        }\n      } else if (this.player.direction === \"left\") {\n        if (this.player.onGround && !this.player.keydown) {\n          this.player.velX > -1 ? (this.player.velX = 0) : (this.player.velX /= CONSTANTS.FRICTION);\n        }\n      }\n      this.player.x += this.player.velX;\n    }\n\n    this.player.inAir();\n\n    this.collider.collidePlayer(this.player, this.canvas, this.cleared);\n    this.playerPlatformCheck();\n  }\n\n  renderEnemies() {\n    if (this.level.screen === 5) {\n      this.enemyCount = Object.keys(this.level.enemies).length;\n    }\n    \n    if (!this.cleared) {\n      for (let key in this.enemies) {\n        if (this.enemies[key].dying && !this.enemies[key].dead) continue;\n        this.projectilePlatformCheck(this.enemies[key]);\n\n        if (!this.enemies[key].dead) {\n          this.enemies[key].move(this.canvas, this.player.x, this.player.y);\n          this.collider.collideEnemy(this.player, this.enemies[key]);\n          this.enemies[key].drawEnemy(this.ctx, this.frameCount);\n\n        } else {\n          delete this.enemies[key];\n          this.enemyCount -= 1;\n        }\n      }\n      this.enemiesCleared();\n    }\n  }\n\n  renderFireballs() {\n    if (Object.keys(this.player.fireballs).length !== 0) {\n      for (let key in this.player.fireballs) {\n        let fireball = this.player.fireballs[key];\n        \n        if (this.enemyCount !== 0) {\n          for (let key in this.enemies) {\n            this.collider.collideEnemy(fireball, this.enemies[key]);\n          }\n        }\n        \n        this.projectilePlatformCheck(fireball);\n\n        (!fireball.isHit) ? \n          fireball.drawProjectile(this.ctx, this.frameCount) :\n          delete this.player.fireballs[key];\n      }\n    }\n  }\n\n  renderEnemyProjectiles() {\n    ///Check if any enemies\n    Object.values(this.enemies).forEach((enemy) => {\n      if (Object.keys(enemy.projectiles).length !== 0) {\n        for (let key in enemy.projectiles) {\n          this.collider.collideProjectile(this.player, enemy.projectiles[key]);\n\n          this.projectilePlatformCheck(enemy.projectiles[key]);\n\n          (!enemy.projectiles[key].isHit) ?\n            enemy.projectiles[key].drawProjectile(this.ctx, this.frameCount) :\n            delete enemy.projectiles[key];\n        }\n      }\n    });\n  }\n\n  loadLevel() {\n    // debugger\n    if (((this.player.x + (this.player.width / 2)) >= this.canvas.width)) {\n      this.level.loadLevel(1);\n      this.cleared = false;\n      this.enemies = this.level.enemies;\n      this.enemyCount = Object.keys(this.enemies);\n      this.player.x = 0;\n    } else if ((this.player.x + (this.player.width / 2)) <= 0) {\n      this.level.loadLevel(-1);\n      this.player.x = this.canvas.width - this.player.width;\n    }\n  }\n\n  isGameOver() {\n    this.win();\n    this.gameOver = (this.player.dead || this.won) ? true : false;\n  }\n\n  //refactor\n  win() {\n    this.won = (this.level.screen === 5 && Object.keys(this.enemies).length === 0) ? true : false;\n  }\n  \n\n  runGame() {\n    this.isGameOver();\n\n    if (!this.gameOver) {\n      this.loadLevel();\n      this.level.renderBackground(this.ctx, this.canvas);\n      if (this.level.screen > 1) this.level.drawLevel(this.ctx);\n      this.player.drawPlayer(this.frameCount);\n      this.playerUpdate();\n      if (this.level.screen === 1) {\n        this.level.renderMid(this.ctx, this.canvas);\n        this.level.renderFront(this.ctx, this.canvas);\n      }\n\n\n      // this.enemies[1].drawEnemy(this.ctx, this.frameCount);\n      this.renderEnemies();\n      // this.enemies[1].callAttack(this.frameCount);\n      \n      this.renderEnemyProjectiles();\n      this.renderFireballs();\n      \n      this.HUD.drawHUD(this.canvas, this.ctx, this.player, this.frameCount);\n\n    } else {\n      if (!this.won) {\n        this.level.theme.pause();\n        // this.ctx.beginPath();\n        // this.ctx.rect(0, 0, this.canvas.width, this.canvas.height);\n        // this.ctx.fillStyle = \"rgba(255, 255, 255, .1)\";\n        // this.ctx.fill();\n        // this.ctx.closePath();\n\n        // // let img = new Image();\n        // // img.src = \"./assets/embers.jpg\";\n        // // img.onload = () => {\n        //   // ctx.drawImage(img, 0, 0);\n            this.ctx.drawImage(\n                this.embers,\n                0,\n                0,\n                852,\n                400,\n                0, 0,\n                900, 600\n          );\n        // };\n  \n        this.ctx.font = \"130px Arial\";\n        this.ctx.fillStyle = \"rgb(46, 2, 2)\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"GAME OVER\", this.canvas.width / 2, this.canvas.height / 2);\n\n\n        this.ctx.font = \"50px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"Press Enter to Play Again\", this.canvas.width / 2, 400);\n\n      } else {\n        this.level.theme.pause();\n\n        this.ctx.drawImage(\n          this.embers,\n          0,\n          0,\n          852,\n          400,\n          0, 0,\n          900, 600\n        );\n        this.ctx.font = \"80px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"CONGRATS!\", this.canvas.width / 2, 160);\n\n\n        this.ctx.font = \"80px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"YOU BEAT LEVEL 1\", this.canvas.width / 2, this.canvas.height / 2);\n\n\n        this.ctx.font = \"50px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"Press Enter to Play Again\", this.canvas.width / 2, 400);\n      }\n\n    } \n    \n  }\n\n}\n\n\n\nexport default Game;","import Controller from \"./util/Controller\";\nimport Level from \"./Levels/Level\";\nimport Player from \"./Player\";\nimport Game from \"./Game\";\nimport GameHUD from \"./GameHUD\";\n\n\n\nclass GameView {\n  constructor (canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    // this.game = new Game(this.canvas, this.ctx);\n    this.game = null;\n    this.splash = new Image();\n    this.splash.src = \"./assets/firegirl.jpg\";\n    // this.HUD = new GameHUD();\n    // this.tileMap = this.loadImage();\n\n\n    this.renderGame = this.renderGame.bind(this);\n    this.loadImage = this.loadImage.bind(this);\n    this.newGame = this.newGame.bind(this);\n    this.mute = this.mute.bind(this);\n\n    window.addEventListener(\"keydown\", (event) => {\n      if ((!this.game || this.game.gameOver) && event.keyCode === 13) {\n        this.newGame();\n\n      } else if (event.keyCode === 77) {\n        this.game.level.theme.mute();\n        // let music = document.getElementById(\"theme\");\n        // (music.muted === false) ? music.muted = true : false;\n      }\n    });\n  }\n\n  loadImage() {\n    let tileMap = new Image();\n    tileMap.src = \"./assets/tileGen.png\";\n    return tileMap;\n  }\n\n  newGame() {\n    if (!this.game || this.game.gameOver) {\n      this.game = new Game(this.canvas, this.ctx);\n      this.game.level.theme.play();\n    }\n  }\n\n  mute() {\n    this.game.level.theme.mute;\n\n  }\n\n  renderGame() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    if (!this.game) {\n        this.ctx.drawImage(\n            this.splash,\n            0,\n            0,\n            920,\n            644,\n            0, 0,\n            900, 600\n        );\n\n      this.ctx.font = \"150px Arial\";\n      this.ctx.fillStyle = \"rgb(46, 2, 2)\";\n      this.ctx.textAlign = \"center\";\n      this.ctx.fillText(\"FIRE GIRL\", this.canvas.width / 2, 230);\n\n      this.ctx.font = \"60px Arial\";\n      this.ctx.fillStyle = \"pink\";\n      this.ctx.textAlign = \"center\";\n      this.ctx.fillText(\"Press Enter to Play\", this.canvas.width / 2, 350);\n    }\n\n    if (this.game) {\n\n      this.game.runGame();\n      \n    }\n\n    window.requestAnimationFrame(this.renderGame);\n  }\n\n  // drawBackground() {\n  //   this.ctx.fillStyle = \"Green\";\n  //   this.ctx.rect(0, 0, this.ctx.width, this.ctx.height);\n  // }\n  // draw() {\n  //   this.ctx.clearRect(0, 0, this.ctx.width, this.ctx.height);\n  //   this.player.drawPlayer(this.ctx);\n  // }\n  \n\n\n\n\n} \n\n\n\nexport default GameView;\n\n","import \"./styles/index.scss\";\nimport GameView from \"./GameView\";\n\n// const greeting = testObj?.key2?.key3 || testObj.key1;\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  let canvas = document.getElementById(\"gameCanvas\");\n  let ctx = canvas.getContext(\"2d\");\n  let gameView = new GameView(canvas, ctx);\n\n  gameView.renderGame();\n\n  // ctx.beginPath();\n  // ctx.rect(0, 0, canvas.width, canvas.height);\n  // ctx.fillStyle = \"rgba(255, 255, 255, .1)\";\n  // ctx.fill();\n  // ctx.closePath();\n\n  // ctx.font = \"130px Arial\";\n  // ctx.fillStyle = \"red\";\n  // ctx.textAlign = \"center\";\n  // ctx.fillText(\"GAME OVER\", canvas.width / 2, canvas.height / 2);\n  // let img = new Image();\n  // img.src = \"./assets/firegirl.jpg\";\n  // img.onload = () => {\n  //   // ctx.drawImage(img, 0, 0);\n  //         ctx.drawImage(\n  //         img,\n  //         0,\n  //         0,\n  //         920,\n  //         644,\n  //         0, 0,\n  //         900, 600\n  //   );\n  // };\n  \n\n  // let fromRight = canvas.width - 50;\n  // ctx.beginPath();\n  // ctx.arc(fromRight, canvas.height - 30, 5, 0, 2 * Math.PI, false);\n  // ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.fill();\n  // ctx.lineWidth = 5;\n  // ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.stroke();\n  // ctx.closePath();\n\n  // ctx.beginPath();\n  // ctx.arc(canvas.width - 80, canvas.height - 30, 5, 0, 2 * Math.PI, false);\n  // ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.fill();\n  // ctx.lineWidth = 5;\n  // ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.stroke();\n  // ctx.closePath();\n\n  // ctx.beginPath();\n  // ctx.arc(canvas.width - 110, canvas.height - 30, 5, 0, 2 * Math.PI, false);\n  // ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.fill();\n  // ctx.lineWidth = 5;\n  // ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.stroke();\n  // ctx.closePath();\n  \n  // img.onload = () => {\n  //   ctx.drawImage(\n  //     img,\n  //     22 ,\n  //     400,\n  //     35,\n  //     35,\n  //     0, 0,\n  //     35, 35\n  //   );\n  // };\n\n\n\n});\n"],"sourceRoot":""}