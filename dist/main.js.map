{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/Controller.js","webpack:///./src/Objects/GameObject.js","webpack:///./src/util/Music.js","webpack:///./src/Objects/Characters/Character.js","webpack:///./src/Player.js","webpack:///./src/util/Collision.js","webpack:///./src/util/Sound.js","webpack:///./src/Objects/Projectiles/Projectile.js","webpack:///./src/Objects/Enemies/Enemy.js","webpack:///./src/Objects/Enemies/Helicopter.js","webpack:///./src/Objects/Enemies/Spider.js","webpack:///./src/Objects/Enemies/Vinehead.js","webpack:///./src/Objects/Projectiles/ElectricBall.js","webpack:///./src/Objects/Enemies/Jellyfish.js","webpack:///./src/Objects/Projectiles/Vine.js","webpack:///./src/Objects/Enemies/BossVinehead.js","webpack:///./src/Objects/Items/Item.js","webpack:///./src/Levels/Level.js","webpack:///./src/GameHUD.js","webpack:///./src/Game.js","webpack:///./src/GameView.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Controller","player","this","keysPressed","keydown","keyup","window","addEventListener","event","preventDefault","idle","KEYS","left","direction","velX","right","up","upPressed","canClimb","console","log","climbing","velY","down","jump","fire","shootFire","onGround","dash","runningKeyDown","GameObject","options","pos","ctx","canvas","width","height","x","y","oldX","oldY","tileSize","rightSide","leftSide","topSide","bottomSide","getTopLeftPos","getTopRightPos","getBottomLeftPos","getBottomRightPos","Math","floor","Music","music","document","createElement","src","id","setAttribute","style","display","play","pause","mute","muted","Character","vel","health","spriteMap","Image","CONSTANTS","Player","character","damageMeter","damageBoost","shield","loadImage","fireballs","idleWidth","runWidth","attackWidth","isRunning","jumpCount","frameCount","attacking","aura","shieldImg","attackAnimTimeout","dashing","isHit","dying","dead","drawPlayer","blueFire","drawAttack","drawRunning","drawIdle","drawSprite","drawJump","setOldPos","inAir","isIdle","whichDirection","setRunning","setHit","setDamageMeter","damageBoostCountdown","setShieldTimeOut","setShield","setDying","isClimbing","getDirX","getDirY","image","proj","drawImage","scale","state","count","vert","keys","length","clearTimeout","setTimeout","Projectile","blueFireballVert","blueFireball","launchSound","fireballVert","fireball","damage","hitCooldown","damageMeterInterval","setInterval","clearInterval","shieldTimeOut","climb","Collision","collidePlayer","collidePlatform","collidePlatTop","collidePlatBottom","collidePlatLeft","collidePlatRight","collideSlopeFortyFiveRight","collideSlopeFortyFiveRightBottom","collideSlopeFortyFiveLeft","collideSlopeFortyFiveLeftBottom","collideSlopeTwentyLeft","collideSlopeTwentyLeftBottom","collideSlopeTwentyRight","collideSlopeTwentyRightBottom","climbable","collideEnemy","collisionPlatformKeys","1","obj","colVal","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","53","54","58","63","67","cleared","obj1","obj2","hitBox","bottom","top","dir","points","gameObj","tileLeft","tileBottom","tileY","vlY","tileRight","half","tileTop","gameObject","Sound","sound","idName","volume","impacted","impactTimeout","impactSrc","impact","frameStartX","frameStartY","frameWidth","frameHeight","frameNum","impactWidth","impactHeight","impactFrameWidth","impactFrameHeight","impactStartX","impactStartY","hitTimeout","collider","timeOutHit","updateProjectile","drawProjectile","drawImpact","physicalMap","hit","Enemy","enemy","projectiles","getMidX","getMidY","drawEnemy","shootProj","callAttack","helibullet","attackInterval","Helicopter","bounds","multiplier","Spider","startFrameCount","enemyInterval","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","closePath","Vinehead","active","opening","playerCheckTimeout","checkPlayerPos","homing","playerCheckInterval","ElectricBall","impactSound","shock","Jellyfish","setAttackInterval","Vine","boss","vine","charging","startX","boundsY","frameCountOffset","attack","backUp","charge","drawVines","playerCheck","move","random","int","chargeTimeout","vineTimeout","BossVinehead","vineNum","vines","vines1","shuffleVines","renderVines","attackVines","startAttack","bossInterval","attackTimeout","vineInterval","j","forEach","Item","item","disappear","collected","drawItem","timeOutCollected","collectedTimeOut","Level","mapKeys","screen","renderMap","cols","rows","tileMap","mapTileSize","enemies","enemyCount","theme","levelLayers","loadImages","items","spawnTier","rushLevel","spawnTierGroup","rushInterval","enemyRushSpawn","enemyRushInterval","getTile","getLeft","getRight","getTop","getBottom","drawLevel","loadLevel","enemiesInterval","spawnEnemies","enemyRush","renderBackground","renderMid","renderFront","spider1","0","hel2","hel1","jell2","jell1","vine3","vine1","vine2","background","mid","front","spider2","spider3","boss1","images","col","row","parseInt","spawnInterval","num","tierAmount","tile","tileCut","GameHUD","loadFire","loadBlueFire","drawHealth","drawDamageMeter","drawHUD","drawAmmo","drawPoints","img","rect","fillStyle","fill","healthMeter","fromRight","arc","PI","font","textAlign","fillText","Game","lvl","levelCall","level1","level2","controller","level","HUD","gameOver","embers","highScore","playerPlatformCheck","playerUpdate","projectilePlatformCheck","renderItems","renderFireballs","renderEnemies","renderEnemyProjectiles","runGame","isGameOver","win","enemiesCleared","resizeGame","newLevel","survivalMode","frameInterval","floorCount","climbCount","physMap","projectile","checkCollected","values","collideProjectile","won","GameView","game","splash","logo","renderGame","newGame","newEnemyRush","clearRect","requestAnimationFrame","getElementById","getContext"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","class Controller {\n  constructor(player) {\n    // this.gameview = gameview;\n    this.player = player;\n\n    this.keysPressed = {};\n\n    this.keydown = this.keydown.bind(this);\n    this.keyup = this.keyup.bind(this);\n    window.addEventListener(\"keydown\", this.keydown);\n    window.addEventListener(\"keyup\", this.keyup);\n  }\n\n  keydown(event) {\n    event.preventDefault();\n    this.player.idle = false;\n    this.player.keydown = true;\n    \n    switch (Controller.KEYS[event.key]) {\n    // switch (Controller.KEYS[event.keyCode]) {\n      case \"left\":\n        this.keysPressed.left = true;\n        // this.player.runningKeyDown = true;\n        this.player.direction = \"left\";\n        this.player.velX = -7;\n\n        break;\n      case \"right\":\n        this.keysPressed.right = true;\n        // this.player.runningKeyDown = true;\n\n        this.player.direction = \"right\";\n        this.player.velX = 7;\n        break;\n      case \"up\":\n        this.keysPressed.up = true;\n        this.player.upPressed = this.keysPressed.up;\n\n        if (this.player.canClimb) {\n          console.log(this.player.canClimb);\n          console.log(this.player.idle);\n\n          this.player.climbing = true;\n          this.player.velY = -7;\n        }\n        break;\n      case \"down\":\n        this.keysPressed.down = true;\n        if (this.player.canClimb) {\n          console.log(this.player.canClimb);\n          this.player.climbing = true;\n          this.player.velY = 7;\n        }\n        break;\n      case \"jump\":\n        this.keysPressed.jump = true;\n        this.player.jump();\n        break;\n      case \"fire\":\n\n        this.keysPressed.fire = true;\n        if (this.keysPressed.up) {\n          this.player.shootFire(\"up\");\n        } else if (this.keysPressed.down && !this.player.onGround) {\n          this.player.shootFire(\"down\");\n        } else {\n          this.player.shootFire();\n\n        }\n        break;\n      case \"dash\":\n        this.keysPressed.dash = true;\n        // this.player.dash = true;\n        // if (this.keysPressed.left || this.keysPressed.right) {\n        //   this.player.dash();\n        // }\n        // if (this.player.direction === \"right\") {\n        //   this.player.velX = 14;\n        // } else {\n        //   this.player.velX = -14;\n        // }\n      case \"space\":\n        // this.gameview.Ticker.paused = (this.gameview.Ticker.paused) ? false: true;\n        break;\n      default:\n        return;\n    }\n\n  }\n\n  keyup(event) {\n    // if (Controller.KEYS[event.keyCode] === \"left\" ||\n    //   Controller.KEYS[event.keyCode] === \"right\") {\n      // this.player.keydown = false;\n    //   // this.player.velX = 0;\n    //   // this.player.idle =ß true;\n    //   return;\n    // }\n    event.preventDefault();\n\n    switch (Controller.KEYS[event.key]) {\n    // switch (Controller.KEYS[event.keyCode]) {\n\n      case \"left\":\n        this.keysPressed.left = false;\n        // this.player.velX = 0;\n        this.player.runningKeyDown = false;\n\n        if (!this.keysPressed.left && !this.keysPressed.right) this.player.velX = 0;\n\n        break;\n      case \"right\":\n        this.keysPressed.right = false;\n        // this.player.runningKeyDown = false;\n\n        // this.player.velX *= -1;\n        if (!this.keysPressed.left && !this.keysPressed.right) this.player.velX = 0;\n        break;\n      case \"up\":\n        this.keysPressed.up = false;\n        this.player.upPressed = this.keysPressed.up;\n\n        if (this.player.climbing) this.player.climbing = false;\n        break;\n      case \"down\":\n        this.keysPressed.down = false;\n        break;\n      case \"jump\":\n        this.keysPressed.jump = false;\n        break;\n      case \"fire\":\n        this.keysPressed.fire = false;\n        break;\n      case \"dash\":\n        this.keysPressed.dash = false;\n      case \"space\":\n        // this.gameview.Ticker.paused = (this.gameview.Ticker.paused) ? false: true;\n        break;\n      default:\n        return;\n    }\n\n\n    this.player.idle = true;\n    // this.keysPressed = {};\n    // console.log(Controller.KEYS[event.keyCode])\n    // debugger\n\n  }\n}\n\n\n// Controller.KEYS = {\n//   19: 'space',\n//   37: 'left',\n//   38: 'up',\n//   39: 'right',\n//   40: 'down',\n//   65: 'jump',\n//   68: 'fire',\n//   83: 'dash',\n//   13: 'enter'\n// };\n\nController.KEYS = {\n  \"space\": 'space',\n  \"ArrowLeft\": 'left',\n  \"ArrowUp\": 'up',\n  \"ArrowRight\": 'right',\n  \"ArrowDown\": 'down',\n  \"a\": 'jump',\n  \"d\": 'fire',\n  \"s\": 'dash',\n  \"Enter\": 'enter'\n};\n\n\n\nexport default Controller;","\n\nclass GameObject {\n  constructor(options) {\n    this.name = options.name;\n    this.pos = options.pos;\n    this.ctx = options.ctx;\n    this.canvas = options.canvas;\n    this.width = options.width;\n    this.height = options.height;\n    this.x = options.pos[0];\n    this.y = options.pos[1];\n    this.oldX = this.x;\n    this.oldY = this.y;\n    this.tileSize = 60;\n\n\n\n    this.rightSide = this.rightSide.bind(this);\n    this.leftSide = this.leftSide.bind(this);\n    this.topSide = this.topSide.bind(this);\n    this.bottomSide = this.bottomSide.bind(this);\n\n    this.getTopLeftPos = this.getTopLeftPos.bind(this);\n    this.getTopRightPos = this.getTopRightPos.bind(this);\n    this.getBottomLeftPos = this.getBottomLeftPos.bind(this);\n    this.getBottomRightPos = this.getBottomRightPos.bind(this);\n  }\n\n  rightSide() {\n    return this.x + this.width;\n  }\n\n  leftSide() {\n    return this.x;\n  }\n\n  topSide() {\n    return this.y;\n  }\n\n  bottomSide() {\n    return this.y + this.height;\n  }\n\n  getTopLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n\n  getTopRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n}\n\nexport default GameObject;","class Music {\n    constructor(options){\n        this.music = document.createElement(\"audio\");\n        this.music.src = options.src;\n        this.music.id = \"theme\";\n        this.music.setAttribute(\"preload\", \"auto\");\n        this.music.setAttribute(\"controls\", \"none\");\n        this.music.setAttribute(\"loop\", \"true\");\n        this.music.setAttribute(\"muted\", \"false\");\n        this.music.style.display = \"none\";\n\n        this.play = this.play.bind(this);\n        this.pause = this.pause.bind(this);\n        this.mute = this.mute.bind(this);\n    };\n\n    play() {\n        this.music.play();\n    }\n    pause() {\n        this.music.pause();\n    }\n\n    mute() {\n        this.music.muted =!this.music.muted;\n    }\n\n}\n\nexport default Music;","import GameObject from \"../GameObject\";\n\nconst GRAVITY = 0.5;\nconst FRICTION = 0.5;\n\nclass Character extends GameObject {\n  constructor(options) {\n    super({ \n      name: options.name, \n      pos: options.pos, \n      ctx: options.ctx, \n      width: options.width,\n      height: options.height\n    });\n    this.vel = [0, 0];\n    this.health = 200;\n \n  }\n\n  loadImage() {\n    let spriteMap = new Image();\n    spriteMap.src = \"./assets/SeisaSpriteSheet.png\";\n    return spriteMap;\n    // this.tileMap.onLoad = this.drawLevel(ctx);\n  }\n  \n  // loadImage2() {\n  //   let spriteMap = new Image();\n  //   spriteMap.src = \"./assets/SeisaSpriteSheet.png\";\n  //   return spriteMap;\n  //   // this.tileMap.onLoad = this.drawLevel(ctx);\n  // }\n\n  // drawModel() {\n  //   this.ctx.beginPath();\n  //   this.ctx.rect(20, 40, 40, 70);\n  //   this.ctx.fillStyle = \"#FF000\";\n  //   this.ctx.fill();\n  //   this.ctx.closePath();\n\n  // }\n\n  \n}\n\nexport default Character;","import Character from \"./Objects/Characters/Character\";\nimport Collision from \"./util/Collision\";\nimport Projectile from \"./Objects/Projectiles/Projectile\";\n\n\nconst CONSTANTS = {\n  GRAVITY: 1,\n  FRICTION: 1.5,\n  MAX_VEL: 50,\n};\n\nclass Player {\n  constructor(ctx, canvas) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.character = new Character({\n      name: \"Seisa\",\n      pos: [20, 210],\n      ctx: this.ctx,\n      canvas: this.canvas,\n      // width: 30,\n      // width: 40,\n      width: 42.5,\n      height: 82\n      // height: 45\n      // height: 54\n    });\n\n    this.health = this.character.health;\n    this.damageMeter = 0;\n    this.damageBoost = false;\n\n    this.shield = false;\n\n    this.spriteMap = this.character.loadImage();\n    this.fireballs = {};\n    \n    this.vel = this.character.vel;\n    this.x = this.character.x;\n    this.y = this.character.y;\n    this.idleWidth = 42.5;\n    this.runWidth = 57;\n    this.attackWidth =\n    this.oldX = this.x;\n    this.oldY = this.y;\n    this.width = this.character.width;\n    this.height = this.character.height;\n    this.velX = this.vel[0];\n    this.velY = this.vel[1];\n    this.onGround = false;\n    this.idle = true;\n    this.keydown = false;\n    this.runningKeyDown = false;\n    this.isRunning = false;\n    this.direction = \"right\";\n    this.jumpCount = 2;\n    this.canClimb = false;\n    this.climbing = false;\n    this.frameCount = 0;\n    this.attacking = false;\n    this.aura = this.loadImage(\"./assets/aura.png\");\n    this.shieldImg = this.loadImage(\"./assets/shield_aura.png\");\n\n    this.upPressed = false;\n    this.attackAnimTimeout = \"\";\n    this.dashing = false;\n\n    this.isHit = false;\n    this.dying = false;\n    this.dead = false;\n\n\n\n    this.drawPlayer = this.drawPlayer.bind(this);\n    this.jump = this.jump.bind(this);\n    // this.move = this.move.bind(this);\n\n\n    this.shootFire = this.shootFire.bind(this);\n    this.blueFire = this.blueFire.bind(this);\n    this.fire = this.fire.bind(this);\n\n    this.drawAttack = this.drawAttack.bind(this);\n    this.drawRunning = this.drawRunning.bind(this);\n    this.drawIdle = this.drawIdle.bind(this);\n    this.drawSprite = this.drawSprite.bind(this);\n    this.drawJump = this.drawJump.bind(this);\n    this.loadImage = this.loadImage.bind(this);\n\n    this.setOldPos = this.setOldPos.bind(this);\n    this.inAir = this.inAir.bind(this);\n    this.isIdle = this.isIdle.bind(this);\n    this.whichDirection = this.whichDirection.bind(this);\n    this.setRunning = this.setRunning.bind(this);\n    this.setHit = this.setHit.bind(this);\n\n    this.setDamageMeter = this.setDamageMeter.bind(this);\n    this.damageBoostCountdown = this.damageBoostCountdown.bind(this);\n    this.setShieldTimeOut = this.setShieldTimeOut.bind(this);\n    this.setShield = this.setShield.bind(this);\n    \n    this.setDying = this.setDying.bind(this);\n    this.isClimbing = this.isClimbing.bind(this);\n    this.getDirX = this.getDirX.bind(this);\n    this.getDirY = this.getDirY.bind(this);\n  }\n\n  loadImage(image) {\n    let proj = new Image();\n    proj.src = image;\n    return proj;\n  }\n\n  drawPlayer(frameCount) {\n// .74\n// .59\n    this.setDying();\n    // this.isIdle();\n    if (this.isHit && frameCount % 3 === 0 ) return;\n    if (this.velX === 0) {\n      if (this.direction === \"right\") {\n        this.ctx.drawImage(\n          this.spriteMap,\n          // this.spriteMap,\n          0,\n          // this.spriteMap,\n          529,\n          89,\n          175,\n          this.x, this.y,\n          this.width, this.height\n          // this.width - 5, this.height\n        );\n      } else {\n        this.ctx.scale(-1, 1);\n        this.ctx.drawImage(\n          // this.spriteMap,\n          // (Math.floor(frameCount / 2) % 10) * 147,\n          // 251,\n          // 147,\n          // 251,\n          this.spriteMap,\n          0,\n          529,\n          89,\n          175,\n          -this.x - this.width, this.y,\n          // -this.x - this.width - 5, this.y,\n          this.width, this.height\n          // this.width - 5, this.height\n        );\n        this.ctx.scale(-1, 1);\n      }\n    } else if (this.velX > 0) {\n      this.ctx.drawImage(\n        this.spriteMap,\n        // this.spriteMap,\n        (Math.floor(frameCount / 2) % 12) * 126.25 + 1,\n        // this.spriteMap,\n        0,\n        126.25,\n        175,\n        this.x, this.y,\n        this.width + 5, this.height\n      );\n    } else if (this.velX < 0) {\n      this.ctx.scale(-1, 1);\n      this.ctx.drawImage(\n        this.spriteMap,\n        // this.spriteMap,\n        (Math.floor(frameCount / 2) % 12) * 126.25 + 1,\n        // this.spriteMap,\n        0,\n        126.25,\n        175,\n        -(this.x) - this.width, this.y,\n        this.width + 5, this.height\n      );\n      this.ctx.scale(-1, 1);\n\n    } \n    ///change this.width and height based on movement\n  }\n\n  drawRunning(frameCount) {\n    if (this.direction === \"right\") {\n      this.ctx.drawImage(\n        this.spriteMap,\n        // this.spriteMap,\n        (Math.floor(frameCount / 2) % 12) * 126.4 + 1,\n        // this.spriteMap,\n        0,\n        126.4,\n        175,\n        this.x, this.y,\n        this.width + 5, this.height\n      );\n    } else {\n      this.ctx.scale(-1, 1);\n      this.ctx.drawImage(\n        this.spriteMap,\n        // this.spriteMap,\n        (Math.floor(frameCount / 2) % 12) * 126.4 + 1,\n        // this.spriteMap,\n        0,\n        126.4,\n        175,\n        -(this.x) - this.width, this.y,\n        this.width + 5, this.height\n      );\n      this.ctx.scale(-1, 1);\n\n    } \n  }\n  \n  \n  drawAttack(frameCount, state) {\n    switch (state) {\n      case \"jumping\":\n        if (this.velY < 0) {\n          if (this.direction === \"right\") {\n            this.ctx.drawImage(\n              this.spriteMap,\n              (Math.floor(frameCount / 2) % 3) * 108,\n              1145,\n              108,\n              172,\n              this.x, this.y,\n              this.width + 5, this.height\n              // this.width - 5, this.height\n            );\n          } else {\n            this.ctx.scale(-1, 1);\n            this.ctx.drawImage(\n              this.spriteMap,\n              (Math.floor(frameCount / 2) % 3) * 108,\n              1145,\n              108,\n              172,\n              -this.x - this.width, this.y,\n              // -this.x - this.width - 5, this.y,\n              this.width + 5, this.height\n              // this.width - 5, this.height\n            );\n            this.ctx.scale(-1, 1);\n          }\n        } else if (this.velY > 0) {\n          if (this.direction === \"right\") {\n            this.ctx.drawImage(\n              this.spriteMap,\n              (Math.floor(frameCount / 2) % 3) * 108,\n              1510,\n              108,\n              175,\n              this.x, this.y,\n              this.width, this.height\n              // this.width - 5, this.height\n            );\n          } else {\n            this.ctx.scale(-1, 1);\n            this.ctx.drawImage(\n              this.spriteMap,\n              (Math.floor(frameCount / 2) % 3) * 108,\n              1510,\n              108,\n              175,\n              -this.x - this.width, this.y,\n              // -this.x - this.width - 5, this.y,\n              this.width, this.height\n              // this.width - 5, this.height\n            );\n            this.ctx.scale(-1, 1);\n          }\n        }\n        break;\n      case \"running\":\n        if (this.direction === \"right\") {\n          this.ctx.drawImage(\n            this.spriteMap,\n            (Math.floor(frameCount / 2) % 4) * 160,\n            176,\n            160,\n            175,\n            this.x, this.y,\n            this.width + (this.width / 3), this.height\n          );\n        } else if (this.direction === \"left\") {\n          this.ctx.scale(-1, 1);\n          this.ctx.drawImage(\n            this.spriteMap,\n            (Math.floor(frameCount / 2) % 4) * 160,\n            176,\n            160,\n            175,\n            -this.x - this.width, this.y,\n            this.width + (this.width / 3), this.height\n          );\n          this.ctx.scale(-1, 1);\n        };\n        break;\n      default: \n        if (this.direction === \"right\") {\n          if (this.upPressed) {\n            this.ctx.drawImage(\n              this.spriteMap,\n              (Math.floor(frameCount / 2) % 4) * 89,\n              730,\n              89,\n              195,\n              this.x, this.y - (this.height / 10),\n              this.width, this.height * 1.1\n            );\n          } else {\n            this.ctx.drawImage(\n              this.spriteMap,\n              (Math.floor(frameCount / 2) % 4) * 125.1,\n              353,\n              123.25,\n              175,\n              this.x, this.y,\n              this.width + (this.width / 2.5), this.height\n            );\n          }\n        } else if (this.direction === \"left\") {\n          this.ctx.scale(-1, 1);\n          if (this.upPressed) {\n            this.ctx.drawImage(\n              this.spriteMap,\n              (Math.floor(frameCount / 2) % 4) * 89,\n              730,\n              89,\n              195,\n              -this.x - this.width, this.y - (this.height / 10),\n              this.width, this.height * 1.1\n            );\n          } else {\n            this.ctx.drawImage(\n              this.spriteMap,\n              (Math.floor(frameCount / 2) % 4) * 125.1,\n              353,\n              123.25,\n              175,\n              -this.x - this.width, this.y,\n              this.width + (this.width / 2.5), this.height\n            );\n          }\n          this.ctx.scale(-1, 1);\n        }\n       break;\n    }\n   \n}\n\n  drawJump(frameCount) {\n    if (!this.onGround && this.velY < 0) {\n      if (this.direction === \"right\") {\n        this.ctx.drawImage(\n          this.spriteMap,\n          (Math.floor(frameCount / 2) % 3) * 94,\n          959,\n          94,\n          176,\n          this.x, this.y,\n          this.width - (this.width / 8), this.height\n          // this.width - 5, this.height\n        );\n      } else {\n        this.ctx.scale(-1, 1);\n        this.ctx.drawImage(\n          this.spriteMap,\n          (Math.floor(frameCount / 2) % 3) * 94,\n          959,\n          94,\n          176,\n          -this.x - this.width, this.y,\n          // -this.x - this.width - 5, this.y,\n          this.width - (this.width / 8), this.height\n          // this.width - 5, this.height\n        );\n        this.ctx.scale(-1, 1);\n      }\n    } else if (!this.onGround && this.velY > 1) {\n      if (this.direction === \"right\") {\n        this.ctx.drawImage(\n          this.spriteMap,\n          (Math.floor(frameCount / 2) % 2) * 98,\n          1325,\n          98,\n          175,\n          this.x, this.y,\n          this.width, this.height\n          // this.width - 5, this.height\n        );\n      } else {\n        this.ctx.scale(-1, 1);\n        this.ctx.drawImage(\n          this.spriteMap,\n          (Math.floor(frameCount / 2) % 2) * 98,\n          1325,\n          98,\n          175,\n          -this.x - this.width, this.y,\n          // -this.x - this.width - 5, this.y,\n          this.width, this.height\n          // this.width - 5, this.height\n        );\n        this.ctx.scale(-1, 1);\n      }\n    }\n  }\n\n  drawIdle(frameCount) {\n    if (this.direction === \"right\") {\n      this.ctx.drawImage(\n        this.spriteMap,\n        0,\n        529,\n        89,\n        175,\n        this.x, this.y,\n        this.width, this.height\n        // this.width - 5, this.height\n      );\n    } else {\n      this.ctx.scale(-1, 1);\n      this.ctx.drawImage(\n        this.spriteMap,\n        0,\n        529,\n        89,\n        175,\n        -this.x - this.width, this.y,\n        // -this.x - this.width - 5, this.y,\n        this.width, this.height\n        // this.width - 5, this.height\n      );\n      this.ctx.scale(-1, 1);\n    }\n  }\n\n  drawSprite(frameCount) {\n    this.setDying();\n    // this.isIdle();\n    if (this.damageBoost) {\n      this.ctx.drawImage(\n        this.aura,\n        (Math.floor(frameCount / 3) % 4) * 82,\n        0,\n        82,\n        93,\n        this.x - 28, this.y - 42,\n        100, 130\n        // this.width - 5, this.height\n      );\n    }\n\n    if (this.isHit && frameCount % 3 === 0) return;\n\n\n\n    if (this.velY >= 0 && this.velY <= 1) {\n      if (this.isRunning) {\n        (!this.attacking) ? this.drawRunning(frameCount) : this.drawAttack(frameCount, \"running\");\n      } else {\n        (!this.attacking) ? this.drawIdle(frameCount) : this.drawAttack(frameCount, null);\n      }\n    } else if (!this.onGround) {\n      (!this.attacking) ? this.drawJump(frameCount) : this.drawAttack(frameCount, \"jumping\");\n    }\n\n    if (this.damageBoost) {\n      this.ctx.drawImage(\n        this.aura,\n        (Math.floor(frameCount / 3) % 4) * 82,\n        0,\n        82,\n        93,\n        this.x - 28, this.y - 42,\n        100, 130\n        // this.width - 5, this.height\n      );\n    }\n    if (this.shield) {\n      let count = Math.floor(frameCount / 3) % 11;\n      this.ctx.drawImage(\n        this.shieldImg,\n        (count) * 145.75 + (count * 46.5) + 23,\n        // (count) * 145.75 + 46.5,\n        0,\n        145.75,\n        143,\n        this.x - 12,\n        this.y - 10,\n        85,\n        100\n        // this.width - 5, this.height\n      );\n    }\n  }\n\n  shootFire(vert = null) {\n    if (!this.damageBoost) {\n      this.fire(vert); \n    } else {\n      this.blueFire(vert);\n    }\n  }\n\n  blueFire(vert = null) {\n\n    let key = null;\n    for (let i = 1; i <= Object.keys(this.fireballs).length; i++) {\n      \n      if (!this.fireballs[i]) {\n        key = i;\n        ///////\n        break;\n      }\n    }\n\n    key = (!key) ? Object.keys(this.fireballs).length + 1: key;\n    clearTimeout(this.attackAnimTimeout);\n    this.attacking = true;\n    this.attackAnimTimeout = setTimeout(() => {\n      this.attacking = false;\n    }, 200);\n\n    if (this.direction === \"right\") {\n      if (vert === \"up\") {\n        this.fireballs[key] = new Projectile(\n          Projectile.blueFireballVert(\n            [this.rightSide() - this.width / 2, this.y + this.height],\n            // [this.rightSide() - (this.width / 2),\n            // this.bottomSide() + this.height],\n            0,\n            -30,\n            vert\n          )\n        );\n      } else if (vert === \"down\") {\n        this.fireballs[key] = new Projectile(\n          Projectile.blueFireballVert(\n            [\n              this.rightSide() - this.width / 2,\n              this.bottomSide() - this.height\n            ],\n            0,\n            30,\n            vert\n          )\n        );\n          this.velY = -3;\n        \n      } else {\n        this.fireballs[key] = new Projectile(\n          Projectile.blueFireball(\n            [\n              this.rightSide() - this.width / 10,\n              this.topSide() + this.height / 5\n            ],\n            30,\n            0,\n            \"right\"\n          )\n        );\n      }\n\n    } else if (this.direction === \"left\") {\n\n      if (vert === \"up\") {\n        this.fireballs[key] = new Projectile(\n          Projectile.blueFireballVert(\n            [this.rightSide() - (this.width * .75),\n              this.y + (this.height)],\n            // [this.rightSide() - (this.width / 2),\n            // this.bottomSide() + this.height],\n            0, -30, vert)\n        );\n      } else if (vert === \"down\") {\n        this.fireballs[key] = new Projectile(\n          Projectile.blueFireballVert(\n            [this.rightSide() - (this.width / 2),\n            this.bottomSide() - this.height],\n            0, 30, vert)\n        );\n        this.velY -= 10;\n        this.jumpCount -= 1;\n      } else {\n        this.fireballs[key] = new Projectile(\n          Projectile.blueFireball(\n            [\n              this.leftSide() - (this.width + (this.width / 2)),\n              this.topSide() + (this.height / 5)\n            ],\n            -30,\n            0,\n            \"left\"\n          )\n        );\n      }\n\n    }\n    this.fireballs[key].launchSound.play();\n\n  }\n\n  fire(vert = null) {\n    if (Object.keys(this.fireballs).length === 3) {\n      this.attacking = false;\n      return;\n    }\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.fireballs[i]) {\n        key = i;\n        clearTimeout(this.attackAnimTimeout);\n        this.attacking = true;\n        this.attackAnimTimeout = setTimeout(() => {\n          this.attacking = false\n        }, 200)\n        ///////\n        break;\n      }\n    }\n\n    if (this.direction === \"right\") {\n      if (vert === \"up\") {\n        this.fireballs[key] = new Projectile(\n          Projectile.fireballVert(\n            [this.rightSide() - (this.width / 2),\n            this.y + (this.height)],\n            // [this.rightSide() - (this.width / 2),\n            // this.bottomSide() + this.height],\n            0, -20, vert)\n        );\n      } else if (vert === \"down\") {\n        this.fireballs[key] = new Projectile(\n          Projectile.fireballVert(\n            [this.rightSide() - (this.width / 2),\n            this.bottomSide() - this.height],\n            0, 20, vert)\n            );\n          this.velY = -3;\n        \n      } else {\n        this.fireballs[key] = new Projectile(\n          Projectile.fireball(\n            [this.rightSide() - (this.width / 10),\n            this.topSide() + (this.height / 5)],\n            20, 0, \"right\")\n        );\n      }\n\n    } else if (this.direction === \"left\") {\n\n      if (vert === \"up\") {\n        this.fireballs[key] = new Projectile(\n          Projectile.fireballVert(\n            [this.rightSide() - (this.width * .75),\n              this.y + (this.height)],\n            // [this.rightSide() - (this.width / 2),\n            // this.bottomSide() + this.height],\n            0, -20, vert)\n        );\n      } else if (vert === \"down\") {\n        this.fireballs[key] = new Projectile(\n          Projectile.fireballVert(\n            [this.rightSide() - (this.width / 2),\n            this.bottomSide() - this.height],\n            0, 20, vert)\n        );\n        this.velY -= 10;\n        this.jumpCount -= 1;\n      } else {\n        this.fireballs[key] = new Projectile(\n          Projectile.fireball(\n            [\n              this.leftSide() - (this.width + (this.width / 2)),\n              this.topSide() + (this.height / 5)\n            ],\n            -20,\n            0,\n            \"left\"\n          )\n        );\n      }\n\n    }\n    this.fireballs[key].launchSound.play();\n\n  }\n    \n  setHit(damage = 10) {\n    if (this.shield) return;\n    if (!this.isHit) {\n      this.isHit = true;\n      this.hitCooldown = setTimeout(() => {\n        this.isHit = false;\n      }, 2000);\n      this.health -= damage;\n      this.setDamageMeter(damage);\n    }\n  }\n\n  setDamageMeter(damage) {\n    if (!this.damageBoost) {\n      this.damageMeter += damage;\n\n\n      if (this.damageMeter >= 100) {\n        this.damageMeter = 100;\n        this.damageBoost = true;\n        this.damageBoostCountdown();\n      }\n    }\n  }\n\n  damageBoostCountdown() {\n    this.damageMeterInterval = setInterval(() => {\n      this.damageMeter -= 1;\n      if (this.damageMeter <= 0) {\n        this.damageMeter = 0;\n        clearInterval(this.damageMeterInterval);\n        this.damageBoost = false;\n      };\n    }, 100);\n  }\n\n  setShield() {\n    this.shield = true;\n    this.setShieldTimeOut();\n  }\n\n  setShieldTimeOut() {\n    this.shieldTimeOut = setTimeout(() => {\n      this.shield = false;\n    }, 10000);\n  }\n\n  setDying() {\n\n    if (this.health <= 0) {\n      this.health = 0;\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      setTimeout(() => {\n        this.dead = true;\n      }, 1000);\n    }\n  }\n\n\n  rightSide() {\n    return this.x + this.width;\n  }\n\n  leftSide() {\n    return this.x;\n  }\n\n  topSide() {\n    return this.y;\n  }\n\n  bottomSide() {\n    return this.y + this.height;\n  }\n\n  \n  setOldPos() {\n    this.oldX = this.x;\n    this.oldY = this.y;\n  }\n\n  getDirX() {\n    return this.x + this.velX;\n  }\n\n  getDirY() {\n    return this.y + this.velY;\n  }\n\n  isIdle() {\n    if (this.velX === 0 && this.velY === 0) {\n      this.idle = true;\n    } else {\n      this.idle = false;\n    }\n  }\n\n  inAir() {\n    if (!this.onGround ) {\n      this.y += this.velY;\n      (this.velY + CONSTANTS.GRAVITY > 25) ? this.velY = 25 : this.velY += CONSTANTS.GRAVITY;\n    } else {\n      this.velY = 0;\n    }\n  }\n\n  isClimbing() {\n    if (this.climbing && this.canClimb && this.keydown) {\n      this.y += this.velY;\n    } else {\n      this.velY = 0;\n    }\n  }\n\n  // isDashing() {\n  //   if (this.dashing && this.runningKeyDown) {\n  //     if (this.velX > 7) {\n  //       this.velX -= .1;\n  //     } else if (this.velX < -7) {\n  //       this.velX += .1;\n  //     }\n        \n  //   } \n  //   // else if (this.dashing && !this.runningKeyDown) {\n  //   //   if (this.velX > 0) {\n  //   //     this.velX -= .5;\n  //   //   } else if (this.velX < 0) {\n  //   //     this.velX += .5;\n  //   //   }\n  //   // }\n\n  // }\n\n  // dash() {\n  //   if (this.dashing) return;\n\n  //   this.dashing = true;\n  //   this.velX = (this.direction === \"right\") ? 15 : -15;\n  //   this.dashTimeout = setTimeout(() => {\n  //     this.dashing = false;\n  //   }, 1000)\n  // }\n\n\n  jump() {\n    if (this.jumpCount === 2) {\n      this.onGround = false;\n      this.velY = 0 - 15;\n      this.jumpCount = 1;\n    } else if (this.jumpCount === 1) {\n      this.velY = 0 - 15;\n      this.jumpCount = 0;\n    }\n  }\n\n  climb() {\n    this.climb = (this.climb) ? false : true;\n  }\n\n\n\n\n  setRunning() {\n    if (this.velX !== 0) {\n      this.isRunning = true;\n      this.width = this.runWidth;\n    } else {\n      this.isRunning = false;\n      this.width = this.idleWidth;\n    }\n  }\n\n\n\n  whichDirection() {\n    this.direction = this.velX >= 0 ? \"right\" : \"left\";\n  }\n\n}\n\nexport default Player;","import Player from \"../Player\";\nimport Projectile from \"../Objects/Projectiles/Projectile\";\n// import ElectricBall from \"../Objects/Projectiles/ElectricBall\";\nimport Enemy from \"../Objects/Enemies/Enemy\";\n// import Helicopter from \"../Objects/Enemies/Helicopter\";\n\nclass Collision {\n  constructor() {\n\n\n    this.collidePlayer = this.collidePlayer.bind(this);\n    this.collidePlatform = this.collidePlatform.bind(this);\n    this.collidePlatTop = this.collidePlatTop.bind(this);\n    this.collidePlatBottom = this.collidePlatBottom.bind(this);\n    this.collidePlatLeft = this.collidePlatLeft.bind(this);\n    this.collidePlatRight = this.collidePlatRight.bind(this);\n    // this.collidePlatformSlopeRight = this.collidePlatformSlopeRight.bind(this);\n    this.collideSlopeFortyFiveRight = this.collideSlopeFortyFiveRight.bind(this);\n    this.collideSlopeFortyFiveRightBottom = this.collideSlopeFortyFiveRightBottom.bind(this);\n    this.collideSlopeFortyFiveLeft = this.collideSlopeFortyFiveLeft.bind(this);\n    this.collideSlopeFortyFiveLeftBottom = this.collideSlopeFortyFiveLeftBottom.bind(this);\n\n    this.collideSlopeTwentyLeft = this.collideSlopeTwentyLeft.bind(this);\n    this.collideSlopeTwentyLeftBottom = this.collideSlopeTwentyLeftBottom.bind(this);\n\n    this.collideSlopeTwentyRight = this.collideSlopeTwentyRight.bind(this);\n    this.collideSlopeTwentyRightBottom = this.collideSlopeTwentyRightBottom.bind(this);\n    \n    this.climbable = this.climbable.bind(this);\n\n    this.collideEnemy = this.collideEnemy.bind(this);\n\n    this.collisionPlatformKeys = {\n      1: (obj, x, y, colVal, tileSize) => {\n        this.collidePlatTop(obj, y);\n      },\n      2: (obj, x, y, colVal, tileSize) => {\n        ////thin platform\n        if (obj.velY > 0) {\n          this.collidePlatTop(obj, y);\n        }\n      },\n      3: (obj, x, y, colVal, tileSize) => {\n        /// bottom\n        this.collidePlatBottom(obj, y + tileSize);\n      },\n      4: (obj, x, y, colVal, tileSize) => {\n        ///left\n        this.collidePlatLeft(obj, x);\n      },\n      5: (obj, x, y, colVal, tileSize) => {\n        ///right\n        this.collidePlatRight(obj, x + tileSize);\n      },\n      6: (obj, x, y, colVal, tileSize) => {\n        ///top / left\n        ///  __\n        /// |\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          // this.collidePlatTop(obj, y)\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      7: (obj, x, y, colVal, tileSize) => {\n        ///top / right\n        ///  __\n        ///    |\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n        }\n      },\n      8: (obj, x, y, colVal, tileSize) => {\n        /// bottom / left\n        ///   __|\n\n        if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      9: (obj, x, y, colVal, tileSize) => {\n        /// bottom / right\n        ///   |__\n        if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x);\n        }\n      },\n      10: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom\n        //// ___\n        //// ___\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          this.collidePlatBottom(obj, y + tileSize);\n        }\n      },\n      11: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom / left\n        ////   ___\n        ////  |___ \n\n        if (obj.velY > 0) {\n          if (this.collidePlatTop(obj, y)) {\n            return;\n          } else if (this.collidePlatBottom(obj, y + tileSize)) {\n            return;\n          } else {\n            this.collidePlatLeft(obj, x);\n          }\n        }\n      },\n      12: (obj, x, y, colVal, tileSize) => {\n        ///top / left / right\n        ////  ___\n        //// |   | \n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else if (this.collidePlatRight(obj, x + tileSize)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      13: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom / right\n        ////  ___\n        ////  ___| \n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n        }\n      },\n      14: (obj, x, y, colVal, tileSize) => {\n        ///bottom / left / right\n        ////  \n        //// |___|\n        if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else if (this.collidePlatRight(obj, x + tileSize)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      15: (obj, x, y, colVal, tileSize) => {\n        //top half in\n        if (obj.velY > 0) {\n\n          this.collidePlatTop(obj, y + tileSize / 2);\n        }\n      },\n      16: (obj, x, y, colVal, tileSize) => {\n        //bottom half in\n        this.collidePlatBottom(obj, y + tileSize / 2);\n      },\n      17: (obj, x, y, colVal, tileSize) => {\n        //left half in\n        this.collidePlatLeft(obj, x + tileSize / 2);\n      },\n      18: (obj, x, y, colVal, tileSize) => {\n        //right half in\n        this.collidePlatRight(obj, x + tileSize / 2);\n      },\n      19: (obj, x, y, colVal, tileSize) => {\n        //top  half in/ left\n        ///\n        ///|---\n        if (this.collidePlatTop(obj, y + tileSize / 2)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      20: (obj, x, y, colVal, tileSize) => {\n        //top  half in/ right\n        /// ---|\n\n        if (this.collidePlatTop(obj, y + tileSize / 2)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n        }\n      },\n      21: (obj, x, y, colVal, tileSize) => {\n        //bottom half in/ left\n        ///\n        ///|---\n        if (this.collidePlatBottom(obj, y + tileSize / 2)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      22: (obj, x, y, colVal, tileSize) => {\n        //bottom half in/ right\n        /// ---|\n\n        if (this.collidePlatBottom(obj, y + tileSize / 2)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n        }\n      },\n      23: (obj, x, y, colVal, tileSize) => {\n        //top / left half in\n        if (this.collidePlatLeft(obj, x + tileSize / 2)) {\n          return;\n        } else if (obj.x + obj.width > x + tileSize / 2) {\n          this.collidePlatTop(obj, y);\n        }\n      },\n      24: (obj, x, y, colVal, tileSize) => {\n        //top / right half in\n        if (this.collidePlatRight(obj, x + tileSize / 2)) {\n          return;\n        } else if (obj.x < x + tileSize / 2 || obj.x + this.width > x) {\n          this.collidePlatTop(obj, y);\n        }\n      },\n      25: (obj, x, y, colVal, tileSize) => {\n        //bottom / left half in\n        if (this.collidePlatLeft(obj, x + tileSize / 2)) {\n          return;\n        } else if (obj.x + obj.width > x + tileSize / 2) {\n          this.collidePlatBottom(obj, y + tileSize);\n        }\n      },\n      26: (obj, x, y, colVal, tileSize) => {\n        //bottom / right half in\n        if (this.collidePlatRight(obj, x + tileSize / 2)) {\n          return;\n        } else if (obj.x < x + tileSize / 2) {\n          this.collidePlatBottom(obj, y + tileSize);\n        }\n      },\n      27: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom / left half in\n        ////   ___\n        ////  |___ \n        if (obj.x + obj.width > x) {\n          if (this.collidePlatLeft(obj, x + tileSize / 2)) {\n            return;\n          } else if (\n            this.collidePlatBottom(obj, y + tileSize)) {\n            return;\n          } else {\n            this.collidePlatTop(obj, y);\n          }\n        }\n      },\n      28: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom / right half in\n        ////   ___\n        ////   ___| \n        if (obj.x < x + tileSize) {\n          if (this.collidePlatRight(obj, x + tileSize / 2)) {\n            return;\n          } else if (this.collidePlatBottom(obj, y + tileSize)) {\n            return;\n          } else {\n            this.collidePlatTop(obj, y);\n          }\n        }\n      },\n\n      29: (obj, x, y, colVal, tileSize) => {\n        //top half in/ left half in\n        ///\n        ///|---\n        if (obj.x + obj.width > x && obj.y + obj.height > y) {\n          if (this.collidePlatTop(obj, y + tileSize / 2)) {\n            return;\n          } else {\n            this.collidePlatLeft(obj, x + tileSize / 2);\n          }\n        }\n      },\n      30: (obj, x, y, colVal, tileSize) => {\n        //top half in/ right half in\n        /// ---|\n        if (obj.x < x + (tileSize / 2) && obj.y + obj.height > y + (tileSize / 2)) {\n\n          if (this.collidePlatTop(obj, y + tileSize / 2)) {\n            return;\n          } else {\n            this.collidePlatRight(obj, x + tileSize / 2);\n        }\n        }\n      },\n      31: (obj, x, y, colVal, tileSize) => {\n        //bottom half in/ left half in\n        ///\n        ///|---\n        if (obj.x > x && obj.y < y + tileSize) {\n\n          if (this.collidePlatBottom(obj, y + tileSize / 2)) {\n            return;\n          } else {\n            this.collidePlatLeft(obj, x + tileSize / 2);\n          }\n        }\n      },\n      32: (obj, x, y, colVal, tileSize) => {\n        //bottom half in/ right half in\n        /// ---|\n        if (obj.x < x + tileSize && obj.y < y + tileSize) {\n\n          if (this.collidePlatBottom(obj, y + tileSize / 2)) {\n            return;\n          } else {\n            this.collidePlatRight(obj, x + tileSize / 2);\n          }\n        }\n      },\n      33: (obj, x, y, colVal, tileSize) => {\n        ////For Bottom of Screen\n          this.collidePlatTop(obj, y + (tileSize * 0.8));\n      },\n\n      34: (obj, x, y, colVal, tileSize) => {\n        //////////SLOPES/////////////\n        //45 deg left\n\n        if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else {\n          (this.collideSlopeFortyFiveLeft(obj, x + tileSize, y + tileSize))\n\n        }\n      },\n      35: (obj, x, y, colVal, tileSize) => {\n        //45 deg right\n        this.collideSlopeFortyFiveRight(obj, x, y + tileSize);\n      },\n      36: (obj, x, y, colVal, tileSize) => {\n        //22 deg left bottom half\n        this.collideSlopeTwentyLeft(obj, x + tileSize, y + tileSize);\n      },\n      37: (obj, x, y, colVal, tileSize) => {\n        //22 deg right bottom half\n        this.collideSlopeTwentyRight(obj, x, y + tileSize);\n      },\n      38: (obj, x, y, colVal, tileSize) => {\n        //22 deg left top half\n        this.collideSlopeTwentyLeft(obj, x, y + tileSize, 30);\n      },\n      39: (obj, x, y, colVal, tileSize) => {\n        //22 deg right top half\n        this.collideSlopeTwentyRight(obj, x, y + tileSize, tileSize / 2);\n      },\n\n\n      40: (obj, x, y, colVal, tileSize) => {\n        //////////////COLLIDE WITH BOTTOM OF SLOPE//////////\n        //45 deg right bottom\n        ///  /\n        this.collideSlopeFortyFiveRightBottom(obj, x, y + tileSize);\n      },\n      41: (obj, x, y, colVal, tileSize) => {\n        //45 deg left bottom\n          ///  \\\n        this.collideSlopeFortyFiveLeftBottom(obj, x + tileSize, y + tileSize);\n      },\n      42: (obj, x, y, colVal, tileSize) => {\n        //22 deg left bottom / bottom half\n        this.collideSlopeTwentyLeftBottom(obj, x + tileSize, y + tileSize);\n      },\n      43: (obj, x, y, colVal, tileSize) => {\n        //22 deg right bottom / bottom half\n        this.collideSlopeTwentyRightBottom(obj, x, y + tileSize );\n      },\n      44: (obj, x, y, colVal, tileSize) => {\n        //22 deg left bottom / top half\n        this.collideSlopeTwentyLeftBottom(obj, x + tileSize, y + tileSize, tileSize / 2);\n      },\n      45: (obj, x, y, colVal, tileSize) => {\n        //22 deg right bottom / top half\n        this.collideSlopeTwentyRightBottom(obj, x, y + tileSize, tileSize / 2);\n      },\n\n      \n      46: (obj, x, y, colVal, tileSize) => {\n        //45 deg left bottom / top\n        ///  \n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          this.collideSlopeFortyFiveLeftBottom(obj, x, y + tileSize);\n        }\n      },\n      47: (obj, x, y, colVal, tileSize) => {\n        //45 deg right bottom / top\n        ///\n        if (obj.velY > 0) {\n          if (this.collidePlatTop(obj, y)) {\n            return;\n          }\n        }\n        this.collideSlopeFortyFiveRightBottom(obj, x, y + tileSize);\n      },\n\n\n      48: (obj, x, y, colVal, tileSize) => {\n        //45 deg left & left\n        ///  |\\\n        if (this.collidePlatLeft(obj, x)) {\n          return;\n        } else {\n          this.collideSlopeFortyFiveLeft(obj, x, y + tileSize);\n        }\n      },\n      49: (obj, x, y, colVal, tileSize) => {\n        //45 deg left  & right\n        /// /| \n        if (this.collidePlatRight(obj, x + tileSize)) {\n          return;\n        } else {\n          this.collideSlopeTwentyRight(obj, x, y + tileSize, tileSize / 2);\n        }\n      },\n      50: (obj, x, y, colVal, tileSize) => {\n        //22 deg left top half & left\n        ///  |\\\n        if (this.collidePlatLeft(obj, x)) {\n          return;\n        } else {\n          this.collideSlopeTwentyLeft(obj, x, y + tileSize, tileSize / 2);\n        }\n      },\n      51: (obj, x, y, colVal, tileSize) => {\n        //22 deg left top half & right\n        /// /| \n        if (this.collidePlatRight(obj, x + tileSize)) {\n          return;\n        } else {\n          this.collideSlopeTwentyRight(obj, x, y + tileSize, tileSize / 2);\n        }\n      },\n\n\n      53: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom / left / right\n        ////   ___\n        ////  |___ |\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else if (this.collidePlatRight(obj, x + tileSize)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n\n      54: (obj, x, y, colVal, tileSize) => {\n        ////For Bottom of Screen\n        if (this.collidePlatTop(obj, y + (tileSize * 0.9))) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n          return;\n        }\n      },\n\n      58: (obj, x, y, colVal, tileSize) => {\n        // climb\n\n      if (obj.x + obj.width > x + (tileSize / 4) && obj.x < x + (tileSize * (3/4))) {\n\n          this.climbable(obj, x, y, tileSize);\n        } else if (this.collidePlatTop(obj, y)) {\n          return;\n        }\n      },\n\n\n      63: (obj, x, y, colVal, tileSize) => {\n        ///right / left / bottom thorn\n        if (this.collidePlatLeft(obj, x)) {\n          if (obj instanceof Player) {\n            obj.setHit(5);\n          }\n          return;\n        } else if (this.collidePlatBottom(obj, y + tileSize / 6)) {\n          if (obj instanceof Player) {\n            obj.setHit(5);\n          }\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n          if (obj instanceof Player) {\n            obj.setHit(5);\n          }\n        }\n      },\n      67: (obj, x, y, colVal, tileSize) => {\n        ///thorn bottom\n        this.collidePlatBottom(obj, y + tileSize / 6);\n        if (obj instanceof Player) {\n          obj.setHit(5);\n        }\n      },\n    };\n\n\n  //   this.colsionPlatformKeys = {\n  //     1: (obj, x, y, colVal, tileSize) => {\n  //       this.collidePlatTop(obj, y);\n  //     },\n  //     2: (obj, x, y, colVal, tileSize) => {\n  //       ////thin platform\n  //       if (obj.velY > 0) {\n  //         this.collidePlatTop(obj, y);\n  //       }\n  //     },\n  //     3: (obj, x, y, colVal, tileSize) => {\n  //       ///top / left\n  //       if (this.collidePlatTop(obj, y)) {\n  //         return;\n  //       } else {\n  //         // this.collidePlatTop(obj, y)\n  //         this.collidePlatLeft(obj, x);\n  //       }\n  //     },\n  //     4: (obj, x, y, colVal, tileSize) => {\n  //       ///top / left / right\n  //       if (this.collidePlatTop(obj, y)) {\n  //         return;\n  //       } else if (this.collidePlatRight(obj, x + tileSize)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatLeft(obj, x);\n  //       }\n  //     },\n  //     5: (obj, x, y, colVal, tileSize) => {\n  //       ///top / bottom / right\n  //       if (this.collidePlatTop(obj, y)) {\n  //         return;\n  //       } else if (this.collidePlatBottom(obj, y + tileSize)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatRight(obj, x + tileSize);\n  //       }\n  //     },\n  //     6: (obj, x, y, colVal, tileSize) => {\n  //       ///top / bottom\n  //       if (this.collidePlatTop(obj, y)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatBottom(obj, y + tileSize);\n  //       }\n  //     },\n  //     7: (obj, x, y, colVal, tileSize) => {\n  //       ///thorn bottom\n  //       this.collidePlatBottom(obj, y + tileSize / 6);\n  //       if (obj instanceof Player) {\n  //         obj.setHit(5);\n  //       }\n  //     },\n  //     8: (obj, x, y, colVal, tileSize) => {\n  //       ///top / right\n  //       if (this.collidePlatTop(obj, y)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatRight(obj, x + tileSize);\n  //       }\n  //     },\n  //     9: (obj, x, y, colVal, tileSize) => {\n  //       ///left\n  //       this.collidePlatLeft(obj, x);\n  //     },\n  //     10: (obj, x, y, colVal, tileSize) => {\n  //       ///right\n  //       this.collidePlatRight(obj, x + tileSize);\n  //     },\n  //     11: (obj, x, y, colVal, tileSize) => {\n  //       ///right / left / bottom thorn\n  //       if (this.collidePlatLeft(obj, x)) {\n  //         if (obj instanceof Player) {\n  //           obj.setHit(5);\n  //         }\n  //         return;\n  //       } else if (this.collidePlatBottom(obj, y + tileSize / 6)) {\n  //         if (obj instanceof Player) {\n  //           obj.setHit(5);\n  //         }\n  //         return;\n  //       } else {\n  //         this.collidePlatRight(obj, x + tileSize);\n  //         if (obj instanceof Player) {\n  //           obj.setHit(5);\n  //         }\n  //       }\n  //     },\n  //     12: (obj, x, y, colVal, tileSize) => {\n  //       //top / left half in\n  //       if (this.collidePlatLeft(obj, x + tileSize / 2)) {\n  //         return;\n  //       } else if (obj.x + obj.width > x + tileSize / 2) {\n  //         this.collidePlatTop(obj, y);\n  //       }\n  //     },\n  //     13: (obj, x, y, colVal, tileSize) => {\n  //       //top / right half in\n  //       if (this.collidePlatRight(obj, x + tileSize / 2)) {\n  //         return;\n  //       } else if (obj.x < x + tileSize / 2) {\n  //         this.collidePlatTop(obj, y);\n  //       }\n  //     },\n  //     14: (obj, x, y, colVal, tileSize) => {\n  //       /// bottom / left\n  //       if (this.collidePlatBottom(obj, y + tileSize)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatLeft(obj, x);\n  //       }\n  //     },\n  //     15: (obj, x, y, colVal, tileSize) => {\n  //       /// bottom / right\n  //       if (this.collidePlatBottom(obj, y + tileSize)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatRight(obj, x);\n  //       }\n  //     },\n  //     16: (obj, x, y, colVal, tileSize) => {\n  //       /// bottom\n  //       this.collidePlatBottom(obj, y + tileSize);\n  //     },\n  //     17: (obj, x, y, colVal, tileSize) => {\n  //       ///left\n  //       this.collidePlatLeft(obj, x);\n  //     },\n\n  //     18: (obj, x, y, colVal, tileSize) => {\n  //       //45 deg right\n  //       this.collideSlopeFortyFiveRight(obj, x, y + tileSize);\n  //     },\n  //     19: (obj, x, y, colVal, tileSize) => {\n  //       //45 deg left\n  //       this.collideSlopeFortyFiveLeft(obj, x + tileSize, y + tileSize);\n  //     },\n  //     20: (obj, x, y, colVal, tileSize) => {\n  //       //22 deg right bottom half\n  //       this.collideSlopeTwentyRight(obj, x, y + tileSize);\n  //     },\n  //     21: (obj, x, y, colVal, tileSize) => {\n  //       //22 deg left bootom half\n  //       this.collideSlopeTwentyLeft(obj, x + tileSize, y + tileSize);\n  //     },\n  //     22: (obj, x, y, colVal, tileSize) => {\n  //       //22 deg right top half\n  //       this.collideSlopeTwentyRight(obj, x, y + tileSize, tileSize / 2);\n  //     },\n  //     23: (obj, x, y, colVal, tileSize) => {\n  //       //22 deg left top half\n  //       this.collideSlopeTwentyLeft(obj, x, y + tileSize, tileSize / 2);\n  //     },\n  //     24: (obj, x, y, colVal, tileSize) => {\n  //       //22 deg left top half & left\n  //       ///refactor////\n  //       if (this.collidePlatLeft(obj, x)) {\n  //         return;\n  //       } else {\n  //         this.collideSlopeTwentyLeft(obj, x, y + tileSize, tileSize / 2);\n  //       }\n  //     },\n  //     25: (obj, x, y, colVal, tileSize) => {\n  //       //right half in\n  //       this.collidePlatRight(obj, x + tileSize / 2);\n  //     },\n  //     26: (obj, x, y, colVal, tileSize) => {\n  //       //left half in\n  //       this.collidePlatLeft(obj, x + tileSize / 2);\n  //     },\n  //     27: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ right half in\n  //       if (this.collidePlatRight(obj, x + tileSize / 2)) {\n  //         return;\n  //       } else if (obj.x < x + tileSize / 2) {\n  //         this.collidePlatTop(obj, y + tileSize / 2);\n  //       }\n  //     },\n  //     28: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ right half in / bottom\n  //       if (obj.x < x + tileSize / 2) {\n  //         if (this.collidePlatTop(obj, y + tileSize / 2)) {\n  //           return;\n  //         } else if (this.collidePlatBottom(obj, y + tileSize)) {\n  //           return;\n  //         } else {\n  //           this.collidePlatRight(obj, x + tileSize / 2);\n  //         }\n  //       }\n  //     },\n  //     29: (obj, x, y, colVal, tileSize) => {\n  //       //top half in\n  //       this.collidePlatTop(obj, y + tileSize / 2);\n  //     },\n  //     30: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ left half in / bottom\n  //       if (obj.x + obj.width > x + tileSize / 2) {\n  //         if (this.collidePlatTop(obj, y + tileSize / 2)) {\n  //           return;\n  //         } else if (this.collidePlatBottom(obj, y + tileSize)) {\n  //           return;\n  //         } else {\n  //           this.collidePlatLeft(obj, x + tileSize / 2);\n  //         }\n  //       }\n  //     },\n  //     31: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ right\n  //       if (this.collidePlatTop(obj, y + tileSize / 2)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatRight(obj, x + tileSize);\n  //       }\n  //     },\n  //     32: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ left\n  //       if (this.collidePlatTop(obj, y + tileSize / 2)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatLeft(obj, x);\n  //       }\n  //     },\n  //     33: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ left\n  //       if (obj.x > x + (tileSize / 4) && obj.x < x + (tileSize * (3/4))) {\n\n  //         this.climbable(obj, x, y, tileSize);\n  //       }\n  //     }\n  //   };\n  }\n\n  collidePlayer(player, canvas, cleared) {\n    if (player.x < 0) {\n      player.x = 0.01;\n      player.velX = 0;\n    } else if (player.x + player.width > canvas.width && !cleared) {\n      player.x = canvas.width - player.width;\n      player.velX = 0;\n    }\n\n    // if (player.y < 0) {\n    //   player.velY = 0;\n    //   player.y = 0.01;\n    // } else\n    if (player.y > canvas.height) {\n      // player.velY = 0;\n      // player.y = canvas.height - player.height - 0.1;\n      // player.jumpCount = 2;\n      // player.onGround = true;\n      // player.dead = true;\n      player.y = 0;\n      player.setHit(50);\n    }\n  }\n\n  climbable(obj, x, y) {\n    obj.canClimb = true;\n  }\n\n  collideProjectile(obj1, obj2) {\n    // if (!obj1 || !obj2) return false;\n    // if (obj2.dying || obj2.dead) return false;\n    let hitBox = obj2.hitBox();\n \n\n    if (\n      obj1.x < hitBox.right &&\n      obj1.x + obj1.width > hitBox.left &&\n      obj1.y < hitBox.bottom &&\n      obj1.y + obj1.height > hitBox.top\n    ) {\n      obj1.velY = -(obj1.velY / 3);\n      obj1.velX = -(obj1.velX / 3);\n      ///hit\n      obj1.setHit(obj2.damage);\n      obj2.setHit();\n      ///change Hit\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  collideEnemy(obj1, obj2) {\n    // if (!obj1 || !obj2) return false;\n    if (obj2.dying || obj2.dead) return false;\n\n    if (\n      obj1.x < obj2.x + obj2.width &&\n      obj1.x + obj1.width > obj2.x &&\n      obj1.y < obj2.y + obj2.height &&\n      obj1.y + obj1.height > obj2.y\n    ) {\n      // if (this.hitBox(obj1, obj2)) {\n      if (obj1 instanceof Player && !obj1.isHit) {\n        obj1.velY = -(obj1.velY / 3);\n        obj1.velX = -(obj1.velX / 3);\n        ///hit\n        obj1.setHit(obj2.damage);\n        return true;\n      }\n      if (obj1 instanceof Projectile) {\n        obj2.setHit(obj1.damage);\n        \n        if (obj2.health <= 0 && obj1.dir === \"down\") {\n          obj2.points *= 2\n        }\n        \n        setTimeout(() => {\n          obj1.setHit();\n\n        }, 10);\n\n        return true;\n      }\n    } else {\n      return false;\n    }\n  }\n  \n\n  ////////PLATFORM COLLISION\n\n  collideSlopeFortyFiveRight(gameObj, tileLeft, tileBottom) {\n    ///60 x60 120 y 60 120 (60, 120] [ 60, 120])\n    let tileY = tileBottom - (gameObj.rightSide() - tileLeft);\n    if (gameObj instanceof Player) {\n      if (gameObj.onGround) {\n        if (\n          gameObj.bottomSide() > tileBottom &&\n          gameObj.oldY + gameObj.height < tileBottom\n        ) {\n          gameObj.velY = 0;\n          gameObj.y = tileBottom - gameObj.height - 0.2;\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          return;\n        }\n        gameObj.y = tileY - gameObj.height - 0.2;\n      } else if (!gameObj.onGround) {\n        if (\n          gameObj.rightSide() > tileLeft &&\n          gameObj.bottomSide() > tileY &&\n          gameObj.oldY + gameObj.height < tileY\n        ) {\n          gameObj.vlY = 0;\n\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          // gameObj.getDirY() + 60 > tileY) {\n          gameObj.y = tileY - gameObj.height - 0.2;\n        }\n      }\n    }\n    if (gameObj instanceof Projectile) {\n      gameObj.setHit();\n      //set null\n      return true;\n    }\n  }\n\n  collideSlopeFortyFiveRightBottom(gameObj, tileLeft, tileBottom) {\n    ///60 x60 120 y 60 120 (60, 120] [ 60, 120])\n    let tileY = tileBottom - (gameObj.rightSide() - tileLeft);\n    if (\n      gameObj.rightSide() > tileLeft &&\n      gameObj.topSide() < tileY &&\n      gameObj.oldY > tileY\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        //set null\n        return true;\n      }\n      // gameObj.getDirY() + 60 > tileY) {\n      gameObj.y = tileY + 0.05;\n    }\n\n  }\n\n  collideSlopeFortyFiveLeft(gameObj, tileRight, tileBottom) {\n    let tileY = tileBottom - (tileRight - gameObj.leftSide());\n    if (gameObj instanceof Player) {\n      if (gameObj.onGround) {\n        if (\n          gameObj.bottomSide() > tileBottom &&\n          gameObj.oldY + gameObj.height < tileBottom\n        ) {\n          gameObj.velY = 0;\n\n          gameObj.y = tileBottom - gameObj.height - 0.02;\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          return;\n        }\n        gameObj.y = tileY - gameObj.height - 0.02;\n      } else if (!gameObj.onGround) {\n        if (\n          gameObj.leftSide() < tileRight &&\n          gameObj.bottomSide() > tileY &&\n          gameObj.oldY + gameObj.height < tileY\n        ) {\n          gameObj.velY = 0;\n\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          gameObj.y = tileY - gameObj.height - 0.02;\n        }\n      }\n    }\n    if (gameObj instanceof Projectile) {\n      gameObj.setHit();\n      //set null\n      return true;\n    }\n  }\n\n  collideSlopeFortyFiveLeftBottom(gameObj, tileRight, tileBottom) {\n    let tileY = tileBottom - (tileRight - gameObj.leftSide());\n    if (\n      gameObj.leftSide() < tileRight &&\n      gameObj.topSide() < tileY &&\n      gameObj.oldY > tileY\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        //set null\n        return true;\n      }\n      // gameObj.getDirY() + 60 > tileY) {\n      gameObj.y = tileY + 0.05;\n    }\n\n    \n\n  }\n\n \n\n  collideSlopeTwentyRight(gameObj, tileLeft, tileBottom, half = 0) {\n\n    let tileY = tileBottom - (half + (gameObj.rightSide() - tileLeft) / 2);\n    if (gameObj instanceof Player) {\n      if (gameObj.onGround) {\n        if (\n          gameObj.bottomSide() > tileBottom &&\n          gameObj.oldY + gameObj.height < tileBottom\n        ) {\n          gameObj.y = tileBottom - gameObj.height - 0.05;\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          return;\n        }\n        gameObj.y = tileY - gameObj.height - 0.05;\n      } else if (!gameObj.onGround) {\n        if (\n          gameObj.rightSide() > tileLeft &&\n          gameObj.bottomSide() > tileY &&\n          gameObj.oldY + gameObj.height < tileY\n        ) {\n          gameObj.velY = 0;\n\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n\n          gameObj.y = tileY - gameObj.height - 0.05;\n        }\n      }\n    }\n    if (gameObj instanceof Projectile) {\n      gameObj.setHit();\n      //set null\n      return true;\n    }\n  }\n\n  collideSlopeTwentyRightBottom(gameObj, tileLeft, tileBottom, half = 0) {\n\n    let tileY = tileBottom - (half + (gameObj.rightSide() - tileLeft) / 2);\n    if (\n      gameObj.rightSide() > tileLeft &&\n      gameObj.topSide() < tileY &&\n      gameObj.oldY > tileY\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        //set null\n        return true;\n      }\n      gameObj.y = tileY + 0.05;\n    }\n\n  }\n\n\n  collideSlopeTwentyLeft(gameObj, tileRight, tileBottom, half = 0) {\n    let tileY = tileBottom - (half + (tileRight - gameObj.leftSide()) / 2);\n    if (gameObj instanceof Player) {\n      if (gameObj.onGround) {\n        if (\n          gameObj.bottomSide() > tileBottom &&\n          gameObj.oldY + gameObj.height < tileBottom\n        ) {\n          gameObj.velY = 0;\n\n          gameObj.y = tileBottom - gameObj.height - 0.05;\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          return;\n        }\n        gameObj.y = tileY - gameObj.height - 0.05;\n      } else if (!gameObj.onGround) {\n        if (\n          gameObj.leftSide() < tileRight &&\n          gameObj.bottomSide() > tileY &&\n          gameObj.oldY + gameObj.height < tileY\n        ) {\n          gameObj.velY = 0;\n\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          gameObj.y = tileY - gameObj.height - 0.05;\n        }\n      }\n    }\n    if (gameObj instanceof Projectile) {\n      gameObj.setHit();\n      //set null\n      return true;\n    }\n  }\n\n  collideSlopeTwentyLeftBottom(gameObj, tileRight, tileBottom, half = 0) {\n    let tileY = tileBottom - (half + (tileRight - gameObj.leftSide()) / 2);\n    if (\n      gameObj.leftSide() < tileRight &&\n      gameObj.topSide() < tileY &&\n      gameObj.oldY > tileY\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        //set null\n        return true;\n      }\n      gameObj.y = tileY + 0.05;\n    }\n\n  }\n\n  ///////regular collision\n\n\n  collidePlatTop(gameObj, tileTop) {\n    if (\n      gameObj.bottomSide() > tileTop &&\n      gameObj.oldY + gameObj.height < tileTop\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        //set null\n        return true;\n      }\n      gameObj.velY = 0;\n      gameObj.y = tileTop - gameObj.height - 0.1;\n      if (gameObj instanceof Player) {\n        gameObj.onGround = true;\n        gameObj.jumpCount = 2;\n      }\n      return true;\n    } else {\n      if (gameObj instanceof Player) {\n        gameObj.onGround = false;\n      }\n    }\n    return false;\n  }\n\n  collidePlatBottom(gameObj, tileBottom) {\n    if (\n      gameObj.topSide() < tileBottom &&\n      gameObj.oldY + gameObj.height > tileBottom\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        return true;\n      }\n      gameObj.y = tileBottom + 0.1;\n      gameObj.velY = 0;\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatRight(gameObj, tileRight) {\n    if (\n      gameObj.leftSide() < tileRight &&\n      gameObj.oldX + gameObj.width > tileRight\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        return true;\n      }\n      gameObj.x = tileRight + 0.1;\n      // if (gameObj instanceof Enemy) {\n      //   gameObj.x = -gameObj.x;\n      // }\n      // gameObj.velX = 0;\n\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatLeft(gameObj, tileLeft) {\n    if (gameObj.rightSide() > tileLeft && gameObj.oldX < tileLeft) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        return true;\n      }\n      gameObj.x = tileLeft - gameObj.width - 0.1;\n      // if (!gameObj instanceof Enemy) {\n      //   gameObj.x = -gameObj.x;\n      // }\n      // gameObj.velX = 0;\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatform(gameObject, x, y, colVal, tileSize) {\n    if (!colVal || !this.collisionPlatformKeys[colVal]) return;\n    this.collisionPlatformKeys[colVal](gameObject, x, y, colVal, tileSize);\n  }\n}\n\n\n\nexport default Collision;\n","class Sound {\n    constructor(options) {\n        this.sound = document.createElement(\"audio\");\n        this.sound.src = options.src;\n        this.sound.id = options.idName;\n        this.sound.setAttribute(\"preload\", \"auto\");\n        this.sound.setAttribute(\"controls\", \"none\");\n        this.sound.setAttribute(\"muted\", \"false\");\n\n        this.sound.volume = 0.2;\n\n        this.sound.style.display = \"none\";\n\n        this.play = this.play.bind(this);\n        this.pause = this.pause.bind(this);\n        this.mute = this.mute.bind(this);\n    };\n\n    play() {\n        this.sound.play();\n    }\n\n    pause() {\n        this.sound.pause();\n    }\n\n    mute() {\n        this.sound.muted = !this.sound.muted;\n    }\n\n    static fire() {\n        return {\n            src: \"./assets/Sound/fireSound.mp3\",\n            id: \"fire\"\n        }\n    }\n    static shock() {\n        return {\n            src: \"./assets/Sound/shock.mp3\",\n            id: \"shock\"\n        }\n    }\n}\n\n\n\nexport default Sound;","import GameObject from \"../GameObject\";\nimport Collision from \"../../util/Collision\";\nimport Sound from \"../../util/Sound\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\n\nclass Projectile extends GameObject {\n  constructor(options) {\n    super(options);\n    this.proj = this.loadImage(options.image);\n    // this.impact = ;\n    this.velX = options.velX;\n    this.velY = options.velY;\n    this.oldX = this.x;\n    this.oldY = this.y;\n    this.dir = options.dir || \"right\";\n    this.damage = options.damage;\n    this.impacted = false;\n    this.impactTimeout = options.impactTimeout || 0;\n    this.impactSrc = options.impact;\n    \n    this.frameStartX = options.frameStartX;\n    this.frameStartY = options.frameStartY;\n    this.frameWidth = options.frameWidth;\n    this.frameHeight = options.frameHeight;\n    this.frameNum = options.frameNum;\n\n    this.impactWidth = options.impactWidth;\n    this.impactHeight = options.impactHeight;\n    this.impactFrameWidth = options.impactFrameWidth || this.frameStartX;\n    this.impactFrameHeight = options.impactFrameHeight || this.frameStartY;\n    this.impactStartX = options.impactStartX || 145;\n    this.impactStartY = options.impactStartY || 150;\n\n    this.hitTimeout = options.hitTimeout || 2000;\n\n\n\n    this.tileSize = 60;\n    \n    this.collider = new Collision();\n    this.isHit = false;\n\n    this.launchSound = new Sound(Sound.fire());\n    // this.impactSound = new Sound({ src: this.mapKeys[this.screen].theme });\n\n\n\n    this.loadImage = this.loadImage.bind(this);\n    this.getTopLeftPos = this.getTopLeftPos.bind(this);\n    this.getTopRightPos = this.getTopRightPos.bind(this);\n    this.getBottomLeftPos = this.getBottomLeftPos.bind(this);\n    this.getBottomRightPos = this.getBottomRightPos.bind(this);\n    this.setHit = this.setHit.bind(this);\n    this.timeOutHit = this.timeOutHit.bind(this);\n    this.updateProjectile = this.updateProjectile.bind(this);\n    this.drawProjectile = this.drawProjectile.bind(this);\n    this.drawImpact = this.drawImpact.bind(this);\n\n\n    this.timeOutHit();\n  }\n\n  hitBox() {\n    return {\n      left: this.x,\n      right: this.x + (this.width),\n      top: this.y,\n      bottom: this.y + (this.height)\n    }\n  }\n\n  loadImage(image) {\n    let proj = new Image();\n    proj.src = image;\n    return proj;\n  }\n\n  getTopLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n\n  getTopRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n\n  setHit(pos) {\n\n    // setTimeout(() => {\n      this.proj.src = this.impactSrc;\n      this.impacted = true;\n  \n      this.velX = 0;\n      this.velY = 0;\n    \n      // clearInterval(this.hitTimeout);\n      this.hitTimeout = setTimeout(() => {\n        this.isHit = true;\n  \n      }, 100)\n\n\n    // }, this.impactTimeout)\n  }\n\n  timeOutHit() {\n    this.hitTimeout = setTimeout(() => {\n      this.isHit = true;\n    }, 2000);\n  }\n\n\n  platformCheck() {\n    let colVal;\n    let top;\n    let bottom;\n    let right;\n    let left;\n    let cols = 15;\n\n    if (this.dir === \"left\") {\n      [left, top] = this.getTopLeftPos();\n      colVal = this.physicalMap[top * cols + left];\n      this.collider.collidePlatform(\n        this,\n        left * this.tileSize,\n        top * this.tileSize,\n        colVal\n      );\n        \n      [left, bottom] = this.getBottomLeftPos();\n      colVal = this.physicalMap[bottom * cols + left];\n      this.collider.collidePlatform(\n        this,\n        left * this.tileSize,\n        bottom * this.tileSize,\n        colVal\n      );\n    }\n\n    if (this.dir === \"right\") {\n      [right, top] = this.getTopRightPos();\n      colVal = this.physicalMap[top * cols + right];\n      this.collider.collidePlatform(\n        this.player,\n        right * this.tileSize,\n        top * this.tileSize,\n        colVal\n      );\n  \n      [right, bottom] = this.getBottomRightPos();\n      colVal = this.physicalMap[bottom * cols + right];\n\n      this.collider.collidePlatform(\n        this.player,\n        right * this.tileSize,\n        bottom * this.tileSize,\n        colVal\n      );\n\n    }\n\n  }\n\n  updateProjectile() {\n    this.oldX = this.x;\n    this.oldY = this.y;\n\n    this.x += this.velX;\n    this.y += this.velY;\n  }\n\n  drawProjectile(ctx, frameCount) {\n    if (this.hit) return;\n\n    if (this.impacted) {\n      this.drawImpact(ctx, frameCount);\n      return;\n    }\n\n    this.updateProjectile();\n    if (this.dir === \"up\") {\n      ctx.scale(1, -1);\n\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * 43 + (((frameCount % this.frameNum) + 1) * 21),\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, -this.y + this.height,\n        this.width, this.height\n      );\n      ctx.scale(1, -1);\n\n\n    } else if (this.dir === \"down\") {\n\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * 43 + (((frameCount % this.frameNum) + 1) * 21),\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n\n\n    } else if (this.dir === \"right\") {\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x-this.frameWidth, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  drawImpact(ctx, frameCount) {\n    if (this.dir === \"up\") {\n      ctx.drawImage(\n        this.proj,\n        this.impactStartX,\n        this.impactStartY,\n        this.impactFrameWidth,\n        this.impactFrameHeight,\n        this.x - (this.impactFrameWidth / 3), this.y - (this.impactFrameHeight / 2),\n        this.impactWidth, this.impactHeight\n      );\n\n\n    } else if (this.dir === \"down\") {\n\n      ctx.drawImage(\n        this.proj,\n        this.impactStartX,\n        this.impactStartY,\n        this.impactFrameWidth,\n        this.impactFrameHeight,\n        this.x - (this.impactFrameWidth / 2), this.y + this.height - (this.impactFrameHeight / 2),\n        this.impactWidth, this.impactHeight\n      );\n\n\n    } else if (this.dir === \"right\") {\n      ctx.drawImage(\n        this.proj,\n        this.impactStartX,\n        this.impactStartY,\n        this.impactFrameWidth,\n        this.impactFrameHeight,\n        this.x - this.width / 3, this.y - (this.impactFrameHeight / 3),\n        this.impactWidth, this.impactHeight\n      );\n    } else {\n      ctx.drawImage(\n        this.proj,\n        this.impactStartX,\n        this.impactStartY,\n        this.impactFrameWidth,\n        this.impactFrameHeight,\n        this.x - this.width / 3, this.y - (this.impactFrameHeight / 3),\n        this.impactWidth, this.impactHeight\n      );\n    }\n  }\n\n  static fireball(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 35,\n      height: 12,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n\n      frameStartX: 10,\n      frameStartY: 277,\n      frameWidth: 65,\n      frameHeight: 18,\n      frameNum: 8,\n      image: \"./assets/fireball.png\",\n      impact: \"./assets/burst.png\",\n      impactWidth: 60,\n      impactHeight: 60,\n      impactStartX: 145,\n      impactStartY: 150,\n      impactFrameWidth: 90,\n      impactFrameHeight: 90,\n      damage: 25\n    };\n  }\n\n  static fireballVert(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 12,\n      height: 35,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n      impact: \"./assets/burst.png\",\n\n      frameStartX: 10,\n      frameStartY: 400,\n      frameWidth: 22,\n      frameHeight: 35,\n      frameNum: 8,\n      image: \"./assets/fireball.png\",\n      impactFrameWidth: 90,\n      impactFrameHeight: 90,\n      impactWidth: 60,\n      impactHeight: 60,\n      impactStartX: 145,\n      impactStartY: 150,\n      damage: 25\n    };\n  }\n  \n  static blueFireball(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 70,\n      height: 36,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n\n      frameStartX: 10,\n      frameStartY: 277,\n      frameWidth: 65,\n      frameHeight: 18,\n      frameNum: 8,\n      image: \"./assets/blue_fireball.png\",\n      impact: \"./assets/blue_burst.png\",\n      impactWidth: 60,\n      impactHeight: 60,\n      impactStartX: 145,\n      impactStartY: 150,\n      impactFrameWidth: 90,\n      impactFrameHeight: 90,\n      damage: 50\n    };\n  }\n\n  static blueFireballVert(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 36,\n      height: 70,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n      impact: \"./assets/blue_burst.png\",\n\n      frameStartX: 10,\n      frameStartY: 400,\n      frameWidth: 22,\n      frameHeight: 35,\n      frameNum: 8,\n      image: \"./assets/blue_fireball.png\",\n      impactFrameWidth: 90,\n      impactFrameHeight: 90,\n      impactWidth: 60,\n      impactHeight: 60,\n      impactStartX: 145,\n      impactStartY: 150,\n      damage: 50\n    };\n  }\n\n  static helibullet(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 25,\n      height: 25,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n      frameStartX: 420,\n      frameStartY: 330,\n      frameWidth: 15,\n      frameHeight: 15,\n      frameNum: 1,\n      image: \"./assets/footEn.png\",\n      impact: \"./assets/burst.png\",\n      damage: 10\n    };\n  }\n\n  static electricBall(pos, velX = 0, velY = 1, dir = \"right\") {\n    return {\n      pos: pos,\n      width: 78.5,\n      height: 86,\n      velX: velX,\n      velY: velY,\n      dir: \"up\",\n      frameStartX: 0,\n      frameStartY: 435,\n      frameWidth: 180,\n      frameHeight: 145,\n      frameNum: 4,\n      image: \"./assets/electric_ball.png\",\n      impact: \"./assets/electric_ball.png\",\n      impactTimeout: 6000,\n      impactWidth: 180,\n      impactHeight: 145,\n      impactFrameWidth: 180,\n      impactFrameHeight: 145,\n      hitTimeout: 6000,\n      damage: 20\n    };\n  }\n}\n\nexport default Projectile;\n\n// const fireball = {\n//   name: \"fireball\"\n// }\n\n\n// };","import GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Enemy extends GameObject {\n  constructor(options) {\n    super(options);\n    this.velX = (options.velX) ? options.velX : 0;\n    this.velY = (options.velY) ? options.velY : 0;\n    this.enemy = this.loadImage(options.image);\n    this.frameNum = options.frameNum;\n    this.dir = options.dir || \"right\";\n    this.frameStartX = 68;\n    this.frameStartY = 290;\n    this.frameWidth = 116;\n    this.frameHeight = 80;\n    this.projectiles = {};\n    this.dying = false;\n    this.dead = false;\n    this.health = options.health;\n    this.damage = options.damage;\n    this.isHit = false;\n\n\n    this.setHit = this.setHit.bind(this);\n    this.setDying = this.setDying.bind(this);\n    this.getMidX = this.getMidX.bind(this);\n    this.getMidY = this.getMidY.bind(this);\n\n    this.loadImage = this.loadImage.bind(this);\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n\n    // this.callAttack();\n  }\n\n  getMidX(x = this.x) {\n    return x + (this.width/2);\n  }\n\n  getMidY(y = this.y) {\n    return y + (this.height/2);\n  }\n\n\n\n  loadImage(image) {\n    let enemy = new Image();\n    enemy.src = image;\n    return enemy;\n  }\n\n  setHit(damage = 10) {\n    if (!this.isHit) {\n      this.isHit = true;\n      this.hitCooldown = setTimeout(() => {\n        this.isHit = false;\n      }, 500);\n      this.health -= damage;\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      setTimeout(() => {\n        this.dead = true;\n      }, 1000);\n    }\n  }\n\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    if (this.dir === \"left\") {\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x-this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n    \n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + 30,\n          this.bottomSide() - 23],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - 40,\n          this.bottomSide() - 23],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n\n\n\n  ////////CPU\n  callAttack() {\n    this.attackInterval = setInterval(() => {\n      this.shootProj();\n\n    }, 200);\n  }\n\n\n\n\n\n\n  move(canvas) {\n    this.oldX = this.x;\n    this.x += this.velX;\n\n\n    if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n      this.velX *= -1;\n      this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n    } \n  }\n\n  //////\n  \n\n\n  static helicopter(pos) {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/footEn.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 200,\n      height: 125,\n      velX: 3,\n      dir: \"right\",\n      health: 100,\n      damage: 10\n    };\n  }\n\n  hitBox(obj1, obj2) {\n\n    if (obj1.y < obj2.y + obj2.height && obj1.y > obj2.y + (obj2.height / 2)) {\n      if ((obj2.dir === \"right\" && obj1.x < obj2.x + obj2.width && obj1.x + obj1.width > obj2.x + (obj2.width / 3)) ||\n        (obj2.dir === \"left\" && obj1.x < obj2.x + (obj2.width * (2 / 3)) && obj1.x + obj1.width > obj2.x)){\n        return true;\n      }\n\n    } else if ((obj1.y < (obj2.height / 2) && obj1.y > obj2.y) || obj1.y + obj1.height > obj2.y) {\n      if (obj1.x < obj2.x + obj2.width && obj1.x + obj1.width > obj2.x) {\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nexport default Enemy;\n","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Helicopter extends Enemy {\n  constructor(options) {\n    super(options);\n    this.velX = options.velX || 3;\n    this.velY = 0;\n    this.image = options.image || \"./assets/footEn.png\";\n    this.enemy = this.loadImage(this.image);\n    this.frameNum = options.frameNum || 3;\n    this.frameStartX = options.frameStartX || 68;\n    this.frameStartY = options.frameStartY || 290;\n    this.frameWidth = options.frameWidth || 116;\n    this.frameHeight = options.frameHeight || 80;\n    this.projectiles = {};\n    this.bounds = options.bounds;\n\n    this.points = 6 * options.multiplier;\n\n    this.loadImage = this.loadImage.bind(this);\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n    this.callAttack();\n  }\n\n\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    if (this.dir === \"left\") {\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x - this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n\n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + (this.width * 0.15),\n            this.bottomSide() - (this.height * 0.184)],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - (this.width * 0.2),\n            this.bottomSide() - (this.height * 0.184)],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      setTimeout(() => {\n        this.dead = true;\n      }, 300);\n    }\n  }\n\n  ////////CPU\n  callAttack() {\n    this.attackInterval = setInterval(() => {\n\n      this.shootProj();\n\n    }, 500);\n  }\n\n  move(canvas) {\n    this.oldX = this.x;\n    this.x += this.velX;\n\n    if (this.bounds) {\n      if ((this.x + (this.width / 2)) < this.bounds[0] || this.x + (this.width / 2) > this.bounds[1]) {\n        this.velX *= -1;\n        this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n      }\n    } else {\n      if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n        this.velX *= -1;\n        this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n      }\n\n    }\n\n  }\n\n  //////\n\n\n\n  static hel1(pos, bounds, dir = \"right\", velY, multiplier = 1) {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/footEn.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 200,\n      height: 125,\n      health: 100,\n      velX: (dir === \"left\") ? -3 : 3,\n      velY: velY || 0,\n      dir: dir,\n      damage: 20,\n      bounds: bounds,\n      multiplier: multiplier\n    };\n  }\n  \n  static hel2(pos, bounds, dir = \"right\", multiplier = .5) {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/footEn.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 150,\n      height: 85,\n      health: 100,\n      velX: dir === \"left\" ? -3 : 3,\n      dir: dir,\n      damage: 10,\n      bounds: bounds,\n      multiplier: multiplier\n    };\n  }\n\n}\n\nexport default Helicopter;\n","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Spider extends Enemy {\n  constructor(options) {\n    super(options);\n    this.velX = options.velX || 0;\n    this.velY = options.velY || 1;\n    this.image = options.image;\n    this.enemy = this.loadImage(this.image);\n    this.frameNum = options.frameNum || 4;\n    this.frameStartX = 0;\n    this.frameStartY = 0;\n    this.frameWidth = options.frameWidth || 92.5;\n    this.frameHeight = options.frameHeight || 102;\n    this.frameCount = 0;\n    this.bounds = options.bounds;\n    this.damage = options.damage;\n\n    this.points = 5 * options.multiplier;\n\n\n\n    this.projectiles = {};\n\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n    this.startFrameCount = this.startFrameCount.bind(this);\n\n\n  }\n\n  startFrameCount() {\n    this.enemyInterval = setInterval(() => {\n      this.frameCount++;\n    }, 1000 / 30);\n  }\n\n  drawEnemy(ctx, frameCount = this.frameCount) {\n    this.setDying();\n\n    ctx.beginPath();\n    ctx.moveTo(this.getMidX(this.pos[0]), this.pos[1]);\n    ctx.lineTo(this.getMidX(this.pos[0]), this.getMidY(this.y));\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"rgba(255, 255, 255, 0.5)\";\n    ctx.stroke();\n    ctx.closePath();\n\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n      let count = Math.floor(frameCount / 2.5) % this.frameNum;\n      // let x = (count > 0) ? 20 : this.frameStartX;\n\n\n      ctx.scale(1, -1);\n\n      ctx.drawImage(\n        this.enemy,\n        // (Math.floor(frameCount / 2) % this.frameNum) * this.frameWidth + this.frameStartX,\n        (count % this.frameNum) * this.frameWidth,\n        // (0) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, -this.y - this.height,\n        this.width, this.height\n      );\n      ctx.scale(1, -1);\n  }\n\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      setTimeout(() => {\n        this.dead = true;\n      }, 300);\n    }\n  }\n\n  ////////CPU\n  // callAttack() {\n  //   this.attackInterval = setInterval(() => {\n\n  //     this.shootProj();\n\n  //   }, 500);\n  // }\n\n  // move(canvas) {\n  //   this.oldX = this.x;\n  //   this.x += this.velX;\n\n\n  //   if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n  //     this.velX *= -1;\n  //     this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n  //   }\n  // }\n\n\n\n  move(canvas) {\n    this.oldY = this.y;\n    this.y += this.velY;\n\n    if (this.bounds) {\n      if ((this.y + (this.height)) < this.bounds[0] || this.y + (this.height) > this.bounds[1]) {\n        this.velY *= -1;\n        // this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n      }\n    } else {\n      if ((this.y + (this.height)) < 0 || this.y + (this.height) > canvas.height) {\n        this.velY *= -1;\n        // this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n      }\n\n    }\n\n  }\n  //////\n\n\n\n  static spider1(pos, bounds, multiplier = 1) {\n    return {\n      name: \"spider\",\n      image: \"./assets/spider.png\",\n      frameNum: 15,\n      pos: pos,\n      width: 93,\n      height: 102,\n      health: 110,\n      velX: 0,\n      velY: 3,\n      damage: 25,\n      bounds: bounds,\n      multiplier: multiplier\n    };\n  }\n  static spider2(pos, bounds, multiplier = .6) {\n    return {\n      name: \"spider\",\n      image: \"./assets/spider.png\",\n      frameNum: 15,\n      pos: pos,\n      width: 60.5,\n      height: 76,\n      health: 70,\n      velX: 0,\n      velY: 1.5,\n      damage: 30,\n      bounds: bounds,\n      multiplier: multiplier\n    };\n  }\n  static spider3(pos, bounds, multiplier = 0.2) {\n    return {\n      name: \"spider\",\n      image: \"./assets/spider.png\",\n      frameNum: 15,\n      pos: pos,\n      width: 46.5,\n      height: 56,\n      health: 70,\n      velX: 0,\n      velY: 2.5,\n      bounds: bounds,\n      damage: 50,\n      multiplier: multiplier\n    };\n  }\n\n}\n\nexport default Spider;\n","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Vinehead extends Enemy {\n  constructor(options) {\n    super(options);\n    this.player = options.player;\n    this.velX = options.velX || 0;\n    this.velY = 0;\n    this.image = options.image || \"./assets/vinehead.png\";\n    this.enemy = this.loadImage(this.image);\n    this.frameNum = options.frameNum || 8;\n    this.frameStartX = 0;\n    this.frameStartY = 0;\n    this.frameWidth = options.frameWidth || 57;\n    this.frameHeight = options.frameHeight || 87;\n    this.active = true;\n    this.opening = false;\n    this.projectiles = {};\n    this.playerCheckTimeout = \"\";\n    this.damage = 20;\n\n    this.points = 10 * options.multiplier;\n\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    // this.setPlayerCheckInterval = this.setPlayerCheckInterval.bind();\n    this.checkPlayerPos = this.checkPlayerPos.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n\n\n  }\n\n  checkPlayerPos(x, y, homing) {\n    if (y > this.y) {\n      this.velY = 1;\n    } else {\n      this.velY = -1;\n    }\n\n    if ((y > this.y && y < this.y + this.height) && (x > this.x || x < this.x) ) {\n      this.velX = (this.dir === \"left\") ? -5 : 5;\n    } else {\n      this.velX = (this.dir === \"left\") ? -1 : 1;\n    }\n\n    if (x > this.x && this.dir === \"left\") {\n      // clearTimeout(this.playerCheckTimeout);\n      this.playerCheckTimeout = setTimeout(() => {\n        this.velX = 1;\n        this.dir = \"right\";\n      }, 1000);\n    } else if (x < this.x && this.dir === \"right\") {\n      // clearTimeout(this.playerCheckTimeout);\n      this.playerCheckTimeout = setTimeout(() => {\n        this.velX = -1;\n        this.dir = \"left\";\n\n      }, 1000);\n      \n    } else if ((x > this.x && this.dir === \"right\") || (x < this.x && this.dir === \"left\")) {\n      clearTimeout(this.playerCheckTimeout);\n    }\n  }\n\n  setPlayerCheckInterval(player) {\n    this.playerCheckInterval = setInterval(() => {\n      this.checkPlayerPos(player);\n    }, 2);\n  }\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    if (this.dir === \"right\") {\n      let count = Math.floor(frameCount / 2.5) % this.frameNum;\n\n\n      ctx.drawImage(\n        this.enemy,\n        (Math.floor(frameCount / 1.5) % this.frameNum) * this.frameWidth,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x - this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n\n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + 30,\n          this.bottomSide() - 23],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - 40,\n          this.bottomSide() - 23],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      setTimeout(() => {\n        this.dead = true;\n      }, 300);\n    }\n  }\n\n  ////////CPU\n  // callAttack() {\n  //   this.attackInterval = setInterval(() => {\n\n  //     this.shootProj();\n\n  //   }, 500);\n  // }\n\n  move(canvas, player) {\n    this.oldY = this.y;\n    this.oldX = this.x;\n    this.x += this.velX;\n    this.y += this.velY;\n    this.checkPlayerPos(player.x, player.y);\n\n    // if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n    //   this.velX *= -1;\n    //   this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n    // }\n  }\n\n  //////\n\n\n\n  static vine1(pos, player, dir = \"right\", multiplier = .6) {\n    \n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 65,\n      height: 95,\n      health: 75,\n      velX: 1,\n      dir: dir,\n      player: player,\n      multiplier: multiplier\n    };\n  }\n  static vine2(pos, player, dir = \"right\", multiplier = 1) {\n    \n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 100,\n      height: 145,\n      health: 120,\n      velX: 1,\n      dir: dir,\n      player: player,\n      multiplier: multiplier\n    };\n  }\n  static vine3(pos, player, dir = \"right\", multiplier = .2) {\n    \n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 35,\n      height: 45,\n      health: 50,\n      velX: 1,\n      dir: dir,\n      player: player,\n      multiplier: multiplier\n    };\n  }\n  \n\n}\n\nexport default Vinehead;\n","import GameObject from \"../GameObject\";\nimport Collision from \"../../util/Collision\";\nimport Sound from \"../../util/Sound\";\nimport Projectile from \"./Projectile\";\n\nconst CONSTANTS = {\n    GRAVITY: 0.8,\n    FRICTION: 2.5,\n    MAX_VEL: 50\n};\n\n\nclass ElectricBall extends Projectile {\n    constructor(options) {\n        super(options);\n        this.proj = this.loadImage();\n        this.width = 90;\n        this.height = 72.5;\n        this.velX = 0;\n        this.velY = 1;\n        this.oldX = this.x;\n        this.oldY = this.y;\n        this.damage = options.damage;\n        this.impacted = false;\n        this.impactTimeout = 6000;\n        this.impactSrc = \"./assets/electric_ball.png\";\n\n\n        this.frameStartX = 0;\n        this.frameStartY = 435;\n        this.frameWidth = 180;\n        this.frameHeight = 145;\n        this.frameNum = 4;\n\n        this.impactWidth = 180;\n        this.impactHeight = 145;\n        this.impactStartX = 145;\n        this.impactStartY =  150;\n\n        this.hitTimeout = 6000;\n\n        this.tileSize = 60;\n\n        this.collider = new Collision();\n        this.isHit = false;\n\n        // this.impactSound = new Sound({ src: this.mapKeys[this.screen].theme });\n\n\n        this.loadImage = this.loadImage.bind(this);\n        this.getTopLeftPos = this.getTopLeftPos.bind(this);\n        this.getTopRightPos = this.getTopRightPos.bind(this);\n        this.getBottomLeftPos = this.getBottomLeftPos.bind(this);\n        this.getBottomRightPos = this.getBottomRightPos.bind(this);\n        this.setHit = this.setHit.bind(this);\n        this.timeOutHit = this.timeOutHit.bind(this);\n        this.updateProjectile = this.updateProjectile.bind(this);\n        this.drawProjectile = this.drawProjectile.bind(this);\n        this.drawImpact = this.drawImpact.bind(this);\n        this.hitBox = this.hitBox.bind(this);\n\n        this.impactSound = new Sound(Sound.shock());\n\n        this.timeOutHit();\n    }\n\n    hitBox() {\n        return {\n            left: this.x + (this.width / 5),\n            right: this.x + (this.width * .8),\n            top: this.y + (this.height / 5),\n            bottom: this.y + (this.height * .8)\n        }\n    }\n\n    loadImage() {\n        let proj = new Image();\n        proj.src = \"./assets/electric_ball.png\";\n        return proj;\n    }\n\n    getTopLeftPos() {\n        let x = Math.floor((this.leftSide() + this.width / 5) / this.tileSize);\n        let y = Math.floor((this.topSide() + this.height / 5) / this.tileSize);\n        return [x, y];\n    }\n\n    getTopRightPos() {\n        let x = Math.floor((this.rightSide() - this.width / 5) / this.tileSize);\n        let y = Math.floor((this.topSide() + this.height / 5) / this.tileSize);\n        return [x, y];\n    }\n    getBottomLeftPos() {\n        let x = Math.floor((this.leftSide() + this.width / 5) / this.tileSize);\n        let y = Math.floor((this.bottomSide() - this.height / 5) / this.tileSize);\n        return [x, y];\n    }\n    getBottomRightPos() {\n        let x = Math.floor(this.rightSide() / this.tileSize);\n        let y = Math.floor((this.bottomSide() - this.height / 5) / this.tileSize);\n        return [x, y];\n    }\n\n    setHit() {\n\n        // setTimeout(() => {\n            this.impacted = true;\n            this.impactSound.play();\n            this.proj.src = this.impactSrc;\n            this.width *= 1.7;\n            this.height *= 1.7;\n            this.velX = 0;\n            this.velY = 0;\n\n            setTimeout(() => {\n                this.impactSound.pause();\n                this.isHit = true;\n            }, 3000)\n\n\n        // }, 6000)\n    }\n\n    timeOutHit() {\n        this.hitTimeout = setTimeout(() => {\n            this.isHit = true;\n        }, 7000);\n    }\n\n\n    platformCheck() {\n        let colVal;\n        let top;\n        let bottom;\n        let right;\n        let left;\n        let cols = 15;\n\n        if (this.dir === \"left\") {\n            [left, top] = this.getTopLeftPos();\n            colVal = this.physicalMap[top * cols + left];\n            this.collider.collidePlatform(\n                this,\n                left * this.tileSize,\n                top * this.tileSize,\n                colVal\n            );\n\n            [left, bottom] = this.getBottomLeftPos();\n            colVal = this.physicalMap[bottom * cols + left];\n            this.collider.collidePlatform(\n                this,\n                left * this.tileSize,\n                bottom * this.tileSize,\n                colVal\n            );\n        }\n\n        if (this.dir === \"right\") {\n            [right, top] = this.getTopRightPos();\n            colVal = this.physicalMap[top * cols + right];\n            this.collider.collidePlatform(\n                this.player,\n                right * this.tileSize,\n                top * this.tileSize,\n                colVal\n            );\n\n            [right, bottom] = this.getBottomRightPos();\n            colVal = this.physicalMap[bottom * cols + right];\n\n            this.collider.collidePlatform(\n                this.player,\n                right * this.tileSize,\n                bottom * this.tileSize,\n                colVal\n            );\n\n        }\n\n    }\n\n    updateProjectile() {\n        this.oldX = this.x;\n        this.oldY = this.y;\n\n        this.x += this.velX;\n        this.y += this.velY;\n    }\n\n    drawProjectile(ctx, frameCount) {\n        if (this.isHit) return;\n\n        if (this.impacted) {\n            this.drawImpact(ctx, frameCount);\n            return;\n        }\n        this.updateProjectile();\n\n        ctx.drawImage(\n            this.proj,\n            (frameCount % this.frameNum) * this.frameWidth,\n            // (0) * this.frameWidth,\n            // (frameCount % this.frameNum) * this.frameWidth + (((frameCount % this.frameNum) + 1) * 21),\n            this.frameStartY,\n            this.frameWidth,\n            this.frameHeight,\n            this.x, this.y,\n            this.width, this.height\n        );\n\n\n    }\n\n    drawImpact(ctx, frameCount) {\n        ctx.drawImage(\n            this.proj,\n            (frameCount % this.frameNum) * this.frameWidth,\n            this.frameStartY,\n            180,\n            145,\n            this.x - (180 / 4), this.y - (145 / 4),\n            180, 145\n        );\n\n    }\n\n\n    static electricBall(pos, velX = 0, velY = 1, dir = \"right\") {\n        return {\n            pos: pos,\n            width: 78.5,\n            height: 86,\n            velX: velX,\n            velY: velY,\n            dir: \"up\",\n            frameStartX: 0,\n            frameStartY: 435,\n            frameWidth: 180,\n            frameHeight: 145,\n            frameNum: 4,\n            image: \"./assets/electric_ball.png\",\n            impact: \"./assets/electric_ball.png\",\n            impactTimeout: 6000,\n            impactWidth: 180,\n            impactHeight: 145,\n            impactFrameWidth: 180,\n            impactFrameHeight: 145,\n            hitTimeout: 6000,\n            damage: 20\n        };\n    }\n}\n\nexport default ElectricBall;\n\n// const fireball = {\n//   name: \"fireball\"\n// }\n\n\n// };","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport ElectricBall from \"../Projectiles/ElectricBall\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n    GRAVITY: 0.8,\n    FRICTION: 2.5,\n    MAX_VEL: 50\n};\n\nclass Jellyfish extends Enemy {\n    constructor(options) {\n        super(options);\n        this.player = options.player;\n        this.velX = options.velX || 0;\n        this.velY = 0;\n        this.image = options.image || \"./assets/jellyfish.png\";\n        this.enemy = this.loadImage(this.image);\n        this.frameNum = options.frameNum || 8;\n        this.frameStartX = 4;\n        this.frameStartY = 130;\n        this.frameWidth = options.frameWidth || 58;\n        this.frameHeight = options.frameHeight || 64;\n        this.active = true;\n        this.opening = false;\n        this.projectiles = {};\n        this.playerCheckTimeout = \"\";\n        this.damage = options.damage;\n\n        this.points = 10 * options.multiplier;\n\n        this.drawEnemy = this.drawEnemy.bind(this);\n        this.shootProj = this.shootProj.bind(this);\n        // this.setPlayerCheckInterval = this.setPlayerCheckInterval.bind();\n        this.checkPlayerPos = this.checkPlayerPos.bind(this);\n        this.setAttackInterval = this.setAttackInterval.bind(this);\n\n        this.setAttackInterval();\n    }\n\n    setAttackInterval() {\n        setTimeout(() => {\n            this.attackInterval = setInterval(() => {\n                this.shootProj();\n            }, 4000)\n        }, 2000)\n    }\n\n    checkPlayerPos(x, y, homing) {\n        if (y > this.y) {\n            this.velY = 2;\n        } else {\n            this.velY = -2;\n        }\n\n        // if ((y > this.y && y < this.y + this.height) && (x > this.x || x < this.x)) {\n        //     this.velX = (this.dir === \"left\") ? -5 : 5;\n        // } else {\n        //     this.velX = (this.dir === \"left\") ? -2 : 2;\n        // }\n\n        if (x > this.x && this.dir === \"left\") {\n            // clearTimeout(this.playerCheckTimeout);\n            this.playerCheckTimeout = setTimeout(() => {\n                this.velX = 2;\n                this.dir = \"right\";\n            }, 1000);\n        } else if (x < this.x && this.dir === \"right\") {\n            // clearTimeout(this.playerCheckTimeout);\n            this.playerCheckTimeout = setTimeout(() => {\n                this.velX = -2;\n                this.dir = \"left\";\n\n            }, 1000);\n\n        } else if ((x > this.x && this.dir === \"right\") || (x < this.x && this.dir === \"left\")) {\n            clearTimeout(this.playerCheckTimeout);\n        }\n    }\n\n    setPlayerCheckInterval(player) {\n        // debugger\n        this.playerCheckInterval = setInterval(() => {\n            this.checkPlayerPos(player);\n        }, 2000);\n    }\n\n    drawEnemy(ctx, frameCount) {\n        this.setDying();\n        if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n        let count = Math.floor(frameCount / 2.5) % this.frameNum;\n        if (this.dir === \"left\") {\n\n            ctx.drawImage(\n                this.enemy,\n                (count) * this.frameWidth + (this.frameStartX * count + (count * 2)),\n                this.frameStartY,\n                this.frameWidth,\n                this.frameHeight,\n                this.x, this.y,\n                this.width, this.height\n            );\n        } else {\n            ctx.scale(-1, 1);\n            ctx.drawImage(\n                this.enemy,\n                (count) * this.frameWidth + (this.frameStartX * count + (count * 2)),\n                this.frameStartY,\n                this.frameWidth,\n                this.frameHeight,\n                -this.x - this.width, this.y,\n                this.width, this.height\n            );\n            ctx.scale(-1, 1);\n\n        }\n    }\n\n    shootProj() {\n        if (Object.keys(this.projectiles).length === 10) return;\n\n        let key;\n        for (let i = 1; i <= 10; i++) {\n            if (!this.projectiles[i]) {\n                key = i;\n                break;\n            }\n        }\n        this.projectiles[key] = new ElectricBall({\n                pos: [this.leftSide() + (this.width / 2),\n                this.bottomSide() - (this.height / 2)]\n            });\n    }\n\n    setDying() {\n        if (this.health <= 0) {\n            this.dying = true;\n            this.damage = 0;\n            this.velX = 0;\n            this.velY = 0;\n            clearInterval(this.attackInterval);\n            setTimeout(() => {\n                this.dead = true;\n            }, 300);\n        }\n    }\n\n    ////////CPU\n\n    move(canvas, player) {\n        this.oldY = this.y;\n        this.oldX = this.x;\n        this.x += this.velX;\n        this.y += this.velY;\n        this.checkPlayerPos(player.x, player.y - (player.height * 2));\n\n        // if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n        //   this.velX *= -1;\n        //   this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n        // }\n    }\n\n    //////\n\n\n\n    static jell1(pos, player, dir = \"right\", damage = 20) {\n\n        return {\n            name: \"Jellyfish\",\n            image: \"./assets/jellyfish.png\",\n            frameNum: 8,\n            pos: pos,\n            width: 90,\n            height: 100,\n            health: 130,\n            velX: 1,\n            dir: dir,\n            player: player,\n            multiplier: 1\n\n        };\n    }\n    static jell2(pos, player, dir = \"right\", damage = 15) {\n\n        return {\n            name: \"Jellyfish\",\n            image: \"./assets/jellyfish.png\",\n            frameNum: 8,\n            pos: pos,\n            width: 60,\n            height: 66,\n            health: 90,\n            velX: 1,\n            dir: dir,\n            player: player,\n            multiplier: .5\n        };\n    }\n    static jell3(pos, player, dir = \"right\", damage = 10) {\n\n        return {\n            name: \"Jellyfish\",\n            image: \"./assets/jellyfish.png\",\n            frameNum: 8,\n            pos: pos,\n            width: 35,\n            height: 45,\n            health: 50,\n            velX: 1,\n            dir: dir,\n            player: player,\n            multiplier: .5\n\n        };\n    }\n\n\n}\n\nexport default Jellyfish;\n","\n\nclass Vine {\n    constructor(options) {\n        this.boss = options.boss;\n        this.vine = this.loadImage();\n        this.attacking = false;\n        this.charging = false;\n        this.frameNum = 7;\n        this.velX = 0;\n        this.velY = options.velY;\n        this.x = options.pos[0];\n        this.y = options.pos[1];\n        this.startX = this.x;\n\n        this.boundsY = options.boundsY;\n        this.damage = options.damage || 10;\n        this.frameCountOffset = options.frameCountOffset;\n\n        this.attack = this.attack.bind(this);\n        this.loadImage = this.loadImage.bind(this);\n        this.backUp = this.backUp.bind(this);\n        this.charge = this.charge.bind(this);\n        this.drawVines = this.drawVines.bind(this);\n        this.playerCheck = this.playerCheck.bind(this);\n        this.move = this.move.bind(this);\n\n    }\n\n    loadImage() {\n        let vine = new Image();\n        vine.src = \"./assets/vines.png\";\n        return vine;\n    }\n\n    attack(int) {\n\n        this.attacking = true;\n        this.chargeTimeout = setTimeout(() => {\n            this.charge();\n        }, int);\n    }\n\n    backUp() {\n        this.vineTimeout = setTimeout(() => {\n            this.charging = false;\n            this.velX = 10;\n        }, 300)\n    }\n\n    charge() {\n        this.charging = true;\n        this.velX = -20;\n    }\n\n\n    drawVines(ctx, frameCount) {\n        if (this.boss.dying && frameCount % 3 === 0) return;\n\n        let state = (this.charging) ? 0 :\n            (this.attacking) ? (frameCount + this.frameCountOffset) % this.frameNum :\n                ((Math.floor(frameCount / 2.5) + this.frameCountOffset) % this.frameNum)\n        let width = (this.attacking) ? 1000 : 400\n\n        // let count = Math.floor(frameCount / 2.5) + this.frameCountOffset % this.frameNum;\n        if (this.boss.dir === \"left\") {\n            ctx.drawImage(\n                this.vine,\n                2,\n                state * 95,\n                width,\n                95,\n                this.x, this.y,\n                width, 60\n            );\n        } else {\n            ctx.scale(-1, 1);\n            ctx.drawImage(\n                this.vine,\n                2,\n                state * 95,\n                width,\n                95,\n                -this.x - width, this.y,\n                width, 60\n            );\n            ctx.scale(-1, 1);\n\n        }\n    }\n\n    playerCheck(player) {\n        if (this.boss.dying) return;\n        if (player.x > this.x &&\n            (player.y + player.height > (this.y + 10)) &&\n            player.y < (this.y + 50)) {\n            player.setHit(this.damage);\n        }\n    }\n\n    move(ctx, frameCount, player) {\n        this.oldX = this.x;\n        this.x += this.velX;\n        if (!this.attacking) {\n            this.y += this.velY;\n        }\n\n        this.playerCheck(player);\n        if (this.x < -20) {\n            this.x = -20;\n            // this.attacking = false;\n            this.backUp();\n        } else if (this.x > this.startX) {\n            this.velX = 0;\n            this.attacking = false;\n            this.x = this.startX;\n\n\n            // this.attackTimeout = setTimeout(() => {\n            //   this.attack();\n            // }, 10000);\n        }\n        if (this.y < this.boundsY[0] || this.y > this.boundsY[1]) {\n            this.velY *= -1;\n        }\n        this.drawVines(ctx, frameCount);\n    }\n\n    static vines1(boss, pos) {\n        let round = Math.floor(Math.random() * 10);\n        return {\n            boss: boss,\n            pos: pos,\n            velY: (round <= 5) ? -1 : 1,\n            boundsY: [pos[1] - 75, pos[1] + 75],\n            frameCountOffset: Math.floor(Math.random() * 7)\n        }\n    }\n}\n\nexport default Vine;","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\nimport Vinehead from \"./Vinehead\";\nimport Vine from '../Projectiles/Vine';\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass BossVinehead extends Enemy {\n  constructor(options) {\n    super(options);\n    this.player = options.player;\n    this.velX = options.velX || 0;\n    this.velY = 0;\n    this.image = options.image || \"./assets/vinehead.png\";\n    this.enemy = this.loadImage(this.image);\n    this.vineNum = 5;\n\n    // this.vines = this.loadImage(\"../assets/vine.png\");\n    this.frameNum = options.frameNum || 8;\n    this.frameStartX = 0;\n    this.frameStartY = 0;\n    this.frameWidth = options.frameWidth || 57;\n    this.frameHeight = options.frameHeight || 87;\n    this.active = true;\n    this.opening = false;\n    this.projectiles = {};\n    this.playerCheckTimeout = \"\";\n    this.damage = 50;\n    this.attacking = false;\n    this.charging = false;\n    this.frameCount = 0;\n\n    this.points = 50;\n\n    this.vines = [\n      new Vine(Vine.vines1(this, [600, 60])),\n      new Vine(Vine.vines1(this, [600, 150])),\n      new Vine(Vine.vines1(this, [600, 500])),\n      new Vine(Vine.vines1(this, [700, 100])),\n      new Vine(Vine.vines1(this, [600, 300])),\n      new Vine(Vine.vines1(this, [700, 400])),\n    ]\n\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    // this.setPlayerCheckInterval = this.setPlayerCheckInterval.bind();\n    // this.checkPlayerPos = this.checkPlayerPos.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n    this.charge = this.charge.bind(this);\n    this.startFrameCount = this.startFrameCount.bind(this);\n    this.shuffleVines = this.shuffleVines.bind(this);\n    this.renderVines = this.renderVines.bind(this);\n    this.attackVines = this.attackVines.bind(this);\n    this.startAttack = this.startAttack.bind(this);\n    this.startFrameCount();\n    this.startAttack();\n  }\n\n  startFrameCount() {\n    this.bossInterval = setInterval(() => {\n      this.frameCount++;\n    }, 1000 / 30);\n    // }, 5000)\n  }\n\n  startAttack() {\n    this.attackTimeout = setTimeout(() => {\n      this.attack();\n    }, 1000);\n\n    // setTimeout(() => {\n    this.vineInterval = setInterval(() => {\n\n      this.attackVines();\n    }, 10000);\n  }\n\n  spawnEnemies() {\n    // if (this.enemies.length < 8) {\n    //   this.enemiesnew Vinehead(Vinehead.vine3([500, 100], this.player));\n    // }\n  }\n\n  attack() {\n    this.attacking = true;\n    this.chargeTimeout = setTimeout(() => {\n      this.charge();\n    }, 2500);\n  }\n\n  charge() {\n    this.charging = true;\n    this.velX = -10;\n  }\n\n\n  shuffleVines(vines) {\n    for (let i = vines.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [vines[i], vines[j]] = [vines[j], vines[i]];\n    }\n    return vines;\n  }\n\n  renderVines(ctx, player) {\n    this.vines.forEach((vine, i) => {\n      vine.move(ctx, this.frameCount, player);\n    });\n  }\n\n  attackVines() {\n\n    this.vines.forEach((vine, i) => {\n      vine.attack((1500) + i * 300);\n    })\n    setTimeout(() => {\n      this.vines = this.shuffleVines(this.vines);\n    }, 5000);\n  }\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    \n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    let y = ((this.attacking && \n      (this.frameCount % 3 === 0 || this.frameCount % 3 === 1)) ||\n      this.charging) ? 87 : this.frameStartY;\n    if (this.dir === \"right\") {\n      let count = Math.floor(frameCount / 2.5) % this.frameNum;\n      ctx.drawImage(\n        this.enemy,\n        (Math.floor(this.frameCount / 1.5) % this.frameNum) * this.frameWidth,\n        y,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (this.frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        y,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x - this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n\n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + 30,\n          this.bottomSide() - 23],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - 40,\n          this.bottomSide() - 23],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.vines.forEach((vine) => {\n        clearTimeout(vine.chargeTimeout);\n        clearTimeout(vine.vineTimeout);\n      })\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      clearInterval(this.vineInterval);\n      setTimeout(() => {\n        this.dead = true;\n        clearInterval(this.startFrameCount);\n      }, 3000);\n    }\n  }\n\n  ////////CPU\n\n  \n  backUp() {\n    this.charging = false;\n    this.velX = 2;\n  }\n\n  move(canvas, player, ctx) {\n    this.oldX = this.x;\n    this.x += this.velX;\n    if (this.x < 160) {\n      this.x = 160;\n      // this.attacking = false;\n      this.backUp();\n    } else if (this.x > 650) {\n      this.velX = 0;\n      this.attacking = false;\n      this.x = 650;\n\n      this.attackTimeout = setTimeout(() => {\n        this.attack();\n      }, 7000);\n    }\n\n    this.renderVines(ctx, player)\n\n  }\n\n  //////\n\n\n\n  static boss1(pos, player, dir = \"right\") {\n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 260,\n      height: 370,\n      health: 1200,\n      velX: 0,\n      dir: \"left\",\n      player: player\n    };\n  }\n\n}\n\n\n\n\nexport default BossVinehead;\n","import GameObject from \"../GameObject\";\nimport Sound from \"../../util/Sound\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Item extends GameObject{\n  constructor(options) {\n    super(options);\n    this.item = this.loadImage();\n    this.width = options.width;\n    this.height = options.height;\n    this.frameStartX = options.frameStartX;\n    this.frameStartY = options.frameStartY;\n    this.frameWidth = options.frameWidth;\n    this.frameHeight = options.frameHeight;\n    this.frameNum = options.frameNum;\n    this.disappear = options.disappear\n\n\n    this.collected = false;\n\n    // this.impactSound = new Sound({ src: this.mapKeys[this.screen].theme });\n\n    this.loadImage = this.loadImage.bind(this);\n    this.drawItem = this.drawItem.bind(this);\n    this.timeOutCollected = this.timeOutCollected.bind(this);\n\n    this.impactSound = new Sound(Sound.shock());\n\n    this.timeOutCollected();\n  }\n\n  timeOutCollected() {\n    if (this.disappear) {\n        this.collectedTimeOut = setTimeout(() => {\n            this.collected = true;\n        }, 10000)\n    }\n  }\n\n\n  loadImage() {\n    let item = new Image();\n    item.src = \"./assets/items.png\";\n    return item;\n  }\n\n\n  checkCollected(player) {\n    if (\n      this.x + this.width / 4 < player.x + player.width &&\n      this.x + this.width * .75 > player.x &&\n      this.y + this.height / 4 < player.y + player.height &&\n      this.y + this.height * .75 > player.y\n    ) {\n      this.collected = true;\n      switch (this.name) {\n        case \"Shield\":\n          player.setShield();\n          return;\n        default:\n          return;\n      }\n    }\n  }\n\n  drawItem(ctx, frameCount) {\n    if (this.collected) return;\n\n    ctx.drawImage(\n      this.item,\n      (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n      this.frameStartY,\n      this.frameWidth,\n      this.frameHeight,\n      this.x,\n      this.y,\n      this.width,\n      this.height\n    );\n  }\n\n  static shield(pos, disappear) {\n    return {\n      name: \"Shield\",\n      pos: pos,\n      width: 39,\n      height: 51,\n\n      frameStartX: 1,\n      frameStartY: 0,\n      frameWidth: 93,\n      frameHeight: 118,\n      frameNum: 1,\n      disappear: disappear\n    }\n  }\n\n}\n\nexport default Item;\n\n\n","import Tile from \"../Objects/Platforms/Tile\";\nimport Music from \"../util/Music\";\nimport Enemy from \"../Objects/Enemies/Enemy\";\nimport Helicopter from \"../Objects/Enemies/Helicopter\";\nimport Flower from \"../Objects/Enemies/Flower\";\nimport Spider from \"../Objects/Enemies/Spider\";\nimport Vinehead from \"../Objects/Enemies/Vinehead\";\nimport Jellyfish from \"../Objects/Enemies/Jellyfish\";\nimport BossVinehead from \"../Objects/Enemies/BossVinehead\";\nimport Item from \"../Objects/Items/Item\";\n\n\nclass Level {\n  constructor(options) {\n    this.ctx = options.ctx;\n    this.player = options.player;\n    this.mapKeys = options.mapKeys;\n    this.screen = Object.keys(this.mapKeys)[0];\n    this.renderMap = options.renderMap || this.mapKeys[this.screen].renderMap;\n    this.physicalMap = options.physicalMap || this.mapKeys[this.screen].physicalMap;\n    this.cols = 15;\n    this.rows = 10;\n    this.tileSize = options.tileSize;\n    this.tileMap = this.loadImage();\n    this.mapTileSize = this.tileMap.width / this.rows;\n    this.enemies = this.mapKeys[this.screen].enemies();\n    this.enemyCount = 1;\n    this.theme = new Music({src: this.mapKeys[this.screen].theme});\n    this.levelLayers = this.loadImages(this.mapKeys[this.screen].levelLayers);\n    this.items = this.mapKeys[this.screen].items();\n        \n////Enemy Rush////\n    this.spawnTier = this.mapKeys[this.screen].spawnTier || null;\n    this.rushLevel = 0;\n    this.spawnTierGroup = 2;\n    this.rushInterval = \"\";\n\n    this.enemyRushSpawn = this.enemyRushSpawn.bind(this);\n    this.enemyRushInterval = this.enemyRushInterval.bind(this);\n\n//////\n\n    this.getTile = this.getTile.bind(this);\n    this.getLeft = this.getLeft.bind(this);\n    this.getRight = this.getRight.bind(this);\n    this.getTop = this.getTop.bind(this);\n    this.getBottom = this.getBottom.bind(this);\n    this.drawLevel = this.drawLevel.bind(this);\n    this.loadImage = this.loadImage.bind(this);\n    this.loadLevel = this.loadLevel.bind(this);\n    this.enemiesInterval = this.enemiesInterval.bind(this);\n    this.spawnEnemies = this.spawnEnemies.bind(this);\n    this.enemyRush = this.enemyRush.bind(this);\n\n    this.loadImages = this.loadImages.bind(this);\n    this.renderBackground = this.renderBackground.bind(this);\n    this.renderMid = this.renderMid.bind(this);\n    this.renderFront = this.renderFront.bind(this);\n    // this.loadImage(this.ctx);\n\n    this.enemiesInterval();\n    // this.enemyRushInterval();\n  }\n\n//15 x 10\n\n  loadImage() {\n    let tileMap = new Image();\n    tileMap.src = \"./assets/tileGen.png\";\n    return tileMap;\n  }\n\n  loadImages(images) {\n    let background = new Image();\n    background.src = images.background;\n\n    let mid = (images.mid) ? new Image() : null;\n    (mid) ? mid.src = images.mid : \"\";\n\n    let front = (images.front) ? new Image() : null;\n    (front) ? front.src = images.front : \"\";\n\n    return {\n      background,\n      mid,\n      front\n    };\n  }\n\n  renderBackground(ctx, canvas) {\n\n      ctx.drawImage(\n        this.levelLayers.background,\n        0,\n        0,\n        900,\n        600,\n        0,\n        0,\n        canvas.width,\n        canvas.height\n      );\n  }\n\n  renderMid(ctx, canvas) {\n    if (!this.levelLayers.mid) return;\n    ctx.drawImage(\n      this.levelLayers.mid,\n      0,\n      0,\n      900,\n      600,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n  }\n\n  renderFront(ctx, canvas) {\n    if (!this.levelLayers.front) return;\n\n    ctx.drawImage(\n      this.levelLayers.front,\n      0,\n      0,\n      900,\n      600,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n  }\n\n  getTile(col, row) {\n    return this.renderMap[row * this.cols + col];\n  }\n\n  getLeft(col, row) {\n    return Math.floor(col * this.tileSize);\n  }\n  getRight(col, row) {\n    return Math.floor((col * this.tileSize) + this.tileSize);\n  }\n  getTop(col, row) {\n    return Math.floor(row * this.tileSize - this.tileSize);\n  }\n  getBottom(col, row) {\n    return Math.floor(row * this.tileSize);\n  }\n\n  enemiesInterval() {\n    if (parseInt(this.screen) < 6 || parseInt(this.screen) === 8) return;\n\n    // if (parseInt(this.screen) === 8) {\n    //   this.enemyRush();\n    //   this.spawnInterval = setInterval(() => {\n    //     this.enemyRush();\n    //   }, 12000);\n    // } else {\n      \n      this.spawnInterval = setInterval(() => {\n        if (!this.enemies[1]) {\n          clearInterval(this.spawnInterval);\n        }\n        this.spawnEnemies();\n      }, 7000);\n    // }\n  }\n\n  spawnEnemies() {\n    if (Object.keys(this.enemies).length >= 8) return;\n    this.enemyCount++;\n    let key = this.enemyCount;\n    let y = Math.random() * 600;\n    this.enemies[key] = new Vinehead(Vinehead.vine2([890, y], this.player, \"left\"));\n  }\n\n  enemyRush() {\n    if (Object.keys(this.enemies).length >= 6) return;\n    this.enemyCount++;\n    let key = this.enemyCount + (Math.floor(Math.random() * 100));\n    let y = Math.random() * 600;\n    let x = (Object.keys(this.enemies).length % 2 === 0) ? 10 : 890\n    this.enemies[key] = new Vinehead(Vinehead.vine2([x, y], this.player, \"left\"));\n  }\n\n  enemyRushSpawn(num) {\n    if (Object.keys(this.enemies).length >= num) return;\n    let key = this.enemyCount + Math.floor(Math.random() * 100);\n    let tierAmount = Object.keys(this.spawnTier[this.spawnTierGroup]).length\n    let enemy = Math.floor(Math.random() * tierAmount);\n\n    this.enemies[key] = this.spawnTier[this.spawnTierGroup][enemy]();\n\n    this.spawnTierGroup = (this.spawnTierGroup === 4) ? 1 : this.spawnTierGroup + 1;\n  }\n\n  enemyRushInterval(int = 12000, enemyCount = 6) {\n    if (this.screen !== \"8\") return;\n\n    clearInterval(this.rushInterval);\n    \n    this.rushInterval = setInterval(() => {\n      this.enemyRushSpawn(enemyCount);\n    }, int);\n  }\n\n\n\n  loadLevel(num) {\n    // if (this.screen + num === 0) return;\n    this.screen = num;\n    this.renderMap = this.mapKeys[this.screen].renderMap;\n    this.physicalMap = this.mapKeys[this.screen].physicalMap;\n    this.enemies = this.mapKeys[this.screen].enemies();\n    this.items = this.mapKeys[this.screen].items();\n    if (this.mapKeys[this.screen].levelLayers) {\n\n      this.levelLayers = this.loadImages(this.mapKeys[this.screen].levelLayers);\n    }\n    if (this.mapKeys[this.screen].theme) {\n      let muted = this.theme.music.muted;\n      this.theme.pause();\n      this.theme = new Music({ src: this.mapKeys[this.screen].theme });\n      this.theme.play();\n      this.theme.music.muted = muted;\n    }\n    this.enemiesInterval();\n\n  }\n\n  drawLevel(ctx) {\n\n    for (let c = 0; c < this.cols; c++) {\n      for (let r = 0; r < this.rows; r++) {\n        let tile = this.getTile(c, r);\n        let tileCut = (tile % 8 === 0) ? 8 : (tile % 8);\n\n        if (tile > 0) {\n\n          ctx.drawImage(\n            this.tileMap,\n            (tileCut - 1) * (this.tileMap.width/ 8),\n            (Math.floor(tile / 8) * (this.tileMap.width / 8)),\n            64,\n            64,\n            c * this.tileSize,\n            r * this.tileSize,\n            this.tileSize,\n            this.tileSize\n          );\n        }\n      }\n    }\n  }\n\n\n  static level2() {\n    return {\n      8: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0, 29, 29, 29,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  3,  1,  2,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0, 29, 29, 29,  0,  0,  0, 29, 29, 29,  0,  0,  0,\n          0,  0,  0,  3,  1,  2,  0,  0,  0,  3,  1,  2,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,        ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  2,  2,  2,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  2,  2,  2,  0,  0,  0,  2,  2,  2,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,  1,  1,  1,  1\n        ],\n        enemies: () => {\n          return {\n            1: new Spider(Spider.spider1([600, 0], [20, 359])),\n            2: new Spider(Spider.spider1([420, 0], [20, 179])),\n            3: new Spider(Spider.spider1([240, 0], [20, 359])),\n            4: new Spider(Spider.spider1([780, 0], [20, 479])),\n            5: new Spider(Spider.spider1([60, 0], [20, 479])),\n            // 5: new Helicopter(Helicopter.hel1([0, 15], [-50, 950], \"right\"))\n            // 1: new BossVinehead(BossVinehead.boss1([650, 100], this.player))\n          };\n        },\n        spawnTier: {\n          1: {\n              // 0: () => {\n              //   return new Spider(Spider.spider2([600, 0], [20, 359]));\n              // },\n              // 1: () => {\n              //   return new Spider(Spider.spider2([420, 0], [20, 179]));\n              // },\n              // 2: () => {\n              //   return new Spider(Spider.spider2([240, 0], [20, 359]));\n              // },\n              // 3: () => {\n              //   return new Spider(Spider.spider2([780, 0], [20, 479]));\n              // },\n              // 4: () => {\n              //   return new Spider(Spider.spider2([60, 0], [20, 479]));\n              // },\n              0: () => {\n                return new Spider(Spider.spider1([600, 0], [20, 359]));\n              },\n              1: () => {\n                return new Spider(Spider.spider1([420, 0], [20, 179]));\n              },\n              2: () => {\n                return new Spider(Spider.spider1([240, 0], [20, 359]));\n              }\n            },\n            \n        2: {\n              0: () => {\n                return new Helicopter(Helicopter.hel2([800, 50], [-50, 950], \"left\"));\n              },\n              1: () => {\n                return new Helicopter(Helicopter.hel2([0, 50], [-50, 950], \"right\"));\n              },\n              2: () => {\n                return new Helicopter(Helicopter.hel1([800, 15], [-50, 950], \"left\"));\n              },\n              3: () => {\n                return new Helicopter(Helicopter.hel1([0, 15], [-50, 950], \"right\"));\n              },\n           },\n        3: {\n              0: () => {\n                let y = Math.floor(Math.random() * 600);\n                let x = (y % 2 === 0) ? 1 : 839;\n                return new Jellyfish(Jellyfish.jell2([x, y], this.player));\n              },\n              1: () => {\n                let y = Math.floor(Math.random() * 600);\n                let x = (y % 2 === 0) ? 1 : 809;\n                return new Jellyfish(Jellyfish.jell1([x, y], this.player));\n              },\n           },\n        4: {\n              0: () => {\n                let y = Math.floor(Math.random() * 600);\n                let x = (y % 2 === 0) ? 1 : 890;\n                return new Vinehead(Vinehead.vine3([x, y], this.player));\n              },\n              1: () => {\n                let y = Math.floor(Math.random() * 600);\n                let x = y % 2 === 0 ? 1 : 890;\n                return new Vinehead(Vinehead.vine1([x, y], this.player));\n              },\n              2: () => {\n                let y = Math.floor(Math.random() * 600);\n                let x = y % 2 === 0 ? 1 : 890;\n                return new Vinehead(Vinehead.vine2([x, y], this.player));\n              },\n           },\n           \n        },\n        theme: \"./assets/Sound/dk3_boss_boogie.mp3\",\n        levelLayers: {\n          background: \"./assets/Level1/lv1_back.png\",\n          // mid: \"./assets/Level1/lv1_mid.png\",\n          // front: \"./assets/Level1/lv1_front.png\"\n        },\n        items: () => {\n          return {}\n        }\n      }\n    };\n  }\n  static level1() {\n    return {\n      1: {\n        renderMap: [\n        //   9,  0,  0,  0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0, 38, 39,  0,  0,  0,  0,  0,\n        //   0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 42,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //  28,  0,  0,  0,  0, 22, 23, 23, 63,  0,  0,  0,  0,  0,  0,\n        //   1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0, 29, 29, 29, 29,\n        //   9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3, 27, 27, 27,\n        //   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0,  0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          3,  3,  3, 40,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0, 23,  2,  2,  2, 24,  0,  0,  0,\n          1,  2, 34,  0,  0,  0,  0, 17,  0,  0,  0, 18,  0,  0,  0,\n          0,  0,  0, 34,  0,  0,  0, 17,  0,  0,  0, 18,  0,  0,  0,\n          1,  1,  1,  1,  2,  2,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        enemies: () => {\n          return {\n            // 1: new Jellyfish(Jellyfish.jell1([300, 300]))\n          }\n \n        },\n        theme: \"./assets/Sound/ff9_stirring_forest.mp3\",\n        levelLayers: {\n          background: \"./assets/Level1/lv1_back.png\",\n          mid: \"./assets/Level1/lv1_mid.png\",\n          front:  \"./assets/Level1/lv1_front.png\"\n        },\n        items: () => {\n          return {\n            // 1: new Item(Item.shield([400, 200], false))\n          };\n        }\n        \n      },\n      2: {\n        renderMap: [\n          // 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          // 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          // 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          // 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          // 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          // 0,  0,  0,  0,  0,  0, 29, 29, 29,  0,  0,  0,  0,  0,  0,\n          // 0,  0,  0,  0, 53, 54,  1,  1,  2,  0,  0,  0,  0,  0,  0,\n          // 0,  0,  0, 57, 58,  9, 16, 16, 16,  0,  0, 29, 29, 29, 29,\n          // 0, 53, 54,  5,  5,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n          // 1,  5,  5,  5, 11,  0,  0,  0,  0,  0,  0,  5,  5,  5,  5\n        ],\n        physicalMap: [\n        //0       2       4       6       8      10      12\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 17,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 17,  0,\n          0,  0,  0,  0,  0,  0,  0, 12, 39,  0,  0,  0,  0, 17,  0,\n          0,  0,  0,  0,  0,  0,  0,  4, 18,  0,  0,  0,  0, 17,  0,\n          0,  0, 19, 20,  0,  0,  0,  4, 18, 30,  0,  0,  0, 17,  0,\n          0,  0,  4,  5,  0,  0, 37,  4, 40,  0,  0,  0,  0, 31, 16,\n          0,  0,  9,  8,  0,  0,  4,  5,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  4,  5,  0,  0,  0, 31, 15, 15, 15,\n          0,  0,  0,  0,  0, 35,  0,  5,  0,  0,  0,  0,  4,  0,  0,\n          1,  1,  1,  1,  2,  0,  0,  5,  0,  0,  0,  0,  4,  0,  0\n        ],\n        levelLayers: {\n          background: \"./assets/Level1/lvl2_back.png\",\n          mid: \"./assets/Level1/lvl2_mid.png\",\n          front: \"./assets/Level1/lvl2_front.png\"\n        },\n\n        enemies: () => {\n          return {\n            1: new Helicopter(Helicopter.hel2([10, 10], [0, 700])),\n            // 2: new Helicopter(Helicopter.hel2([570, 0], [0, 700], \"left\")),\n            3: new Helicopter(Helicopter.hel2([10, 140], [0, 335], \"left\")),\n            4: new Spider(Spider.spider1([700, 0], [0, 380])),\n            5: new Spider(Spider.spider2([600, 0], [20, 440])),\n            6: new Spider(Spider.spider3([150, 0], [20, 250]))\n\n            // 3: new Flower(Flower.flow2([120, 200])),\n            // 4: new Flower(Flower.flow1([400, 320])),\n            // 5: new Flower(Flower.flow1([240, 500])),\n          }\n        },\n        items: () => {\n          return {}\n        }\n      },\n      3: {\n        renderMap: [\n        //0       2       4       6       8      10      12\n          0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         16, 32,  0,  0,  0, 16,  0,  0,  0, 16,  0,  3,  1,  1,  1,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4, 50,  5,  5,\n         29, 29, 29, 30,  0,  0,  0,  0,  0,  0,  0,  4,  5,  5,  5,\n          0,  0, 40,  0,  0,  0,  0,  0,  0,  0,  0, 55,  5, 40,  5,\n          0,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  5,  5,  5\n        ],\n\n        physicalMap: [\n        //0       2       4       6       8      10      12\n          0, 18, 58,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18, 58,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18, 58,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18, 58,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 37, 15,\n          0, 18,  0,  0,  0,  0, 47, 34,  0,  0,  0, 37, 39,  0,  0,\n         16,  8,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  1,  1,  1,\n          0,  0,  0,  0,  0,  0, 33, 33, 33,  0,  0, 44, 16, 42,  3,\n         15, 36,  0,  0,  0,  0, 16, 16, 45,  0,  0,  0,  0,  0,  0,\n          5,  0,  2, 24,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          5,  5,  0,  0, 15, 15, 15, 15, 15, 20,  0, 33, 33, 33, 33\n        ],\n        enemies: () => {\n          return {\n            // 1: new Helicopter(Helicopter.hel1([100, 25])),\n            // 3: new Flower(Flower.flow2([250, 140])),\n\n            3: new Jellyfish(Jellyfish.jell2([500, 550])),\n            4: new Jellyfish(Jellyfish.jell1([700, 50])),\n            5: new Vinehead(Vinehead.vine1([500, 100], this.player)),\n            6: new Vinehead(Vinehead.vine3([800, 20], this.player)),\n\n            // 4: new Flower(Flower.flow2([450, 140])),\n          }\n        },\n        levelLayers: {\n          background: \"./assets/Level1/lvl3_back.png\",\n          mid: \"./assets/Level1/lvl3_mid.png\",\n          front: \"./assets/Level1/lvl3_front.png\"\n        },\n        items: () => {\n          return {}\n        }\n      },\n      4: {\n        renderMap: [\n        ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         36,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  2,  7,  0,  0,  0, 37, 39,  2, 58,  2,  2,  2, 38, 36,\n          0,  2,  5, 15, 15, 39,  0,  0,  0, 58,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  5,  0,  0,  0, 58,  0,  0,  0,  0,  0,\n          3,  3,  3,  3,  0, 40,  0,  0,  0, 58,  0,  0,  0,  0,  0,\n          0,  0,  0,  5,  5,  0,  0,  0,  0, 58,  0,  0,  0,  0,  0,\n          0,  0,  0,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         33, 33, 33, 33, 33, 33,  6,  2,  2,  2,  2,  2, 34,  0,  0\n        ],\n        enemies: () => {\n          return {\n            1: new Helicopter(Helicopter.hel2([500, 0])),\n            4: new Vinehead(Vinehead.vine3([500, 100], this.player)),\n            5: new Vinehead(Vinehead.vine3([300, 450], this.player)),\n            6: new Vinehead(Vinehead.vine3([850, 500], this.player)),\n            7: new Vinehead(Vinehead.vine1([800, -20], this.player)),\n          }\n          // 4: new Flower(Flower.flow2([530, 190])),\n\n        },\n        levelLayers: {\n          background: \"./assets/Level1/lvl4_back.png\",\n          mid: \"./assets/Level1/lvl4_mid.png\",\n          front: \"./assets/Level1/lvl4_front.png\"\n        },\n        items: () => {\n          return {\n            1: new Item(Item.shield([80, 460], false))\n          }\n        }\n      },\n      // 44: {\n      //   renderMap: [\n      //     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n      //     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n      //     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,\n      //     0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  0,  0,  0,  3,  5,\n      //     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4, 28,\n      //     1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n      //     9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 16, 16, 16, 16,\n      //     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n      //     0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  0,  0,  0,  0,  0,\n      //     0,  0,  0,  0,  0,  5,  5,  5,  5,  5,  0,  1,  1,  1,  1\n      //   ],\n      //   physicalMap: [\n      //     0,  0, 38, 39,  0,  0,  0, 42, 41, 39,  0,  0,  0,  0,  0,\n      //     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n      //    38, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,\n      //     0,  0,  0,  0,  0,  3,  1,  1,  1,  8,  0,  0,  0,  2,  0,\n      //     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n      //     1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n      //     9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  7,  7,  7,  7,\n      //     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n      //     0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  0,  0,  0,  0,  0,\n      //     0,  0,  0,  0,  0,  9,  0,  0,  0, 10,  0,  1,  1,  1,  1\n      //   ],\n        enemies: () => {\n          return {\n            1: new Helicopter(Helicopter.hel2([500, 0])),\n            // // 3: new Flower(Flower.flow2([290, 190])),\n            4: new Vinehead(Vinehead.vine3([500, 100], this.player)),\n            5: new Vinehead(Vinehead.vine3([300, 450], this.player)),\n            6: new Vinehead(Vinehead.vine3([850, 500], this.player)),\n            7: new Vinehead(Vinehead.vine1([800, -20], this.player)),\n      //     }\n      //     // 4: new Flower(Flower.flow2([530, 190])),\n\n        }\n      },\n      5: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         29, 29, 29, 29, 29, 29, 29,  0, 29, 29, 29, 29, 29, 29, 29,\n          1,  1,  1,  1,  1,  1,  2,  0,  3,  1,  1,  1,  1,  1,  1,\n          5,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 13,  5,  5,\n         28,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4, 28,\n          1,  1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n         16, 16, 16,  0,  0,  0,  0,  0,  0,  0,  0,  5,  5,  5,  5,\n          0,  0,  0,  0,  0, 29, 29, 29, 29, 29,  3,  1,  1,  1,  1,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  5,  5,  5,  5,  5,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  0,  1,  1,  1,  1,  1,  1,  1,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,\n          7,  7,  7,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,  1,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  1,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        enemies: () => {\n          return {\n            1: new Vinehead(Vinehead.vine3([10, 530], this.player)),\n            2: new Vinehead(Vinehead.vine3([830, 0], this.player)),\n            3: new Vinehead(Vinehead.vine2([600, 600], this.player)),\n            4: new Vinehead(Vinehead.vine1([500, 100], this.player)),\n            5: new Vinehead(Vinehead.vine2([200, 450], this.player)),\n            6: new Vinehead(Vinehead.vine2([850, 500], this.player)),\n            7: new Vinehead(Vinehead.vine1([800, -20], this.player)),\n          }\n        },\n        levelLayers: {\n          background: \"./assets/Level1/lvl3_back.png\",\n          // mid: \"./assets/Level1/lvl3_mid.png\",\n          // front: \"./assets/Level1/lvl3_front.png\"\n        },\n        items: () => {\n          return {}\n        }\n      },\n      6: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0, 13,  5,  5,  5, 49,  5,  5,  5,\n          0,  0,  0,  0,  0,  0,  0,  0, 16, 16, 16, 16, 16, 16, 16,\n          2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         28,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          3,  1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         28,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          5, 29, 29, 29,  0, 29, 29,  0, 47, 47, 47, 47, 47, 47, 47,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        enemies: () => {\n          return {\n            1: new BossVinehead(BossVinehead.boss1([650, 100], this.player))\n          }\n        },\n        theme: \"./assets/Sound/dk3_boss_boogie.mp3\",\n        levelLayers: {\n          background: \"./assets/Level1/lv1_back.png\",\n          // mid: \"./assets/Level1/lv1_mid.png\",\n          // front: \"./assets/Level1/lv1_front.png\"\n        },\n        items: () => {\n          return {}\n        }\n      },\n\n\n      8: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0, 29, 29, 29,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  3,  1,  2,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0, 29, 29, 29,  0,  0,  0, 29, 29, 29,  0,  0,  0,\n          0,  0,  0,  3,  1,  2,  0,  0,  0,  3,  1,  2,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,        ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  2,  2,  2,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  2,  2,  2,  0,  0,  0,  2,  2,  2,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,  1,  1,  1,  1\n        ],\n        enemies: () => {\n          return {\n            1: new Spider(Spider.spider2([600, 0], [20, 440])),\n\n            // 1: new BossVinehead(BossVinehead.boss1([650, 100], this.player))\n          }\n        },\n        theme: \"./assets/Sound/dk3_boss_boogie.mp3\",\n        levelLayers: {\n          background: \"./assets/Level1/lv1_back.png\",\n          // mid: \"./assets/Level1/lv1_mid.png\",\n          // front: \"./assets/Level1/lv1_front.png\"\n        }\n      }\n    };\n  }\n  // static level2() {\n  //   return {\n  //     1: {\n  //       renderMap: [\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0, 38, 39,  0,  0,  0,  0,  0,\n  //         0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6\n  //       ],\n  //       physicalMap: [\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  1,  1,\n  //         1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n  //       ],\n  //       enemies: {\n  //         1: new Helicopter(Helicopter.hel1([100, 100])),\n  //         2: new Helicopter(Helicopter.hel1([570, 50], \"left\")),\n  //         3: new Flower(Flower.flow1([600, 500])),\n  //         4: new Flower(Flower.flow1([400, 320])),\n  //         5: new Flower(Flower.flow1([240, 500])),\n  //       }\n  //     }\n  //   };\n  // }\n\n}\n\nexport default Level;\n\n\n// [\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0, 38, 39,  0,  0,  0,  0,  0,\n//           0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6\n//         ],","class GameHUD {\n  constructor(options) {\n    // this.health = options.health;\n    // this.name = name;\n    this.fire = this.loadFire();\n    this.blueFire = this.loadBlueFire();\n    \n\n\n    this.drawHealth = this.drawHealth.bind(this);\n    this.drawDamageMeter = this.drawDamageMeter.bind(this);\n    this.loadFire = this.loadFire.bind(this);\n    this.loadBlueFire = this.loadBlueFire.bind(this);\n    this.drawHUD = this.drawHUD.bind(this);\n    this.drawAmmo = this.drawAmmo.bind(this);\n    this.drawPoints = this.drawPoints.bind(this);\n  }\n\n  loadFire() {\n    let img = new Image();\n    img.src = \"./assets/fireball.png\";\n    return img;\n  }\n  loadBlueFire() {\n    let img = new Image();\n    img.src = \"./assets/blue_fireball.png\";\n    return img;\n  }\n\n\n\n  drawHUD(canvas, ctx, player, frameCount, points) {\n    ctx.beginPath();\n    ctx.rect(0, (canvas.height - 55), canvas.width, 55);\n    ctx.fillStyle = \"black\";\n    ctx.fill();\n    ctx.closePath();\n\n    this.drawHealth(canvas, ctx, player);\n    this.drawDamageMeter(canvas, ctx, player);\n    this.drawPoints(ctx, canvas, points)\n    this.drawAmmo(canvas, ctx, player, frameCount);\n  }\n\n\n  drawHealth(canvas, ctx, player) {\n\n    let healthMeter = ((canvas.width / 2) * (player.health / 200));\n\n    ctx.beginPath();\n    ctx.rect(150, (canvas.height - 40), (canvas.width / 2), 20);\n    ctx.fillStyle = \"rgba(255, 255, 255, .1)\";\n    ctx.fill();\n    ctx.closePath();\n\n    ctx.beginPath();\n    ctx.rect(150, (canvas.height - 40), (healthMeter), 20);\n    ctx.fillStyle = \"red\";\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  drawDamageMeter(canvas, ctx, player) {\n\n    let damageMeter = ((canvas.width / 2) * (player.damageMeter / 100));\n\n    ctx.beginPath();\n    ctx.rect(150, (canvas.height - 15), (canvas.width / 2), 7);\n    ctx.fillStyle = \"rgba(255, 255, 255, .1)\";\n    ctx.fill();\n    ctx.closePath();\n\n    ctx.beginPath();\n    ctx.rect(150, (canvas.height - 15), (damageMeter), 7);\n    ctx.fillStyle = \"rgb(0, 157, 255)\";\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  drawAmmo(canvas, ctx, player, frameCount) {\n    if (!player.damageBoost) {\n\n      let fromRight = canvas.width - 50;\n      ctx.beginPath();\n      ctx.arc(fromRight, canvas.height - 24, 5, 0, 2 * Math.PI, false);\n      ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n      ctx.fill();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n      ctx.stroke();\n      ctx.closePath();\n  \n      ctx.beginPath();\n      ctx.arc(canvas.width - 100, canvas.height - 24, 5, 0, 2 * Math.PI, false);\n      ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n      ctx.fill();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n      ctx.stroke();\n      ctx.closePath();\n  \n      ctx.beginPath();\n      ctx.arc(canvas.width - 150, canvas.height - 24, 5, 0, 2 * Math.PI, false);\n      ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n      ctx.fill();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n      ctx.stroke();\n      ctx.closePath();\n  \n  \n      switch (Object.keys(player.fireballs).length) {\n        case 0:\n          ctx.drawImage(\n            this.fire,\n            (frameCount % 8) * 43 + ((frameCount % 8) + 1) * 21,\n            400,\n            22,\n            35,\n            canvas.width - 170,\n            canvas.height - 50,\n            40,\n            40\n          );\n        case 1:\n          ctx.drawImage(\n            this.fire,\n            (frameCount % 8) * 43 + ((frameCount % 8) + 1) * 21,\n            400,\n            22,\n            35,\n            canvas.width - 120,\n            canvas.height - 50,\n            40,\n            40\n          );\n        case 2:\n          ctx.drawImage(\n            this.fire,\n            (frameCount % 8) * 43 + ((frameCount % 8) + 1) * 21,\n            400,\n            22,\n            35,\n            canvas.width - 70,\n            canvas.height - 50,\n            40,\n            40\n          );\n        default:\n          break;\n      }\n    } else {\n      ctx.drawImage(\n        this.blueFire,\n        (frameCount % 8) * 43 + ((frameCount % 8) + 1) * 21,\n        400,\n        22,\n        35,\n        canvas.width - 150,\n        canvas.height - 60,\n        70,\n        60\n      );\n    }\n\n\n  }\n\n  drawPoints(ctx, canvas, points) {\n        ctx.font = \"20px Arial\";\n        // ctx.fillStyle = \"rgb(46, 2, 2)\";\n        ctx.fillStyle = \"white\";\n        ctx.textAlign = \"left\";\n        ctx.fillText(\n          `Score: ${points}`,\n          20,\n          canvas.height - 25\n        );\n\n  }\n\n}\n\nexport default GameHUD;","import Player from \"./Player\";\nimport Level from \"./Levels/Level\";\nimport Tile from \"./Objects/Platforms/Tile\";\nimport Collision from \"./util/Collision\";\nimport Controller from \"./util/Controller\";\nimport Enemy from \"./Objects/Enemies/Enemy\";\nimport Helicopter from \"./Objects/Enemies/Helicopter\";\nimport Flower from \"./Objects/Enemies/Flower\";\nimport Item from \"./Objects/Items/Item\";\nimport GameHUD from \"./GameHUD\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\n\nclass Game {\n  constructor(canvas, ctx, lvl = 1) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.levelCall = {\n      1: Level.level1(),\n      2: Level.level2()\n    }\n    this.player = new Player(this.ctx, this.canvas);\n    this.controller = new Controller(this.player);\n    this.tileSize = canvas.width / 15;\n    this.level = new Level({ \n      ctx: ctx,\n      mapKeys: this.levelCall[lvl],\n      player: this.player,\n      tileSize: this.tileSize\n    });\n    // this.physicalMap = this.level.physicalMap;\n    this.collider = new Collision(this.tileSize);\n    this.HUD = new GameHUD();\n    this.frameCount = 0;\n    this.enemies = this.level.enemies;\n    this.gameOver = false;\n    this.embers = new Image();\n    this.embers.src = \"./assets/embers.jpg\";\n    // this.getPlayerTilePos = this.getPlayerTilePos.bind(this);\n\n    this.highScore = 0;\n\n    this.getTopLeftPos = this.getTopLeftPos.bind(this);\n    this.getTopRightPos = this.getTopRightPos.bind(this);\n    this.getBottomLeftPos = this.getBottomLeftPos.bind(this);\n    this.getBottomRightPos = this.getBottomRightPos.bind(this);\n    this.playerPlatformCheck = this.playerPlatformCheck.bind(this);\n    this.playerUpdate = this.playerUpdate.bind(this);\n    this.projectilePlatformCheck = this.projectilePlatformCheck.bind(this);\n    this.renderItems = this.renderItems.bind(this);\n    this.renderFireballs = this.renderFireballs.bind(this);\n    this.renderEnemies = this.renderEnemies.bind(this);\n    this.renderEnemyProjectiles = this.renderEnemyProjectiles.bind(this);\n    this.startFrameCount = this.startFrameCount.bind(this);\n    this.runGame = this.runGame.bind(this);\n    this.isGameOver = this.isGameOver.bind(this);\n    this.win = this.win.bind(this);\n    this.enemiesCleared = this.enemiesCleared.bind(this);\n    this.loadLevel = this.loadLevel.bind(this);\n    this.resizeGame = this.resizeGame.bind(this);\n    this.newLevel = this.newLevel.bind(this);\n\n\n    this.enemyCount = Object.keys(this.enemies).length;\n    this.cleared = false;\n\n    this.survivalMode = this.survivalMode.bind(this);\n\n    this.startFrameCount();\n  }\n\n  startFrameCount() {\n    this.frameInterval = setInterval(() => {\n      this.frameCount++;\n    }, (1000 / 30));\n  }\n\n\n  newLevel() {\n    this.level = new Level({\n      ctx: this.ctx,\n      mapKeys: Level.level2(),\n      player: this.player,\n      tileSize: this.tileSize\n    });\n    this.renderMap = this.level.mapKeys[this.level.screen].renderMap;\n    this.physicalMap = this.level.mapKeys[this.level.screen].physicalMap;\n    this.enemies = this.level.enemies();\n    this.level.enemiesInterval();\n    // this.level.loadLevel(8);\n  }\n\n  resizeGame(canvas) {\n    this.tileSize = canvas.width / 15;\n    this.level.tileSize = this.tileSize;\n  }\n\n  getTopLeftPos() {\n    let x = Math.floor(this.player.leftSide() / this.tileSize);\n    let y = Math.floor(this.player.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getTopRightPos() {\n    let x = Math.floor(this.player.rightSide() / this.tileSize);\n    let y = Math.floor(this.player.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomLeftPos() {\n    let x = Math.floor(this.player.leftSide() / this.tileSize);\n    let y = Math.floor(this.player.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomRightPos() {\n    let x = Math.floor(this.player.rightSide() / this.tileSize);\n    let y = Math.floor(this.player.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n\n\n  enemiesCleared() {\n    if (parseInt(this.level.screen) === 8) return;\n    if (Object.keys(this.enemies).length === 0) {\n      this.cleared = true;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  playerPlatformCheck() {\n    let colVal;\n    let top;\n    let bottom;\n    let right;\n    let left;\n    let cols = 15;\n    let rows = 10;\n    let floorCount = 0;\n    let climbCount = 0;\n\n    let physMap = this.level.physicalMap;\n\n    [left, top] = this.getTopLeftPos();\n    colVal = physMap[top * cols + left];\n    colVal === 58 ? climbCount++ : \"\";\n    this.collider.collidePlatform(\n      this.player,\n      left * this.tileSize,\n      top * this.tileSize,\n      colVal, \n      this.tileSize    \n    );\n\n    [right, top] = this.getTopRightPos();\n    colVal = physMap[top * cols + right];\n    colVal === 58 ? climbCount++ : \"\";\n\n    this.collider.collidePlatform(\n      this.player,\n      right * this.tileSize,\n      top * this.tileSize,\n      colVal,\n      this.tileSize\n    );\n\n    [left, bottom] = this.getBottomLeftPos();\n    colVal = physMap[bottom * cols + left];\n    (colVal === 0) ? floorCount++ : \"\";\n    colVal === 58 ? climbCount++ : \"\";\n    this.collider.collidePlatform(\n      this.player,\n      left * this.tileSize,\n      bottom * this.tileSize,\n      colVal,\n      this.tileSize\n    );\n\n\n    [right, bottom] = this.getBottomRightPos();\n    colVal = physMap[bottom * cols + right];\n    (colVal === 0) ? floorCount++ : \"\";\n    colVal === 58 ? climbCount++ : \"\";\n    if (this.player.canClimb && climbCount === 0) this.player.canClimb = false;\n    if (floorCount === 2) {\n      this.player.onGround = false;\n      // if (this.player.jumpCount === 2) this.player.jumpCount -=;\n    }\n    this.collider.collidePlatform(\n      this.player,\n      right * this.tileSize,\n      bottom * this.tileSize,\n      colVal,\n      this.tileSize\n    );\n  }\n\n\n  projectilePlatformCheck(projectile) {\n    let colVal;\n    let top;\n    let bottom;\n    let right;\n    let left;\n    let cols = 15;\n    let physMap = this.level.physicalMap;\n\n    if (projectile.dir === \"left\") {\n      [left, top] = projectile.getTopLeftPos();\n      colVal = physMap[top * cols + left];\n      this.collider.collidePlatform(\n        projectile,\n        left * this.tileSize,\n        top * this.tileSize,\n        colVal,\n        this.tileSize\n      );\n\n      [left, bottom] = projectile.getBottomLeftPos();\n      colVal = physMap[bottom * cols + left];\n      this.collider.collidePlatform(\n        projectile,\n        left * this.tileSize,\n        bottom * this.tileSize,\n        colVal,\n        this.tileSize\n      );\n    }\n\n    if (projectile.dir === \"right\") {\n      [right, top] = projectile.getTopRightPos();\n      colVal = physMap[top * cols + right];\n      this.collider.collidePlatform(\n        projectile,\n        right * this.tileSize,\n        top * this.tileSize,\n        colVal,\n        this.tileSize\n      );\n\n      [right, bottom] = projectile.getBottomRightPos();\n      colVal = physMap[bottom * cols + right];\n\n      this.collider.collidePlatform(\n        projectile,\n        right * this.tileSize,\n        bottom * this.tileSize,\n        colVal,\n        this.tileSize\n      );\n\n    }\n\n  }\n  \n\n  playerUpdate() {\n    this.player.setRunning();\n    this.player.isIdle();\n    this.player.setOldPos();\n\n    if (!this.player.idle) {\n      // if (this.player.velX > 7 || this.player.velX < -7) {\n      //   if (this.player.keydown)\n      //   this.player.velX += (this.player.velX > 0) ? -1 : 1;\n      // } else {\n      //   this.player.dash = false;\n      // }\n\n      // if (this.player.runningKeyDown && this.player.dashing) {\n      //   if (this.player.velX > 7 || this.player.velX < -7) {\n      //     this.player.velX += (this.player.velX > 0) ? -1 : 1;\n      //   }\n\n      // } else if (this.player.onGround && this.player.dashing && !this.player.runningKeyDown) {\n      //   this.player.velX += (this.player.velX > 0) ? -1 : (this.player.velX < 0) ? 1 : 0;\n      // }\n      // if (this.player.direction === \"right\") {\n      //   if ((this.player.onGround && !this.player.keydown && this.player.velX > 0)) {\n      //     this.player.velX -= 1;\n      //     // this.player.velX < 1 ? (this.player.velX = 0) : (this.player.velX /= CONSTANTS.FRICTION);\n      //   }\n      // } else if (this.player.direction === \"left\") {\n      //   if ((this.player.onGround && !this.player.keydown && this.player.velX > 0)) {\n      //     this.player.velX += 1;\n      //   }\n      // }\n      this.player.x += this.player.velX;\n      // this.player.isDashing();\n    }\n\n    if (this.player.climbing) {\n        this.player.isClimbing();\n    } else {\n        this.player.inAir();\n\n    }\n\n    this.collider.collidePlayer(this.player, this.canvas, this.cleared);\n    this.playerPlatformCheck();\n  }\n\n  renderEnemies() {\n    // if (this.level.screen === 6 || this.level.screen === 8) {\n      this.enemyCount = Object.keys(this.level.enemies).length;\n    // } \n    // else if (this.level.screen = 8) {\n    //   this.enemyCount = 100;\n    // }\n\n    if (!this.cleared) {\n      for (let key in this.enemies) {\n        // if (this.enemies[key].dying && !this.enemies[key].dead) continue;\n        this.projectilePlatformCheck(this.enemies[key]);\n\n        if (!this.enemies[key].dead) {\n          this.enemies[key].drawEnemy(this.ctx, this.frameCount);\n          this.collider.collideEnemy(this.player, this.enemies[key]);\n          this.enemies[key].move(this.canvas, this.player, this.ctx);\n\n        } else {\n          this.player.damageMeter += (this.enemies[key].points / 6);\n          this.highScore += this.enemies[key].points;\n\n          delete this.enemies[key];\n          this.enemyCount -= 1;\n        }\n      }\n      this.enemiesCleared();\n    }\n  }\n\n  renderItems() {\n      if (Object.keys(this.level.items).length === 0) return;\n\n      for (let key in this.level.items) {\n        this.level.items[key].checkCollected(this.player);\n        if (!this.level.items[key].collected) {\n          this.level.items[key].drawItem(this.ctx, this.frameCount);\n        } else {\n          delete this.level.items[key];\n        }\n      }\n  }\n\n  renderFireballs() {\n    if (Object.keys(this.player.fireballs).length !== 0) {\n      for (let key in this.player.fireballs) {\n        let fireball = this.player.fireballs[key];\n        \n        if (this.enemyCount !== 0) {\n          for (let key in this.enemies) {\n            this.collider.collideEnemy(fireball, this.enemies[key]);\n          }\n        }\n        \n        this.projectilePlatformCheck(fireball);\n\n        (!fireball.isHit) ? \n          fireball.drawProjectile(this.ctx, this.frameCount) :\n          delete this.player.fireballs[key];\n      }\n    }\n  }\n\n  renderEnemyProjectiles() {\n    ///Check if any enemies\n    Object.values(this.enemies).forEach((enemy) => {\n      if (Object.keys(enemy.projectiles).length !== 0) {\n        for (let key in enemy.projectiles) {\n          this.collider.collideProjectile(this.player, enemy.projectiles[key]);\n\n          this.projectilePlatformCheck(enemy.projectiles[key]);\n\n          (!enemy.projectiles[key].isHit) ?\n            enemy.projectiles[key].drawProjectile(this.ctx, this.frameCount) :\n            delete enemy.projectiles[key];\n        }\n      }\n    });\n  }\n\n  loadLevel() {\n\n    if (((this.player.x + (this.player.width / 2)) >= this.canvas.width)) {\n      this.level.loadLevel(parseInt(this.level.screen) + 1);\n      this.cleared = false;\n      this.enemies = this.level.enemies;\n      this.enemyCount = Object.keys(this.enemies);\n      this.player.x = 0;\n    } else if ((this.player.x + (this.player.width / 2)) <= 0) {\n      this.level.loadLevel(-1);\n      this.player.x = this.canvas.width - this.player.width;\n    }\n  }\n\n  survivalMode() {\n    if (this.level.screen !== \"8\") return;\n\n    if (this.level.rushLevel === 0) {\n      this.level.rushLevel++;\n      this.level.enemyRushInterval(7000, 6);\n    } else if (this.highScore > 30 && this.level.rushLevel === 1) {\n      this.level.rushLevel++;\n      this.level.enemyRushInterval(6000, 7);\n    } else if (this.highScore > 60 && this.level.rushLevel === 2) {\n      this.level.rushLevel++;\n      this.level.enemyRushInterval(5000, 7);\n    } else if (this.highScore > 100 && this.level.rushLevel === 3) {\n      this.level.rushLevel++;\n      this.level.enemyRushInterval(4000, 8);\n    } else if (this.highScore > 150 && this.level.rushLevel === 4) {\n      this.level.rushLevel++;\n      this.level.enemyRushInterval(3000, 8);\n    } else if (this.highScore > 250 && this.level.rushLevel === 4) {\n      this.level.rushLevel++;\n      this.level.enemyRushInterval(2000, 9);\n\n    }\n  }\n\n  isGameOver() {\n    this.win();\n    this.gameOver = (this.player.dead || this.won) ? true : false;\n  }\n\n  //refactor\n  win() {\n    this.won = (this.level.screen === 6 && Object.keys(this.enemies).length === 0) ? true : false;\n  }\n  \n\n  runGame() {\n    this.isGameOver();\n\n    if (!this.gameOver) {\n      this.loadLevel();\n      this.level.renderBackground(this.ctx, this.canvas);\n      if (this.level.screen > 3) this.level.drawLevel(this.ctx);\n      this.player.drawSprite(this.frameCount);\n      // this.player.drawPlayer(this.frameCount);\n      this.playerUpdate();\n      if (this.level.screen < 5) {\n        this.level.renderMid(this.ctx, this.canvas);\n        this.level.renderFront(this.ctx, this.canvas);\n      }\n      this.survivalMode(this.level, this.highScore);\n\n      // this.enemies[1].drawEnemy(this.ctx, this.frameCount);\n      this.renderEnemies();\n      // this.enemies[1].callAttack(this.frameCount);\n      this.renderItems();\n      this.renderEnemyProjectiles();\n      this.renderFireballs();\n      \n      this.HUD.drawHUD(this.canvas, this.ctx, this.player, this.frameCount, this.highScore);\n\n    } else {\n      if (!this.won) {\n        this.level.theme.pause();\n        this.highScore = Math.floor(this.highScore + this.player.health);\n \n        this.ctx.drawImage(\n            this.embers,\n            0,\n            0,\n            852,\n            400,\n            0, 0,\n            900, 600\n        );\n  \n        this.ctx.font = \"130px Arial\";\n        this.ctx.fillStyle = \"rgb(46, 2, 2)\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"GAME OVER\", this.canvas.width / 2, this.canvas.height / 2);\n\n\n        this.ctx.font = \"80px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\n          `YOUR SCORE IS ${this.highScore}`,\n          this.canvas.width / 2,\n          450\n        );\n\n        this.ctx.font = \"50px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\n          \"Press Enter to Play Again\",\n          this.canvas.width / 2,\n          550\n        );\n\n      } else {\n        this.level.theme.pause();\n\n        this.ctx.drawImage(\n          this.embers,\n          0,\n          0,\n          852,\n          400,\n          0, 0,\n          900, 600\n        );\n        this.ctx.font = \"80px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"CONGRATS!\", this.canvas.width / 2, 160);\n\n\n        this.ctx.font = \"80px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"YOU BEAT LEVEL 1\", this.canvas.width / 2, this.canvas.height / 2);\n\n        this.ctx.font = \"80px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(`YOUR SCORE IS ${this.highScore}`, this.canvas.width / 2, 450);\n\n\n        this.ctx.font = \"50px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"Press Enter to Play Again\", this.canvas.width / 2, 550);\n      }\n\n    } \n    \n  }\n\n}\n\n\n\n\n\nexport default Game;","import Controller from \"./util/Controller\";\nimport Level from \"./Levels/Level\";\nimport Player from \"./Player\";\nimport Game from \"./Game\";\nimport GameHUD from \"./GameHUD\";\n\n\nclass GameView {\n  constructor (canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    // this.game = new Game(this.canvas, this.ctx);\n    this.game = null;\n    this.splash = new Image();\n    this.splash.src = \"./assets/firegirl.jpg\";\n    this.logo = new Image();\n    this.logo.src = \"./assets/firegirl_logo_dark.png\";\n\n\n    this.renderGame = this.renderGame.bind(this);\n    this.loadImage = this.loadImage.bind(this);\n    this.newGame = this.newGame.bind(this);\n    this.newEnemyRush = this.newEnemyRush.bind(this);\n\n    window.addEventListener(\"keydown\", (event) => {\n      event.preventDefault();\n      switch (event.key) {\n        case \"Enter\": \n          if (!this.game || this.game.gameOver) {\n            this.newGame();\n          }\n          break;\n        case \" \":\n          if (!this.game || this.game.gameOver) {\n            this.newEnemyRush();\n          };\n          break;\n        case \"m\": \n          this.game.level.theme.mute();\n          break;\n        default:\n          return;\n      }\n    });\n\n  }\n\n  loadImage() {\n    let tileMap = new Image();\n    tileMap.src = \"./assets/tileGen.png\";\n    return tileMap;\n  }\n\n  newGame() {\n    if (!this.game || this.game.gameOver) {\n      this.game = new Game(this.canvas, this.ctx);\n      this.game.HUD = new GameHUD();\n      this.game.level.theme.play();\n    }\n  }\n\n  newEnemyRush() {\n    if (!this.game || this.game.gameOver) {\n      this.game = new Game(this.canvas, this.ctx, 2);\n      // this.game.newLevel();\n      // this.game.level = new Level({\n      //   ctx: this.ctx,\n      //   mapKeys: Level.level2(),\n      //   player: this.game.player,\n      //   tileSize: this.game.tileSize\n      // });\n      this.game.HUD = new GameHUD();\n      this.game.level.theme.play();\n    }\n    // if (!this.game || this.game.gameOver) {\n    //   this.game = new Game(this.canvas, this.ctx);\n    //   this.game.level.loadLevel(8);\n    //   this.game.level.enemiesInterval();\n    //   this.game.HUD = new GameHUD();\n    //   this.game.level.theme.play();\n    // }\n  }\n\n\n  renderGame() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    if (!this.game) {\n      this.ctx.drawImage(\n          this.splash,\n          0,\n          0,\n          920,\n          644,\n          0, 0,\n          this.canvas.width, this.canvas.height\n      );\n\n      // this.ctx.font = \"100px Arial\";\n      // this.ctx.fillStyle = \"rgb(46, 2, 2)\";\n      // this.ctx.textAlign = \"center\";\n      // this.ctx.fillText(\"FIRE GIRL\", this.canvas.width / 2, this.canvas.height / 3);\n      // this.ctx.filter = \"brightness(50%)\";\n      this.ctx.drawImage(\n        this.logo,\n        0,\n        0,\n        636,\n        171,\n        this.canvas.width / 6,\n        this.canvas.height / 5,\n        636,\n        171\n      );\n      this.ctx.font = \"1.8em Arial\";\n      this.ctx.fillStyle = \"pink\";\n      this.ctx.textAlign = \"center\";\n      this.ctx.fillText(\"Press Enter to Play Level 1\", this.canvas.width / 2, this.canvas.height * (2/3));\n\n      this.ctx.font = \"1.8em Arial\";\n      this.ctx.fillStyle = \"pink\";\n      this.ctx.textAlign = \"center\";\n      this.ctx.fillText(\"Press Space to Play Survival Mode\", this.canvas.width / 2, this.canvas.height * (7/9));\n    }\n\n    if (this.game) {\n\n      this.game.runGame();\n      \n    }\n\n    window.requestAnimationFrame(this.renderGame);\n  }\n\n\n\n\n} \n\n\n\nexport default GameView;\n\n","import \"./styles/index.scss\";\nimport GameView from \"./GameView\";\n\n// const greeting = testObj?.key2?.key3 || testObj.key1;\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  let canvas = document.getElementById(\"gameCanvas\");\n  let ctx = canvas.getContext(\"2d\");\n  let gameView = new GameView(canvas, ctx);\n\n  gameView.renderGame();\n\n  // ctx.beginPath();\n  // ctx.rect(0, 0, canvas.width, canvas.height);\n  // ctx.fillStyle = \"rgba(255, 255, 255, .1)\";\n  // ctx.fill();\n  // ctx.closePath();\n\n  // ctx.font = \"130px Arial\";\n  // ctx.fillStyle = \"red\";\n  // ctx.textAlign = \"center\";\n  // ctx.fillText(\"GAME OVER\", canvas.width / 2, canvas.height / 2);\n  // let img = new Image();\n  // img.src = \"./assets/firegirl.jpg\";\n  // img.onload = () => {\n  //   // ctx.drawImage(img, 0, 0);\n  //         ctx.drawImage(\n  //         img,\n  //         0,\n  //         0,\n  //         920,\n  //         644,\n  //         0, 0,\n  //         900, 600\n  //   );\n  // };\n  \n\n  // let fromRight = canvas.width - 50;\n  // ctx.beginPath();\n  // ctx.arc(fromRight, canvas.height - 30, 5, 0, 2 * Math.PI, false);\n  // ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.fill();\n  // ctx.lineWidth = 5;\n  // ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.stroke();\n  // ctx.closePath();\n\n  // ctx.beginPath();\n  // ctx.arc(canvas.width - 80, canvas.height - 30, 5, 0, 2 * Math.PI, false);\n  // ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.fill();\n  // ctx.lineWidth = 5;\n  // ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.stroke();\n  // ctx.closePath();\n\n  // ctx.beginPath();\n  // ctx.arc(canvas.width - 110, canvas.height - 30, 5, 0, 2 * Math.PI, false);\n  // ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.fill();\n  // ctx.lineWidth = 5;\n  // ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.stroke();\n  // ctx.closePath();\n  \n  // img.onload = () => {\n  //   ctx.drawImage(\n  //     img,\n  //     22 ,\n  //     400,\n  //     35,\n  //     35,\n  //     0, 0,\n  //     35, 35\n  //   );\n  // };\n\n\n\n});\n"],"sourceRoot":""}