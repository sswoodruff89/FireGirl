{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/Controller.js","webpack:///./src/Objects/GameObject.js","webpack:///./src/util/Music.js","webpack:///./src/Objects/Characters/Character.js","webpack:///./src/Player.js","webpack:///./src/util/Collision.js","webpack:///./src/util/Sound.js","webpack:///./src/Objects/Projectiles/Projectile.js","webpack:///./src/Objects/Enemies/Enemy.js","webpack:///./src/Objects/Enemies/Helicopter.js","webpack:///./src/Objects/Enemies/Spider.js","webpack:///./src/Objects/Enemies/Vinehead.js","webpack:///./src/Objects/Projectiles/ElectricBall.js","webpack:///./src/Objects/Enemies/Jellyfish.js","webpack:///./src/Objects/Projectiles/Vine.js","webpack:///./src/Objects/Enemies/BossVinehead.js","webpack:///./src/Levels/Level.js","webpack:///./src/GameHUD.js","webpack:///./src/Game.js","webpack:///./src/GameView.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Controller","player","this","keysPressed","keydown","keyup","window","addEventListener","event","preventDefault","idle","KEYS","left","direction","velX","right","up","upPressed","canClimb","console","log","climbing","velY","down","jump","fire","shootFire","onGround","dash","runningKeyDown","GameObject","options","pos","ctx","canvas","width","height","x","y","oldX","oldY","tileSize","rightSide","leftSide","topSide","bottomSide","getTopLeftPos","getTopRightPos","getBottomLeftPos","getBottomRightPos","Math","floor","Music","music","document","createElement","src","id","setAttribute","style","display","play","pause","mute","muted","Character","vel","health","spriteMap","Image","CONSTANTS","Player","character","damageMeter","damageBoost","loadImage","fireballs","idleWidth","runWidth","attackWidth","isRunning","jumpCount","frameCount","attacking","aura","attackAnimTimeout","dashing","isHit","dying","dead","drawPlayer","blueFire","drawAttack","drawRunning","drawIdle","drawSprite","drawJump","setOldPos","inAir","isIdle","whichDirection","setRunning","setHit","setDamageMeter","damageBoostCountdown","setDying","isClimbing","getDirX","getDirY","image","proj","drawImage","scale","state","vert","keys","length","clearTimeout","setTimeout","Projectile","blueFireballVert","blueFireball","launchSound","fireballVert","fireball","damage","hitCooldown","damageMeterInterval","setInterval","clearInterval","climb","Collision","collidePlayer","collidePlatform","collidePlatTop","collidePlatBottom","collidePlatLeft","collidePlatRight","collideSlopeFortyFiveRight","collideSlopeFortyFiveRightBottom","collideSlopeFortyFiveLeft","collideSlopeFortyFiveLeftBottom","collideSlopeTwentyLeft","collideSlopeTwentyLeftBottom","collideSlopeTwentyRight","collideSlopeTwentyRightBottom","climbable","collideEnemy","collisionPlatformKeys","1","obj","colVal","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","53","54","58","63","67","cleared","obj1","obj2","hitBox","bottom","top","dir","points","gameObj","tileLeft","tileBottom","tileY","vlY","tileRight","half","tileTop","gameObject","Sound","sound","idName","volume","impacted","impactTimeout","impactSrc","impact","frameStartX","frameStartY","frameWidth","frameHeight","frameNum","impactWidth","impactHeight","impactFrameWidth","impactFrameHeight","impactStartX","impactStartY","hitTimeout","collider","timeOutHit","updateProjectile","drawProjectile","drawImpact","physicalMap","hit","Enemy","enemy","projectiles","getMidX","getMidY","drawEnemy","shootProj","callAttack","helibullet","attackInterval","Helicopter","bounds","multiplier","Spider","startFrameCount","enemyInterval","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","closePath","count","Vinehead","active","opening","playerCheckTimeout","checkPlayerPos","homing","playerCheckInterval","ElectricBall","impactSound","shock","Jellyfish","setAttackInterval","Vine","boss","vine","charging","startX","boundsY","frameCountOffset","attack","backUp","charge","drawVines","playerCheck","move","random","int","chargeTimeout","vineTimeout","BossVinehead","vineNum","vines","vines1","shuffleVines","renderVines","attackVines","startAttack","bossInterval","attackTimeout","vineInterval","j","forEach","Level","mapKeys","screen","renderMap","cols","rows","tileMap","mapTileSize","enemies","enemyCount","theme","levelLayers","loadImages","spawnTier","rushLevel","spawnTierGroup","rushInterval","enemyRushSpawn","enemyRushInterval","getTile","getLeft","getRight","getTop","getBottom","drawLevel","loadLevel","enemiesInterval","spawnEnemies","enemyRush","renderBackground","renderMid","renderFront","spider1","0","hel2","hel1","jell2","jell1","vine3","vine1","vine2","background","mid","front","spider2","spider3","boss1","images","col","row","parseInt","spawnInterval","num","tierAmount","tile","tileCut","GameHUD","loadFire","loadBlueFire","drawHealth","drawDamageMeter","drawHUD","drawAmmo","drawPoints","img","rect","fillStyle","fill","healthMeter","fromRight","arc","PI","font","textAlign","fillText","Game","lvl","levelCall","level1","level2","controller","level","HUD","gameOver","embers","highScore","playerPlatformCheck","playerUpdate","projectilePlatformCheck","renderFireballs","renderEnemies","renderEnemyProjectiles","runGame","isGameOver","win","enemiesCleared","resizeGame","newLevel","survivalMode","frameInterval","floorCount","climbCount","physMap","projectile","values","collideProjectile","won","GameView","game","splash","logo","renderGame","newGame","newEnemyRush","clearRect","requestAnimationFrame","getElementById","getContext"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,SAIjBlC,EAAoBA,EAAoBmC,EAAI,G,uOClF/CC,E,WACJ,WAAYC,I,4FAAQ,SAElBC,KAAKD,OAASA,EAEdC,KAAKC,YAAc,GAEnBD,KAAKE,QAAUF,KAAKE,QAAQZ,KAAKU,MACjCA,KAAKG,MAAQH,KAAKG,MAAMb,KAAKU,MAC7BI,OAAOC,iBAAiB,UAAWL,KAAKE,SACxCE,OAAOC,iBAAiB,QAASL,KAAKG,O,uDAGhCG,GAKN,OAJAA,EAAMC,iBACNP,KAAKD,OAAOS,MAAO,EACnBR,KAAKD,OAAOG,SAAU,EAEdJ,EAAWW,KAAKH,EAAMjB,MAE5B,IAAK,OACHW,KAAKC,YAAYS,MAAO,EAExBV,KAAKD,OAAOY,UAAY,OACxBX,KAAKD,OAAOa,MAAQ,EAEpB,MACF,IAAK,QACHZ,KAAKC,YAAYY,OAAQ,EAGzBb,KAAKD,OAAOY,UAAY,QACxBX,KAAKD,OAAOa,KAAO,EACnB,MACF,IAAK,KACHZ,KAAKC,YAAYa,IAAK,EACtBd,KAAKD,OAAOgB,UAAYf,KAAKC,YAAYa,GAErCd,KAAKD,OAAOiB,WACdC,QAAQC,IAAIlB,KAAKD,OAAOiB,UACxBC,QAAQC,IAAIlB,KAAKD,OAAOS,MAExBR,KAAKD,OAAOoB,UAAW,EACvBnB,KAAKD,OAAOqB,MAAQ,GAEtB,MACF,IAAK,OACHpB,KAAKC,YAAYoB,MAAO,EACpBrB,KAAKD,OAAOiB,WACdC,QAAQC,IAAIlB,KAAKD,OAAOiB,UACxBhB,KAAKD,OAAOoB,UAAW,EACvBnB,KAAKD,OAAOqB,KAAO,GAErB,MACF,IAAK,OACHpB,KAAKC,YAAYqB,MAAO,EACxBtB,KAAKD,OAAOuB,OACZ,MACF,IAAK,OAEHtB,KAAKC,YAAYsB,MAAO,EACpBvB,KAAKC,YAAYa,GACnBd,KAAKD,OAAOyB,UAAU,MACbxB,KAAKC,YAAYoB,OAASrB,KAAKD,OAAO0B,SAC/CzB,KAAKD,OAAOyB,UAAU,QAEtBxB,KAAKD,OAAOyB,YAGd,MACF,IAAK,OACHxB,KAAKC,YAAYyB,MAAO,EAU1B,IAAK,QAEH,MACF,QACE,U,4BAKApB,GAUJ,OAFAA,EAAMC,iBAEET,EAAWW,KAAKH,EAAMjB,MAG5B,IAAK,OACHW,KAAKC,YAAYS,MAAO,EAExBV,KAAKD,OAAO4B,gBAAiB,EAExB3B,KAAKC,YAAYS,MAASV,KAAKC,YAAYY,QAAOb,KAAKD,OAAOa,KAAO,GAE1E,MACF,IAAK,QACHZ,KAAKC,YAAYY,OAAQ,EAIpBb,KAAKC,YAAYS,MAASV,KAAKC,YAAYY,QAAOb,KAAKD,OAAOa,KAAO,GAC1E,MACF,IAAK,KACHZ,KAAKC,YAAYa,IAAK,EACtBd,KAAKD,OAAOgB,UAAYf,KAAKC,YAAYa,GAErCd,KAAKD,OAAOoB,WAAUnB,KAAKD,OAAOoB,UAAW,GACjD,MACF,IAAK,OACHnB,KAAKC,YAAYoB,MAAO,EACxB,MACF,IAAK,OACHrB,KAAKC,YAAYqB,MAAO,EACxB,MACF,IAAK,OACHtB,KAAKC,YAAYsB,MAAO,EACxB,MACF,IAAK,OACHvB,KAAKC,YAAYyB,MAAO,EAC1B,IAAK,QAEH,MACF,QACE,OAIJ1B,KAAKD,OAAOS,MAAO,O,gCAqBvBV,EAAWW,KAAO,CAChB,MAAS,QACT,UAAa,OACb,QAAW,KACX,WAAc,QACd,UAAa,OACb,EAAK,OACL,EAAK,OACL,EAAK,OACL,MAAS,SAKIX,Q,0KC9GA8B,E,WAjEb,WAAYC,I,4FAAS,SACnB7B,KAAK3B,KAAOwD,EAAQxD,KACpB2B,KAAK8B,IAAMD,EAAQC,IACnB9B,KAAK+B,IAAMF,EAAQE,IACnB/B,KAAKgC,OAASH,EAAQG,OACtBhC,KAAKiC,MAAQJ,EAAQI,MACrBjC,KAAKkC,OAASL,EAAQK,OACtBlC,KAAKmC,EAAIN,EAAQC,IAAI,GACrB9B,KAAKoC,EAAIP,EAAQC,IAAI,GACrB9B,KAAKqC,KAAOrC,KAAKmC,EACjBnC,KAAKsC,KAAOtC,KAAKoC,EACjBpC,KAAKuC,SAAW,GAIhBvC,KAAKwC,UAAYxC,KAAKwC,UAAUlD,KAAKU,MACrCA,KAAKyC,SAAWzC,KAAKyC,SAASnD,KAAKU,MACnCA,KAAK0C,QAAU1C,KAAK0C,QAAQpD,KAAKU,MACjCA,KAAK2C,WAAa3C,KAAK2C,WAAWrD,KAAKU,MAEvCA,KAAK4C,cAAgB5C,KAAK4C,cAActD,KAAKU,MAC7CA,KAAK6C,eAAiB7C,KAAK6C,eAAevD,KAAKU,MAC/CA,KAAK8C,iBAAmB9C,KAAK8C,iBAAiBxD,KAAKU,MACnDA,KAAK+C,kBAAoB/C,KAAK+C,kBAAkBzD,KAAKU,M,2DAIrD,OAAOA,KAAKmC,EAAInC,KAAKiC,Q,iCAIrB,OAAOjC,KAAKmC,I,gCAIZ,OAAOnC,KAAKoC,I,mCAIZ,OAAOpC,KAAKoC,EAAIpC,KAAKkC,S,sCAMrB,MAAO,CAFCc,KAAKC,MAAMjD,KAAKyC,WAAazC,KAAKuC,UAClCS,KAAKC,MAAMjD,KAAK0C,UAAY1C,KAAKuC,a,uCAOzC,MAAO,CAFCS,KAAKC,MAAMjD,KAAKwC,YAAcxC,KAAKuC,UACnCS,KAAKC,MAAMjD,KAAK0C,UAAY1C,KAAKuC,a,yCAMzC,MAAO,CAFCS,KAAKC,MAAMjD,KAAKyC,WAAazC,KAAKuC,UAClCS,KAAKC,MAAMjD,KAAK2C,aAAe3C,KAAKuC,a,0CAM5C,MAAO,CAFCS,KAAKC,MAAMjD,KAAKwC,YAAcxC,KAAKuC,UACnCS,KAAKC,MAAMjD,KAAK2C,aAAe3C,KAAKuC,gB,0MClCjCW,E,WA5BX,WAAYrB,I,4FAAQ,SAChB7B,KAAKmD,MAAQC,SAASC,cAAc,SACpCrD,KAAKmD,MAAMG,IAAMzB,EAAQyB,IACzBtD,KAAKmD,MAAMI,GAAK,QAChBvD,KAAKmD,MAAMK,aAAa,UAAW,QACnCxD,KAAKmD,MAAMK,aAAa,WAAY,QACpCxD,KAAKmD,MAAMK,aAAa,OAAQ,QAChCxD,KAAKmD,MAAMK,aAAa,QAAS,SACjCxD,KAAKmD,MAAMM,MAAMC,QAAU,OAE3B1D,KAAK2D,KAAO3D,KAAK2D,KAAKrE,KAAKU,MAC3BA,KAAK4D,MAAQ5D,KAAK4D,MAAMtE,KAAKU,MAC7BA,KAAK6D,KAAO7D,KAAK6D,KAAKvE,KAAKU,M,sDAI3BA,KAAKmD,MAAMQ,S,8BAGX3D,KAAKmD,MAAMS,U,6BAIX5D,KAAKmD,MAAMW,OAAQ9D,KAAKmD,MAAMW,W,u0BCtBtC,IA2CeC,E,YAvCb,WAAYlC,GAAS,a,4FAAA,UACnB,wBAAM,CACJxD,KAAMwD,EAAQxD,KACdyD,IAAKD,EAAQC,IACbC,IAAKF,EAAQE,IACbE,MAAOJ,EAAQI,MACfC,OAAQL,EAAQK,WAEb8B,IAAM,CAAC,EAAG,GACf,EAAKC,OAAS,IATK,E,mSAcnB,IAAIC,EAAY,IAAIC,MAEpB,OADAD,EAAUZ,IAAM,gCACTY,O,8BAjBatC,G,sKCAxB,IAAMwC,EACK,EAm0BIC,E,WA7zBb,WAAYtC,EAAKC,I,4FAAQ,SACvBhC,KAAK+B,IAAMA,EACX/B,KAAKgC,OAASA,EACdhC,KAAKsE,UAAY,IAAIP,EAAU,CAC7B1F,KAAM,QACNyD,IAAK,CAAC,GAAI,KACVC,IAAK/B,KAAK+B,IACVC,OAAQhC,KAAKgC,OAGbC,MAAO,KACPC,OAAQ,KAIVlC,KAAKiE,OAASjE,KAAKsE,UAAUL,OAC7BjE,KAAKuE,YAAc,EACnBvE,KAAKwE,aAAc,EACnBxE,KAAKkE,UAAYlE,KAAKsE,UAAUG,YAEhCzE,KAAK0E,UAAY,GAEjB1E,KAAKgE,IAAMhE,KAAKsE,UAAUN,IAC1BhE,KAAKmC,EAAInC,KAAKsE,UAAUnC,EACxBnC,KAAKoC,EAAIpC,KAAKsE,UAAUlC,EACxBpC,KAAK2E,UAAY,KACjB3E,KAAK4E,SAAW,GAChB5E,KAAK6E,YACL7E,KAAKqC,KAAOrC,KAAKmC,EACjBnC,KAAKsC,KAAOtC,KAAKoC,EACjBpC,KAAKiC,MAAQjC,KAAKsE,UAAUrC,MAC5BjC,KAAKkC,OAASlC,KAAKsE,UAAUpC,OAC7BlC,KAAKY,KAAOZ,KAAKgE,IAAI,GACrBhE,KAAKoB,KAAOpB,KAAKgE,IAAI,GACrBhE,KAAKyB,UAAW,EAChBzB,KAAKQ,MAAO,EACZR,KAAKE,SAAU,EACfF,KAAK2B,gBAAiB,EACtB3B,KAAK8E,WAAY,EACjB9E,KAAKW,UAAY,QACjBX,KAAK+E,UAAY,EACjB/E,KAAKgB,UAAW,EAChBhB,KAAKmB,UAAW,EAChBnB,KAAKgF,WAAa,EAClBhF,KAAKiF,WAAY,EACjBjF,KAAKkF,KAAOlF,KAAKyE,UAAU,qBAE3BzE,KAAKe,WAAY,EACjBf,KAAKmF,kBAAoB,GACzBnF,KAAKoF,SAAU,EAEfpF,KAAKqF,OAAQ,EACbrF,KAAKsF,OAAQ,EACbtF,KAAKuF,MAAO,EAIZvF,KAAKwF,WAAaxF,KAAKwF,WAAWlG,KAAKU,MACvCA,KAAKsB,KAAOtB,KAAKsB,KAAKhC,KAAKU,MAI3BA,KAAKwB,UAAYxB,KAAKwB,UAAUlC,KAAKU,MACrCA,KAAKyF,SAAWzF,KAAKyF,SAASnG,KAAKU,MACnCA,KAAKuB,KAAOvB,KAAKuB,KAAKjC,KAAKU,MAE3BA,KAAK0F,WAAa1F,KAAK0F,WAAWpG,KAAKU,MACvCA,KAAK2F,YAAc3F,KAAK2F,YAAYrG,KAAKU,MACzCA,KAAK4F,SAAW5F,KAAK4F,SAAStG,KAAKU,MACnCA,KAAK6F,WAAa7F,KAAK6F,WAAWvG,KAAKU,MACvCA,KAAK8F,SAAW9F,KAAK8F,SAASxG,KAAKU,MACnCA,KAAKyE,UAAYzE,KAAKyE,UAAUnF,KAAKU,MAErCA,KAAK+F,UAAY/F,KAAK+F,UAAUzG,KAAKU,MACrCA,KAAKgG,MAAQhG,KAAKgG,MAAM1G,KAAKU,MAC7BA,KAAKiG,OAASjG,KAAKiG,OAAO3G,KAAKU,MAC/BA,KAAKkG,eAAiBlG,KAAKkG,eAAe5G,KAAKU,MAC/CA,KAAKmG,WAAanG,KAAKmG,WAAW7G,KAAKU,MACvCA,KAAKoG,OAASpG,KAAKoG,OAAO9G,KAAKU,MAE/BA,KAAKqG,eAAiBrG,KAAKqG,eAAe/G,KAAKU,MAC/CA,KAAKsG,qBAAuBtG,KAAKsG,qBAAqBhH,KAAKU,MAE3DA,KAAKuG,SAAWvG,KAAKuG,SAASjH,KAAKU,MACnCA,KAAKwG,WAAaxG,KAAKwG,WAAWlH,KAAKU,MACvCA,KAAKyG,QAAUzG,KAAKyG,QAAQnH,KAAKU,MACjCA,KAAK0G,QAAU1G,KAAK0G,QAAQpH,KAAKU,M,yDAGzB2G,GACR,IAAIC,EAAO,IAAIzC,MAEf,OADAyC,EAAKtD,IAAMqD,EACJC,I,iCAGE5B,GAGThF,KAAKuG,WAEDvG,KAAKqF,OAASL,EAAa,GAAM,IACnB,IAAdhF,KAAKY,KACgB,UAAnBZ,KAAKW,UACPX,KAAK+B,IAAI8E,UACP7G,KAAKkE,UAEL,EAEA,IACA,GACA,IACAlE,KAAKmC,EAAGnC,KAAKoC,EACbpC,KAAKiC,MAAOjC,KAAKkC,SAInBlC,KAAK+B,IAAI+E,OAAO,EAAG,GACnB9G,KAAK+B,IAAI8E,UAMP7G,KAAKkE,UACL,EACA,IACA,GACA,KACClE,KAAKmC,EAAInC,KAAKiC,MAAOjC,KAAKoC,EAE3BpC,KAAKiC,MAAOjC,KAAKkC,QAGnBlC,KAAK+B,IAAI+E,OAAO,EAAG,IAEZ9G,KAAKY,KAAO,EACrBZ,KAAK+B,IAAI8E,UACP7G,KAAKkE,UAEJlB,KAAKC,MAAM+B,EAAa,GAAK,GAAM,OAAS,EAE7C,EACA,OACA,IACAhF,KAAKmC,EAAGnC,KAAKoC,EACbpC,KAAKiC,MAAQ,EAAGjC,KAAKkC,QAEdlC,KAAKY,KAAO,IACrBZ,KAAK+B,IAAI+E,OAAO,EAAG,GACnB9G,KAAK+B,IAAI8E,UACP7G,KAAKkE,UAEJlB,KAAKC,MAAM+B,EAAa,GAAK,GAAM,OAAS,EAE7C,EACA,OACA,KACEhF,KAAKmC,EAAKnC,KAAKiC,MAAOjC,KAAKoC,EAC7BpC,KAAKiC,MAAQ,EAAGjC,KAAKkC,QAEvBlC,KAAK+B,IAAI+E,OAAO,EAAG,O,kCAMX9B,GACa,UAAnBhF,KAAKW,UACPX,KAAK+B,IAAI8E,UACP7G,KAAKkE,UAEJlB,KAAKC,MAAM+B,EAAa,GAAK,GAAM,MAAQ,EAE5C,EACA,MACA,IACAhF,KAAKmC,EAAGnC,KAAKoC,EACbpC,KAAKiC,MAAQ,EAAGjC,KAAKkC,SAGvBlC,KAAK+B,IAAI+E,OAAO,EAAG,GACnB9G,KAAK+B,IAAI8E,UACP7G,KAAKkE,UAEJlB,KAAKC,MAAM+B,EAAa,GAAK,GAAM,MAAQ,EAE5C,EACA,MACA,KACEhF,KAAKmC,EAAKnC,KAAKiC,MAAOjC,KAAKoC,EAC7BpC,KAAKiC,MAAQ,EAAGjC,KAAKkC,QAEvBlC,KAAK+B,IAAI+E,OAAO,EAAG,M,iCAMZ9B,EAAY+B,GACrB,OAAQA,GACN,IAAK,UACC/G,KAAKoB,KAAO,EACS,UAAnBpB,KAAKW,UACPX,KAAK+B,IAAI8E,UACP7G,KAAKkE,UACJlB,KAAKC,MAAM+B,EAAa,GAAK,EAAK,IACnC,KACA,IACA,IACAhF,KAAKmC,EAAGnC,KAAKoC,EACbpC,KAAKiC,MAAQ,EAAGjC,KAAKkC,SAIvBlC,KAAK+B,IAAI+E,OAAO,EAAG,GACnB9G,KAAK+B,IAAI8E,UACP7G,KAAKkE,UACJlB,KAAKC,MAAM+B,EAAa,GAAK,EAAK,IACnC,KACA,IACA,KACChF,KAAKmC,EAAInC,KAAKiC,MAAOjC,KAAKoC,EAE3BpC,KAAKiC,MAAQ,EAAGjC,KAAKkC,QAGvBlC,KAAK+B,IAAI+E,OAAO,EAAG,IAEZ9G,KAAKoB,KAAO,IACE,UAAnBpB,KAAKW,UACPX,KAAK+B,IAAI8E,UACP7G,KAAKkE,UACJlB,KAAKC,MAAM+B,EAAa,GAAK,EAAK,IACnC,KACA,IACA,IACAhF,KAAKmC,EAAGnC,KAAKoC,EACbpC,KAAKiC,MAAOjC,KAAKkC,SAInBlC,KAAK+B,IAAI+E,OAAO,EAAG,GACnB9G,KAAK+B,IAAI8E,UACP7G,KAAKkE,UACJlB,KAAKC,MAAM+B,EAAa,GAAK,EAAK,IACnC,KACA,IACA,KACChF,KAAKmC,EAAInC,KAAKiC,MAAOjC,KAAKoC,EAE3BpC,KAAKiC,MAAOjC,KAAKkC,QAGnBlC,KAAK+B,IAAI+E,OAAO,EAAG,KAGvB,MACF,IAAK,UACoB,UAAnB9G,KAAKW,UACPX,KAAK+B,IAAI8E,UACP7G,KAAKkE,UACJlB,KAAKC,MAAM+B,EAAa,GAAK,EAAK,IACnC,IACA,IACA,IACAhF,KAAKmC,EAAGnC,KAAKoC,EACbpC,KAAKiC,MAASjC,KAAKiC,MAAQ,EAAIjC,KAAKkC,QAEV,SAAnBlC,KAAKW,YACdX,KAAK+B,IAAI+E,OAAO,EAAG,GACnB9G,KAAK+B,IAAI8E,UACP7G,KAAKkE,UACJlB,KAAKC,MAAM+B,EAAa,GAAK,EAAK,IACnC,IACA,IACA,KACChF,KAAKmC,EAAInC,KAAKiC,MAAOjC,KAAKoC,EAC3BpC,KAAKiC,MAASjC,KAAKiC,MAAQ,EAAIjC,KAAKkC,QAEtClC,KAAK+B,IAAI+E,OAAO,EAAG,IAErB,MACF,QACyB,UAAnB9G,KAAKW,UACHX,KAAKe,UACPf,KAAK+B,IAAI8E,UACP7G,KAAKkE,UACJlB,KAAKC,MAAM+B,EAAa,GAAK,EAAK,GACnC,IACA,GACA,IACAhF,KAAKmC,EAAGnC,KAAKoC,EAAKpC,KAAKkC,OAAS,GAChClC,KAAKiC,MAAqB,IAAdjC,KAAKkC,QAGnBlC,KAAK+B,IAAI8E,UACP7G,KAAKkE,UACJlB,KAAKC,MAAM+B,EAAa,GAAK,EAAK,MACnC,IACA,OACA,IACAhF,KAAKmC,EAAGnC,KAAKoC,EACbpC,KAAKiC,MAASjC,KAAKiC,MAAQ,IAAMjC,KAAKkC,QAGd,SAAnBlC,KAAKW,YACdX,KAAK+B,IAAI+E,OAAO,EAAG,GACf9G,KAAKe,UACPf,KAAK+B,IAAI8E,UACP7G,KAAKkE,UACJlB,KAAKC,MAAM+B,EAAa,GAAK,EAAK,GACnC,IACA,GACA,KACChF,KAAKmC,EAAInC,KAAKiC,MAAOjC,KAAKoC,EAAKpC,KAAKkC,OAAS,GAC9ClC,KAAKiC,MAAqB,IAAdjC,KAAKkC,QAGnBlC,KAAK+B,IAAI8E,UACP7G,KAAKkE,UACJlB,KAAKC,MAAM+B,EAAa,GAAK,EAAK,MACnC,IACA,OACA,KACChF,KAAKmC,EAAInC,KAAKiC,MAAOjC,KAAKoC,EAC3BpC,KAAKiC,MAASjC,KAAKiC,MAAQ,IAAMjC,KAAKkC,QAG1ClC,KAAK+B,IAAI+E,OAAO,EAAG,O,+BAOlB9B,IACFhF,KAAKyB,UAAYzB,KAAKoB,KAAO,EACT,UAAnBpB,KAAKW,UACPX,KAAK+B,IAAI8E,UACP7G,KAAKkE,UACJlB,KAAKC,MAAM+B,EAAa,GAAK,EAAK,GACnC,IACA,GACA,IACAhF,KAAKmC,EAAGnC,KAAKoC,EACbpC,KAAKiC,MAASjC,KAAKiC,MAAQ,EAAIjC,KAAKkC,SAItClC,KAAK+B,IAAI+E,OAAO,EAAG,GACnB9G,KAAK+B,IAAI8E,UACP7G,KAAKkE,UACJlB,KAAKC,MAAM+B,EAAa,GAAK,EAAK,GACnC,IACA,GACA,KACChF,KAAKmC,EAAInC,KAAKiC,MAAOjC,KAAKoC,EAE3BpC,KAAKiC,MAASjC,KAAKiC,MAAQ,EAAIjC,KAAKkC,QAGtClC,KAAK+B,IAAI+E,OAAO,EAAG,KAEX9G,KAAKyB,UAAYzB,KAAKoB,KAAO,IAChB,UAAnBpB,KAAKW,UACPX,KAAK+B,IAAI8E,UACP7G,KAAKkE,UACJlB,KAAKC,MAAM+B,EAAa,GAAK,EAAK,GACnC,KACA,GACA,IACAhF,KAAKmC,EAAGnC,KAAKoC,EACbpC,KAAKiC,MAAOjC,KAAKkC,SAInBlC,KAAK+B,IAAI+E,OAAO,EAAG,GACnB9G,KAAK+B,IAAI8E,UACP7G,KAAKkE,UACJlB,KAAKC,MAAM+B,EAAa,GAAK,EAAK,GACnC,KACA,GACA,KACChF,KAAKmC,EAAInC,KAAKiC,MAAOjC,KAAKoC,EAE3BpC,KAAKiC,MAAOjC,KAAKkC,QAGnBlC,KAAK+B,IAAI+E,OAAO,EAAG,O,+BAKhB9B,GACgB,UAAnBhF,KAAKW,UACPX,KAAK+B,IAAI8E,UACP7G,KAAKkE,UACL,EACA,IACA,GACA,IACAlE,KAAKmC,EAAGnC,KAAKoC,EACbpC,KAAKiC,MAAOjC,KAAKkC,SAInBlC,KAAK+B,IAAI+E,OAAO,EAAG,GACnB9G,KAAK+B,IAAI8E,UACP7G,KAAKkE,UACL,EACA,IACA,GACA,KACClE,KAAKmC,EAAInC,KAAKiC,MAAOjC,KAAKoC,EAE3BpC,KAAKiC,MAAOjC,KAAKkC,QAGnBlC,KAAK+B,IAAI+E,OAAO,EAAG,M,iCAIZ9B,GACThF,KAAKuG,WAEDvG,KAAKwE,aACPxE,KAAK+B,IAAI8E,UACP7G,KAAKkF,KACJlC,KAAKC,MAAM+B,EAAa,GAAK,EAAK,GACnC,EACA,GACA,GACAhF,KAAKmC,EAAI,GAAInC,KAAKoC,EAAI,GACtB,IAAK,KAILpC,KAAKqF,OAASL,EAAa,GAAM,IAIjChF,KAAKoB,MAAQ,GAAKpB,KAAKoB,MAAQ,EAC7BpB,KAAK8E,UACL9E,KAAKiF,UAA4CjF,KAAK0F,WAAWV,EAAY,WAA3DhF,KAAK2F,YAAYX,GAEnChF,KAAKiF,UAAyCjF,KAAK0F,WAAWV,EAAY,MAAxDhF,KAAK4F,SAASZ,GAE1BhF,KAAKyB,WACbzB,KAAKiF,UAAyCjF,KAAK0F,WAAWV,EAAY,WAAxDhF,KAAK8F,SAASd,IAGhChF,KAAKwE,aACPxE,KAAK+B,IAAI8E,UACP7G,KAAKkF,KACJlC,KAAKC,MAAM+B,EAAa,GAAK,EAAK,GACnC,EACA,GACA,GACAhF,KAAKmC,EAAI,GAAInC,KAAKoC,EAAI,GACtB,IAAK,Q,kCAMY,IAAb4E,EAAa,uDAAN,KACVhH,KAAKwE,YAGRxE,KAAKyF,SAASuB,GAFdhH,KAAKuB,KAAKyF,K,iCASZ,IAHoB,WAAbA,EAAa,uDAAN,KAEV3H,EAAM,KACDvB,EAAI,EAAGA,GAAKU,OAAOyI,KAAKjH,KAAK0E,WAAWwC,OAAQpJ,IAEvD,IAAKkC,KAAK0E,UAAU5G,GAAI,CACtBuB,EAAMvB,EAEN,MAIJuB,EAAQA,GAAOb,OAAOyI,KAAKjH,KAAK0E,WAAWwC,OAAS,EACpDC,aAAanH,KAAKmF,mBAClBnF,KAAKiF,WAAY,EACjBjF,KAAKmF,kBAAoBiC,YAAW,WAClC,EAAKnC,WAAY,IAChB,KAEoB,UAAnBjF,KAAKW,UACM,OAATqG,EACFhH,KAAK0E,UAAUrF,GAAO,IAAIgI,EACxBA,EAAWC,iBACT,CAACtH,KAAKwC,YAAcxC,KAAKiC,MAAQ,EAAGjC,KAAKoC,EAAIpC,KAAKkC,QAGlD,GACC,GACD8E,IAGc,SAATA,GACThH,KAAK0E,UAAUrF,GAAO,IAAIgI,EACxBA,EAAWC,iBACT,CACEtH,KAAKwC,YAAcxC,KAAKiC,MAAQ,EAChCjC,KAAK2C,aAAe3C,KAAKkC,QAE3B,EACA,GACA8E,IAGFhH,KAAKoB,MAAQ,GAGfpB,KAAK0E,UAAUrF,GAAO,IAAIgI,EACxBA,EAAWE,aACT,CACEvH,KAAKwC,YAAcxC,KAAKiC,MAAQ,GAChCjC,KAAK0C,UAAY1C,KAAKkC,OAAS,GAEjC,GACA,EACA,UAKsB,SAAnBlC,KAAKW,YAED,OAATqG,EACFhH,KAAK0E,UAAUrF,GAAO,IAAIgI,EACxBA,EAAWC,iBACT,CAACtH,KAAKwC,YAA4B,IAAbxC,KAAKiC,MACxBjC,KAAKoC,EAAKpC,KAAKkC,QAGjB,GAAI,GAAI8E,IAEM,SAATA,GACThH,KAAK0E,UAAUrF,GAAO,IAAIgI,EACxBA,EAAWC,iBACT,CAACtH,KAAKwC,YAAexC,KAAKiC,MAAQ,EAClCjC,KAAK2C,aAAe3C,KAAKkC,QACzB,EAAG,GAAI8E,IAEXhH,KAAKoB,MAAQ,GACbpB,KAAK+E,WAAa,GAElB/E,KAAK0E,UAAUrF,GAAO,IAAIgI,EACxBA,EAAWE,aACT,CACEvH,KAAKyC,YAAczC,KAAKiC,MAASjC,KAAKiC,MAAQ,GAC9CjC,KAAK0C,UAAa1C,KAAKkC,OAAS,IAEjC,GACD,EACA,UAMRlC,KAAK0E,UAAUrF,GAAKmI,YAAY7D,S,6BAIhB,WAAbqD,EAAa,uDAAN,KACV,GAA2C,IAAvCxI,OAAOyI,KAAKjH,KAAK0E,WAAWwC,OAAhC,CAMA,IADA,IAAI7H,EACKvB,EAAI,EAAGA,GAAK,EAAGA,IACtB,IAAKkC,KAAK0E,UAAU5G,GAAI,CACtBuB,EAAMvB,EACNqJ,aAAanH,KAAKmF,mBAClBnF,KAAKiF,WAAY,EACjBjF,KAAKmF,kBAAoBiC,YAAW,WAClC,EAAKnC,WAAY,IAChB,KAEH,MAImB,UAAnBjF,KAAKW,UACM,OAATqG,EACFhH,KAAK0E,UAAUrF,GAAO,IAAIgI,EACxBA,EAAWI,aACT,CAACzH,KAAKwC,YAAexC,KAAKiC,MAAQ,EAClCjC,KAAKoC,EAAKpC,KAAKkC,QAGf,GAAI,GAAI8E,IAEM,SAATA,GACThH,KAAK0E,UAAUrF,GAAO,IAAIgI,EACxBA,EAAWI,aACT,CAACzH,KAAKwC,YAAexC,KAAKiC,MAAQ,EAClCjC,KAAK2C,aAAe3C,KAAKkC,QACzB,EAAG,GAAI8E,IAEThH,KAAKoB,MAAQ,GAGfpB,KAAK0E,UAAUrF,GAAO,IAAIgI,EACxBA,EAAWK,SACT,CAAC1H,KAAKwC,YAAexC,KAAKiC,MAAQ,GAClCjC,KAAK0C,UAAa1C,KAAKkC,OAAS,GAChC,GAAI,EAAG,UAIe,SAAnBlC,KAAKW,YAED,OAATqG,EACFhH,KAAK0E,UAAUrF,GAAO,IAAIgI,EACxBA,EAAWI,aACT,CAACzH,KAAKwC,YAA4B,IAAbxC,KAAKiC,MACxBjC,KAAKoC,EAAKpC,KAAKkC,QAGjB,GAAI,GAAI8E,IAEM,SAATA,GACThH,KAAK0E,UAAUrF,GAAO,IAAIgI,EACxBA,EAAWI,aACT,CAACzH,KAAKwC,YAAexC,KAAKiC,MAAQ,EAClCjC,KAAK2C,aAAe3C,KAAKkC,QACzB,EAAG,GAAI8E,IAEXhH,KAAKoB,MAAQ,GACbpB,KAAK+E,WAAa,GAElB/E,KAAK0E,UAAUrF,GAAO,IAAIgI,EACxBA,EAAWK,SACT,CACE1H,KAAKyC,YAAczC,KAAKiC,MAASjC,KAAKiC,MAAQ,GAC9CjC,KAAK0C,UAAa1C,KAAKkC,OAAS,IAEjC,GACD,EACA,UAMRlC,KAAK0E,UAAUrF,GAAKmI,YAAY7D,YAjF9B3D,KAAKiF,WAAY,I,+BAqFD,WAAb0C,EAAa,uDAAJ,GACT3H,KAAKqF,QACRrF,KAAKqF,OAAQ,EACbrF,KAAK4H,YAAcR,YAAW,WAC5B,EAAK/B,OAAQ,IACZ,KACHrF,KAAKiE,QAAU0D,EACf3H,KAAKqG,eAAesB,M,qCAITA,GACR3H,KAAKwE,cACRxE,KAAKuE,aAAeoD,EAGhB3H,KAAKuE,aAAe,MACtBvE,KAAKuE,YAAc,IACnBvE,KAAKwE,aAAc,EACnBxE,KAAKsG,2B,6CAKY,WACrBtG,KAAK6H,oBAAsBC,aAAY,WACrC,EAAKvD,aAAe,EAChB,EAAKA,aAAe,IACtB,EAAKA,YAAc,EACnBwD,cAAc,EAAKF,qBACnB,EAAKrD,aAAc,KAEpB,O,iCAGM,WAELxE,KAAKiE,QAAU,IACjBjE,KAAKiE,OAAS,EACdjE,KAAKsF,OAAQ,EACbtF,KAAK2H,OAAS,EACd3H,KAAKY,KAAO,EACZZ,KAAKoB,KAAO,EACZgG,YAAW,WACT,EAAK7B,MAAO,IACX,Q,kCAML,OAAOvF,KAAKmC,EAAInC,KAAKiC,Q,iCAIrB,OAAOjC,KAAKmC,I,gCAIZ,OAAOnC,KAAKoC,I,mCAIZ,OAAOpC,KAAKoC,EAAIpC,KAAKkC,S,kCAKrBlC,KAAKqC,KAAOrC,KAAKmC,EACjBnC,KAAKsC,KAAOtC,KAAKoC,I,gCAIjB,OAAOpC,KAAKmC,EAAInC,KAAKY,O,gCAIrB,OAAOZ,KAAKoC,EAAIpC,KAAKoB,O,+BAIH,IAAdpB,KAAKY,MAA4B,IAAdZ,KAAKoB,KAC1BpB,KAAKQ,MAAO,EAEZR,KAAKQ,MAAO,I,8BAKTR,KAAKyB,SAIRzB,KAAKoB,KAAO,GAHZpB,KAAKoC,GAAKpC,KAAKoB,KACdpB,KAAKoB,KAAOgD,EAAoB,GAAMpE,KAAKoB,KAAO,GAAKpB,KAAKoB,MAAQgD,K,mCAOnEpE,KAAKmB,UAAYnB,KAAKgB,UAAYhB,KAAKE,QACzCF,KAAKoC,GAAKpC,KAAKoB,KAEfpB,KAAKoB,KAAO,I,6BAmCS,IAAnBpB,KAAK+E,WACP/E,KAAKyB,UAAW,EAChBzB,KAAKoB,MAAO,GACZpB,KAAK+E,UAAY,GACW,IAAnB/E,KAAK+E,YACd/E,KAAKoB,MAAO,GACZpB,KAAK+E,UAAY,K,8BAKnB/E,KAAKgI,OAAShI,KAAKgI,Q,mCAOD,IAAdhI,KAAKY,MACPZ,KAAK8E,WAAY,EACjB9E,KAAKiC,MAAQjC,KAAK4E,WAElB5E,KAAK8E,WAAY,EACjB9E,KAAKiC,MAAQjC,KAAK2E,a,uCAOpB3E,KAAKW,UAAYX,KAAKY,MAAQ,EAAI,QAAU,Y,0MC+TjCqH,E,WA5nCb,aAAc,Y,4FAAA,SAGZjI,KAAKkI,cAAgBlI,KAAKkI,cAAc5I,KAAKU,MAC7CA,KAAKmI,gBAAkBnI,KAAKmI,gBAAgB7I,KAAKU,MACjDA,KAAKoI,eAAiBpI,KAAKoI,eAAe9I,KAAKU,MAC/CA,KAAKqI,kBAAoBrI,KAAKqI,kBAAkB/I,KAAKU,MACrDA,KAAKsI,gBAAkBtI,KAAKsI,gBAAgBhJ,KAAKU,MACjDA,KAAKuI,iBAAmBvI,KAAKuI,iBAAiBjJ,KAAKU,MAEnDA,KAAKwI,2BAA6BxI,KAAKwI,2BAA2BlJ,KAAKU,MACvEA,KAAKyI,iCAAmCzI,KAAKyI,iCAAiCnJ,KAAKU,MACnFA,KAAK0I,0BAA4B1I,KAAK0I,0BAA0BpJ,KAAKU,MACrEA,KAAK2I,gCAAkC3I,KAAK2I,gCAAgCrJ,KAAKU,MAEjFA,KAAK4I,uBAAyB5I,KAAK4I,uBAAuBtJ,KAAKU,MAC/DA,KAAK6I,6BAA+B7I,KAAK6I,6BAA6BvJ,KAAKU,MAE3EA,KAAK8I,wBAA0B9I,KAAK8I,wBAAwBxJ,KAAKU,MACjEA,KAAK+I,8BAAgC/I,KAAK+I,8BAA8BzJ,KAAKU,MAE7EA,KAAKgJ,UAAYhJ,KAAKgJ,UAAU1J,KAAKU,MAErCA,KAAKiJ,aAAejJ,KAAKiJ,aAAa3J,KAAKU,MAE3CA,KAAKkJ,sBAAwB,CAC3BC,EAAG,SAACC,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GACrB,EAAK6F,eAAegB,EAAKhH,IAE3BkH,EAAG,SAACF,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAEjB6G,EAAIhI,KAAO,GACb,EAAKgH,eAAegB,EAAKhH,IAG7BmH,EAAG,SAACH,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAErB,EAAK8F,kBAAkBe,EAAKhH,EAAIG,IAElCiH,EAAG,SAACJ,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAErB,EAAK+F,gBAAgBc,EAAKjH,IAE5BsH,EAAG,SAACL,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAErB,EAAKgG,iBAAiBa,EAAKjH,EAAII,IAEjCmH,EAAG,SAACN,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAIjB,EAAK6F,eAAegB,EAAKhH,IAI3B,EAAKkG,gBAAgBc,EAAKjH,IAG9BwH,EAAG,SAACP,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAIjB,EAAK6F,eAAegB,EAAKhH,IAG3B,EAAKmG,iBAAiBa,EAAKjH,EAAII,IAGnCqH,EAAG,SAACR,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAIjB,EAAK8F,kBAAkBe,EAAKhH,EAAIG,IAGlC,EAAK+F,gBAAgBc,EAAKjH,IAG9B0H,EAAG,SAACT,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAGjB,EAAK8F,kBAAkBe,EAAKhH,EAAIG,IAGlC,EAAKgG,iBAAiBa,EAAKjH,IAG/B2H,GAAI,SAACV,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAIlB,EAAK6F,eAAegB,EAAKhH,IAG3B,EAAKiG,kBAAkBe,EAAKhH,EAAIG,IAGpCwH,GAAI,SAACX,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAKtB,GAAI6G,EAAIhI,KAAO,EAAG,CAChB,GAAI,EAAKgH,eAAegB,EAAKhH,GAC3B,OACK,GAAI,EAAKiG,kBAAkBe,EAAKhH,EAAIG,GACzC,OAEA,EAAK+F,gBAAgBc,EAAKjH,KAIhC6H,GAAI,SAACZ,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAIlB,EAAK6F,eAAegB,EAAKhH,IAElB,EAAKmG,iBAAiBa,EAAKjH,EAAII,IAGxC,EAAK+F,gBAAgBc,EAAKjH,IAG9B8H,GAAI,SAACb,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAIlB,EAAK6F,eAAegB,EAAKhH,IAElB,EAAKiG,kBAAkBe,EAAKhH,EAAIG,IAGzC,EAAKgG,iBAAiBa,EAAKjH,EAAII,IAGnC2H,GAAI,SAACd,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAIlB,EAAK8F,kBAAkBe,EAAKhH,EAAIG,IAEzB,EAAKgG,iBAAiBa,EAAKjH,EAAII,IAGxC,EAAK+F,gBAAgBc,EAAKjH,IAG9BgI,GAAI,SAACf,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAElB6G,EAAIhI,KAAO,GAEb,EAAKgH,eAAegB,EAAKhH,EAAIG,EAAW,IAG5C6H,GAAI,SAAChB,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAEtB,EAAK8F,kBAAkBe,EAAKhH,EAAIG,EAAW,IAE7C8H,GAAI,SAACjB,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAEtB,EAAK+F,gBAAgBc,EAAKjH,EAAII,EAAW,IAE3C+H,GAAI,SAAClB,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAEtB,EAAKgG,iBAAiBa,EAAKjH,EAAII,EAAW,IAE5CgI,GAAI,SAACnB,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAIlB,EAAK6F,eAAegB,EAAKhH,EAAIG,EAAW,IAG1C,EAAK+F,gBAAgBc,EAAKjH,IAG9BqI,GAAI,SAACpB,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAIlB,EAAK6F,eAAegB,EAAKhH,EAAIG,EAAW,IAG1C,EAAKgG,iBAAiBa,EAAKjH,EAAII,IAGnCkI,GAAI,SAACrB,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAIlB,EAAK8F,kBAAkBe,EAAKhH,EAAIG,EAAW,IAG7C,EAAK+F,gBAAgBc,EAAKjH,IAG9BuI,GAAI,SAACtB,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAIlB,EAAK8F,kBAAkBe,EAAKhH,EAAIG,EAAW,IAG7C,EAAKgG,iBAAiBa,EAAKjH,EAAII,IAGnCoI,GAAI,SAACvB,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAElB,EAAK+F,gBAAgBc,EAAKjH,EAAII,EAAW,IAElC6G,EAAIjH,EAAIiH,EAAInH,MAAQE,EAAII,EAAW,GAC5C,EAAK6F,eAAegB,EAAKhH,IAG7BwI,GAAI,SAACxB,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAElB,EAAKgG,iBAAiBa,EAAKjH,EAAII,EAAW,KAEnC6G,EAAIjH,EAAIA,EAAII,EAAW,GAAK6G,EAAIjH,EAAI,EAAKF,MAAQE,IAC1D,EAAKiG,eAAegB,EAAKhH,IAG7ByI,GAAI,SAACzB,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAElB,EAAK+F,gBAAgBc,EAAKjH,EAAII,EAAW,IAElC6G,EAAIjH,EAAIiH,EAAInH,MAAQE,EAAII,EAAW,GAC5C,EAAK8F,kBAAkBe,EAAKhH,EAAIG,IAGpCuI,GAAI,SAAC1B,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAElB,EAAKgG,iBAAiBa,EAAKjH,EAAII,EAAW,IAEnC6G,EAAIjH,EAAIA,EAAII,EAAW,GAChC,EAAK8F,kBAAkBe,EAAKhH,EAAIG,IAGpCwI,GAAI,SAAC3B,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAItB,GAAI6G,EAAIjH,EAAIiH,EAAInH,MAAQE,EAAG,CACzB,GAAI,EAAKmG,gBAAgBc,EAAKjH,EAAII,EAAW,GAC3C,OACK,GACL,EAAK8F,kBAAkBe,EAAKhH,EAAIG,GAChC,OAEA,EAAK6F,eAAegB,EAAKhH,KAI/B4I,GAAI,SAAC5B,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAItB,GAAI6G,EAAIjH,EAAIA,EAAII,EAAU,CACxB,GAAI,EAAKgG,iBAAiBa,EAAKjH,EAAII,EAAW,GAC5C,OACK,GAAI,EAAK8F,kBAAkBe,EAAKhH,EAAIG,GACzC,OAEA,EAAK6F,eAAegB,EAAKhH,KAK/B6I,GAAI,SAAC7B,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAItB,GAAI6G,EAAIjH,EAAIiH,EAAInH,MAAQE,GAAKiH,EAAIhH,EAAIgH,EAAIlH,OAASE,EAAG,CACnD,GAAI,EAAKgG,eAAegB,EAAKhH,EAAIG,EAAW,GAC1C,OAEA,EAAK+F,gBAAgBc,EAAKjH,EAAII,EAAW,KAI/C2I,GAAI,SAAC9B,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAGtB,GAAI6G,EAAIjH,EAAIA,EAAKI,EAAW,GAAM6G,EAAIhH,EAAIgH,EAAIlH,OAASE,EAAKG,EAAW,EAAI,CAEzE,GAAI,EAAK6F,eAAegB,EAAKhH,EAAIG,EAAW,GAC1C,OAEA,EAAKgG,iBAAiBa,EAAKjH,EAAII,EAAW,KAIhD4I,GAAI,SAAC/B,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAItB,GAAI6G,EAAIjH,EAAIA,GAAKiH,EAAIhH,EAAIA,EAAIG,EAAU,CAErC,GAAI,EAAK8F,kBAAkBe,EAAKhH,EAAIG,EAAW,GAC7C,OAEA,EAAK+F,gBAAgBc,EAAKjH,EAAII,EAAW,KAI/C6I,GAAI,SAAChC,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAGtB,GAAI6G,EAAIjH,EAAIA,EAAII,GAAY6G,EAAIhH,EAAIA,EAAIG,EAAU,CAEhD,GAAI,EAAK8F,kBAAkBe,EAAKhH,EAAIG,EAAW,GAC7C,OAEA,EAAKgG,iBAAiBa,EAAKjH,EAAII,EAAW,KAIhD8I,GAAI,SAACjC,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAEpB,EAAK6F,eAAegB,EAAKhH,EAAgB,GAAXG,IAGlC+I,GAAI,SAAClC,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAIlB,EAAK8F,kBAAkBe,EAAKhH,EAAIG,IAGjC,EAAKmG,0BAA0BU,EAAKjH,EAAII,EAAUH,EAAIG,IAI3DgJ,GAAI,SAACnC,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAEtB,EAAKiG,2BAA2BY,EAAKjH,EAAGC,EAAIG,IAE9CiJ,GAAI,SAACpC,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAEtB,EAAKqG,uBAAuBQ,EAAKjH,EAAII,EAAUH,EAAIG,IAErDkJ,GAAI,SAACrC,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAEtB,EAAKuG,wBAAwBM,EAAKjH,EAAGC,EAAIG,IAE3CmJ,GAAI,SAACtC,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAEtB,EAAKqG,uBAAuBQ,EAAKjH,EAAGC,EAAIG,EAAU,KAEpDoJ,GAAI,SAACvC,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAEtB,EAAKuG,wBAAwBM,EAAKjH,EAAGC,EAAIG,EAAUA,EAAW,IAIhEqJ,GAAI,SAACxC,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAItB,EAAKkG,iCAAiCW,EAAKjH,EAAGC,EAAIG,IAEpDsJ,GAAI,SAACzC,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAGtB,EAAKoG,gCAAgCS,EAAKjH,EAAII,EAAUH,EAAIG,IAE9DuJ,GAAI,SAAC1C,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAEtB,EAAKsG,6BAA6BO,EAAKjH,EAAII,EAAUH,EAAIG,IAE3DwJ,GAAI,SAAC3C,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAEtB,EAAKwG,8BAA8BK,EAAKjH,EAAGC,EAAIG,IAEjDyJ,GAAI,SAAC5C,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAEtB,EAAKsG,6BAA6BO,EAAKjH,EAAII,EAAUH,EAAIG,EAAUA,EAAW,IAEhF0J,GAAI,SAAC7C,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAEtB,EAAKwG,8BAA8BK,EAAKjH,EAAGC,EAAIG,EAAUA,EAAW,IAItE2J,GAAI,SAAC9C,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAGlB,EAAK6F,eAAegB,EAAKhH,IAG3B,EAAKuG,gCAAgCS,EAAKjH,EAAGC,EAAIG,IAGrD4J,GAAI,SAAC/C,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAGlB6G,EAAIhI,KAAO,GACT,EAAKgH,eAAegB,EAAKhH,IAI/B,EAAKqG,iCAAiCW,EAAKjH,EAAGC,EAAIG,IAIpD6J,GAAI,SAAChD,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAGlB,EAAK+F,gBAAgBc,EAAKjH,IAG5B,EAAKuG,0BAA0BU,EAAKjH,EAAGC,EAAIG,IAG/C8J,GAAI,SAACjD,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAGlB,EAAKgG,iBAAiBa,EAAKjH,EAAII,IAGjC,EAAKuG,wBAAwBM,EAAKjH,EAAGC,EAAIG,EAAUA,EAAW,IAGlE+J,GAAI,SAAClD,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAGlB,EAAK+F,gBAAgBc,EAAKjH,IAG5B,EAAKyG,uBAAuBQ,EAAKjH,EAAGC,EAAIG,EAAUA,EAAW,IAGjEgK,GAAI,SAACnD,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAGlB,EAAKgG,iBAAiBa,EAAKjH,EAAII,IAGjC,EAAKuG,wBAAwBM,EAAKjH,EAAGC,EAAIG,EAAUA,EAAW,IAKlEiK,GAAI,SAACpD,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAIlB,EAAK6F,eAAegB,EAAKhH,IAElB,EAAKiG,kBAAkBe,EAAKhH,EAAIG,IAEhC,EAAKgG,iBAAiBa,EAAKjH,EAAII,IAGxC,EAAK+F,gBAAgBc,EAAKjH,IAI9BsK,GAAI,SAACrD,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAEtB,OAAI,EAAK6F,eAAegB,EAAKhH,EAAgB,GAAXG,QAChC,OAEA,EAAKgG,iBAAiBa,EAAKjH,EAAII,IAKnCmK,GAAI,SAACtD,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAGxB,GAAI6G,EAAIjH,EAAIiH,EAAInH,MAAQE,EAAKI,EAAW,GAAM6G,EAAIjH,EAAIA,EAAgB,IAAXI,EAEvD,EAAKyG,UAAUI,EAAKjH,EAAGC,EAAGG,QACrB,GAAI,EAAK6F,eAAegB,EAAKhH,GAClC,QAKJuK,GAAI,SAACvD,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAElB,EAAK+F,gBAAgBc,EAAKjH,GACxBiH,aAAe/E,GACjB+E,EAAIhD,OAAO,GAGJ,EAAKiC,kBAAkBe,EAAKhH,EAAIG,EAAW,GAChD6G,aAAe/E,GACjB+E,EAAIhD,OAAO,IAIb,EAAKmC,iBAAiBa,EAAKjH,EAAII,GAC3B6G,aAAe/E,GACjB+E,EAAIhD,OAAO,KAIjBwG,GAAI,SAACxD,EAAKjH,EAAGC,EAAGiH,EAAQ9G,GAEtB,EAAK8F,kBAAkBe,EAAKhH,EAAIG,EAAW,GACvC6G,aAAe/E,GACjB+E,EAAIhD,OAAO,K,6DA+OLrG,EAAQiC,EAAQ6K,GACxB9M,EAAOoC,EAAI,GACbpC,EAAOoC,EAAI,IACXpC,EAAOa,KAAO,GACLb,EAAOoC,EAAIpC,EAAOkC,MAAQD,EAAOC,QAAU4K,IACpD9M,EAAOoC,EAAIH,EAAOC,MAAQlC,EAAOkC,MACjClC,EAAOa,KAAO,GAOZb,EAAOqC,EAAIJ,EAAOE,SAMpBnC,EAAOqC,EAAI,EACXrC,EAAOqG,OAAO,O,gCAIRgD,EAAKjH,EAAGC,GAChBgH,EAAIpI,UAAW,I,wCAGC8L,EAAMC,GAGtB,IAAIC,EAASD,EAAKC,SAGlB,OACEF,EAAK3K,EAAI6K,EAAOnM,OAChBiM,EAAK3K,EAAI2K,EAAK7K,MAAQ+K,EAAOtM,MAC7BoM,EAAK1K,EAAI4K,EAAOC,QAChBH,EAAK1K,EAAI0K,EAAK5K,OAAS8K,EAAOE,MAE9BJ,EAAK1L,MAAS0L,EAAK1L,KAAO,EAC1B0L,EAAKlM,MAASkM,EAAKlM,KAAO,EAE1BkM,EAAK1G,OAAO2G,EAAKpF,QACjBoF,EAAK3G,UAEE,K,mCAME0G,EAAMC,GAEjB,OAAIA,EAAKzH,QAASyH,EAAKxH,MAGrBuH,EAAK3K,EAAI4K,EAAK5K,EAAI4K,EAAK9K,OACvB6K,EAAK3K,EAAI2K,EAAK7K,MAAQ8K,EAAK5K,GAC3B2K,EAAK1K,EAAI2K,EAAK3K,EAAI2K,EAAK7K,QACvB4K,EAAK1K,EAAI0K,EAAK5K,OAAS6K,EAAK3K,IAGxB0K,aAAgBzI,IAAWyI,EAAKzH,OAClCyH,EAAK1L,MAAS0L,EAAK1L,KAAO,EAC1B0L,EAAKlM,MAASkM,EAAKlM,KAAO,EAE1BkM,EAAK1G,OAAO2G,EAAKpF,SACV,GAELmF,aAAgBzF,GAClB0F,EAAK3G,OAAO0G,EAAKnF,QAEboF,EAAK9I,QAAU,GAAkB,SAAb6I,EAAKK,MAC3BJ,EAAKK,QAAU,GAGjBhG,YAAW,WACT0F,EAAK1G,WAEJ,KAEI,QAZT,K,iDAqBuBiH,EAASC,EAAUC,GAE5C,IAAIC,EAAQD,GAAcF,EAAQ7K,YAAc8K,GAChD,GAAID,aAAmBhJ,EACrB,GAAIgJ,EAAQ5L,SAAU,CACpB,GACE4L,EAAQ1K,aAAe4K,GACvBF,EAAQ/K,KAAO+K,EAAQnL,OAASqL,EAMhC,OAJAF,EAAQjM,KAAO,EACfiM,EAAQjL,EAAImL,EAAaF,EAAQnL,OAAS,GAC1CmL,EAAQ5L,UAAW,OACnB4L,EAAQtI,UAAY,GAGtBsI,EAAQjL,EAAIoL,EAAQH,EAAQnL,OAAS,QAC3BmL,EAAQ5L,UAEhB4L,EAAQ7K,YAAc8K,GACtBD,EAAQ1K,aAAe6K,GACvBH,EAAQ/K,KAAO+K,EAAQnL,OAASsL,IAEhCH,EAAQI,IAAM,EAEdJ,EAAQ5L,UAAW,EACnB4L,EAAQtI,UAAY,EAEpBsI,EAAQjL,EAAIoL,EAAQH,EAAQnL,OAAS,IAI3C,GAAImL,aAAmBhG,EAGrB,OAFAgG,EAAQjH,UAED,I,uDAIsBiH,EAASC,EAAUC,GAElD,IAAIC,EAAQD,GAAcF,EAAQ7K,YAAc8K,GAChD,GACED,EAAQ7K,YAAc8K,GACtBD,EAAQ3K,UAAY8K,GACpBH,EAAQ/K,KAAOkL,EACf,CACA,GAAIH,aAAmBhG,EAGrB,OAFAgG,EAAQjH,UAED,EAGTiH,EAAQjL,EAAIoL,EAAQ,O,gDAKEH,EAASK,EAAWH,GAC5C,IAAIC,EAAQD,GAAcG,EAAYL,EAAQ5K,YAC9C,GAAI4K,aAAmBhJ,EACrB,GAAIgJ,EAAQ5L,SAAU,CACpB,GACE4L,EAAQ1K,aAAe4K,GACvBF,EAAQ/K,KAAO+K,EAAQnL,OAASqL,EAOhC,OALAF,EAAQjM,KAAO,EAEfiM,EAAQjL,EAAImL,EAAaF,EAAQnL,OAAS,IAC1CmL,EAAQ5L,UAAW,OACnB4L,EAAQtI,UAAY,GAGtBsI,EAAQjL,EAAIoL,EAAQH,EAAQnL,OAAS,SAC3BmL,EAAQ5L,UAEhB4L,EAAQ5K,WAAaiL,GACrBL,EAAQ1K,aAAe6K,GACvBH,EAAQ/K,KAAO+K,EAAQnL,OAASsL,IAEhCH,EAAQjM,KAAO,EAEfiM,EAAQ5L,UAAW,EACnB4L,EAAQtI,UAAY,EACpBsI,EAAQjL,EAAIoL,EAAQH,EAAQnL,OAAS,KAI3C,GAAImL,aAAmBhG,EAGrB,OAFAgG,EAAQjH,UAED,I,sDAIqBiH,EAASK,EAAWH,GAClD,IAAIC,EAAQD,GAAcG,EAAYL,EAAQ5K,YAC9C,GACE4K,EAAQ5K,WAAaiL,GACrBL,EAAQ3K,UAAY8K,GACpBH,EAAQ/K,KAAOkL,EACf,CACA,GAAIH,aAAmBhG,EAGrB,OAFAgG,EAAQjH,UAED,EAGTiH,EAAQjL,EAAIoL,EAAQ,O,8CASAH,EAASC,EAAUC,GAAsB,IAAVI,EAAU,uDAAH,EAExDH,EAAQD,GAAcI,GAAQN,EAAQ7K,YAAc8K,GAAY,GACpE,GAAID,aAAmBhJ,EACrB,GAAIgJ,EAAQ5L,SAAU,CACpB,GACE4L,EAAQ1K,aAAe4K,GACvBF,EAAQ/K,KAAO+K,EAAQnL,OAASqL,EAKhC,OAHAF,EAAQjL,EAAImL,EAAaF,EAAQnL,OAAS,IAC1CmL,EAAQ5L,UAAW,OACnB4L,EAAQtI,UAAY,GAGtBsI,EAAQjL,EAAIoL,EAAQH,EAAQnL,OAAS,SAC3BmL,EAAQ5L,UAEhB4L,EAAQ7K,YAAc8K,GACtBD,EAAQ1K,aAAe6K,GACvBH,EAAQ/K,KAAO+K,EAAQnL,OAASsL,IAEhCH,EAAQjM,KAAO,EAEfiM,EAAQ5L,UAAW,EACnB4L,EAAQtI,UAAY,EAEpBsI,EAAQjL,EAAIoL,EAAQH,EAAQnL,OAAS,KAI3C,GAAImL,aAAmBhG,EAGrB,OAFAgG,EAAQjH,UAED,I,oDAImBiH,EAASC,EAAUC,GAAsB,IAAVI,EAAU,uDAAH,EAE9DH,EAAQD,GAAcI,GAAQN,EAAQ7K,YAAc8K,GAAY,GACpE,GACED,EAAQ7K,YAAc8K,GACtBD,EAAQ3K,UAAY8K,GACpBH,EAAQ/K,KAAOkL,EACf,CACA,GAAIH,aAAmBhG,EAGrB,OAFAgG,EAAQjH,UAED,EAETiH,EAAQjL,EAAIoL,EAAQ,O,6CAMDH,EAASK,EAAWH,GAAsB,IAAVI,EAAU,uDAAH,EACxDH,EAAQD,GAAcI,GAAQD,EAAYL,EAAQ5K,YAAc,GACpE,GAAI4K,aAAmBhJ,EACrB,GAAIgJ,EAAQ5L,SAAU,CACpB,GACE4L,EAAQ1K,aAAe4K,GACvBF,EAAQ/K,KAAO+K,EAAQnL,OAASqL,EAOhC,OALAF,EAAQjM,KAAO,EAEfiM,EAAQjL,EAAImL,EAAaF,EAAQnL,OAAS,IAC1CmL,EAAQ5L,UAAW,OACnB4L,EAAQtI,UAAY,GAGtBsI,EAAQjL,EAAIoL,EAAQH,EAAQnL,OAAS,SAC3BmL,EAAQ5L,UAEhB4L,EAAQ5K,WAAaiL,GACrBL,EAAQ1K,aAAe6K,GACvBH,EAAQ/K,KAAO+K,EAAQnL,OAASsL,IAEhCH,EAAQjM,KAAO,EAEfiM,EAAQ5L,UAAW,EACnB4L,EAAQtI,UAAY,EACpBsI,EAAQjL,EAAIoL,EAAQH,EAAQnL,OAAS,KAI3C,GAAImL,aAAmBhG,EAGrB,OAFAgG,EAAQjH,UAED,I,mDAIkBiH,EAASK,EAAWH,GAAsB,IAAVI,EAAU,uDAAH,EAC9DH,EAAQD,GAAcI,GAAQD,EAAYL,EAAQ5K,YAAc,GACpE,GACE4K,EAAQ5K,WAAaiL,GACrBL,EAAQ3K,UAAY8K,GACpBH,EAAQ/K,KAAOkL,EACf,CACA,GAAIH,aAAmBhG,EAGrB,OAFAgG,EAAQjH,UAED,EAETiH,EAAQjL,EAAIoL,EAAQ,O,qCAQTH,EAASO,GACtB,OACEP,EAAQ1K,aAAeiL,GACvBP,EAAQ/K,KAAO+K,EAAQnL,OAAS0L,EAE5BP,aAAmBhG,GACrBgG,EAAQjH,UAED,IAETiH,EAAQjM,KAAO,EACfiM,EAAQjL,EAAIwL,EAAUP,EAAQnL,OAAS,GACnCmL,aAAmBhJ,IACrBgJ,EAAQ5L,UAAW,EACnB4L,EAAQtI,UAAY,IAEf,IAEHsI,aAAmBhJ,IACrBgJ,EAAQ5L,UAAW,IAGhB,K,wCAGS4L,EAASE,GACzB,OACEF,EAAQ3K,UAAY6K,GACpBF,EAAQ/K,KAAO+K,EAAQnL,OAASqL,IAE5BF,aAAmBhG,GACrBgG,EAAQjH,UACD,IAETiH,EAAQjL,EAAImL,EAAa,GACzBF,EAAQjM,KAAO,GACR,M,uCAKMiM,EAASK,GACxB,OACEL,EAAQ5K,WAAaiL,GACrBL,EAAQhL,KAAOgL,EAAQpL,MAAQyL,IAE3BL,aAAmBhG,GACrBgG,EAAQjH,UACD,IAETiH,EAAQlL,EAAIuL,EAAY,IAMjB,M,sCAKKL,EAASC,GACvB,OAAID,EAAQ7K,YAAc8K,GAAYD,EAAQhL,KAAOiL,IAC/CD,aAAmBhG,GACrBgG,EAAQjH,UACD,IAETiH,EAAQlL,EAAImL,EAAWD,EAAQpL,MAAQ,IAKhC,M,sCAKK4L,EAAY1L,EAAGC,EAAGiH,EAAQ9G,GACnC8G,GAAWrJ,KAAKkJ,sBAAsBG,IAC3CrJ,KAAKkJ,sBAAsBG,GAAQwE,EAAY1L,EAAGC,EAAGiH,EAAQ9G,Q,0MC/kClDuL,E,WA7CX,WAAYjM,I,4FAAS,SACjB7B,KAAK+N,MAAQ3K,SAASC,cAAc,SACpCrD,KAAK+N,MAAMzK,IAAMzB,EAAQyB,IACzBtD,KAAK+N,MAAMxK,GAAK1B,EAAQmM,OACxBhO,KAAK+N,MAAMvK,aAAa,UAAW,QACnCxD,KAAK+N,MAAMvK,aAAa,WAAY,QACpCxD,KAAK+N,MAAMvK,aAAa,QAAS,SAEjCxD,KAAK+N,MAAME,OAAS,GAEpBjO,KAAK+N,MAAMtK,MAAMC,QAAU,OAE3B1D,KAAK2D,KAAO3D,KAAK2D,KAAKrE,KAAKU,MAC3BA,KAAK4D,MAAQ5D,KAAK4D,MAAMtE,KAAKU,MAC7BA,KAAK6D,KAAO7D,KAAK6D,KAAKvE,KAAKU,M,qDAgB3B,MAAO,CACHsD,IAAK,+BACLC,GAAI,U,8BAIR,MAAO,CACHD,IAAK,2BACLC,GAAI,a,gCApBRvD,KAAK+N,MAAMpK,S,8BAIX3D,KAAK+N,MAAMnK,U,6BAIX5D,KAAK+N,MAAMjK,OAAS9D,KAAK+N,MAAMjK,W,yvCCvBvC,IAiceuD,E,YAzbb,WAAYxF,GAAS,M,IAAA,O,4FAAA,S,EACnB,U,EAAA,eAAMA,K,8CACD+E,KAAO,EAAKnC,UAAU5C,EAAQ8E,OAEnC,EAAK/F,KAAOiB,EAAQjB,KACpB,EAAKQ,KAAOS,EAAQT,KACpB,EAAKiB,KAAO,EAAKF,EACjB,EAAKG,KAAO,EAAKF,EACjB,EAAK+K,IAAMtL,EAAQsL,KAAO,QAC1B,EAAKxF,OAAS9F,EAAQ8F,OACtB,EAAKuG,UAAW,EAChB,EAAKC,cAAgBtM,EAAQsM,eAAiB,EAC9C,EAAKC,UAAYvM,EAAQwM,OAEzB,EAAKC,YAAczM,EAAQyM,YAC3B,EAAKC,YAAc1M,EAAQ0M,YAC3B,EAAKC,WAAa3M,EAAQ2M,WAC1B,EAAKC,YAAc5M,EAAQ4M,YAC3B,EAAKC,SAAW7M,EAAQ6M,SAExB,EAAKC,YAAc9M,EAAQ8M,YAC3B,EAAKC,aAAe/M,EAAQ+M,aAC5B,EAAKC,iBAAmBhN,EAAQgN,kBAAoB,EAAKP,YACzD,EAAKQ,kBAAoBjN,EAAQiN,mBAAqB,EAAKP,YAC3D,EAAKQ,aAAelN,EAAQkN,cAAgB,IAC5C,EAAKC,aAAenN,EAAQmN,cAAgB,IAE5C,EAAKC,WAAapN,EAAQoN,YAAc,IAIxC,EAAK1M,SAAW,GAEhB,EAAK2M,SAAW,IAAIjH,EACpB,EAAK5C,OAAQ,EAEb,EAAKmC,YAAc,IAAIsG,EAAMA,EAAMvM,QAKnC,EAAKkD,UAAY,EAAKA,UAAUnF,KAAf,MACjB,EAAKsD,cAAgB,EAAKA,cAActD,KAAnB,MACrB,EAAKuD,eAAiB,EAAKA,eAAevD,KAApB,MACtB,EAAKwD,iBAAmB,EAAKA,iBAAiBxD,KAAtB,MACxB,EAAKyD,kBAAoB,EAAKA,kBAAkBzD,KAAvB,MACzB,EAAK8G,OAAS,EAAKA,OAAO9G,KAAZ,MACd,EAAK6P,WAAa,EAAKA,WAAW7P,KAAhB,MAClB,EAAK8P,iBAAmB,EAAKA,iBAAiB9P,KAAtB,MACxB,EAAK+P,eAAiB,EAAKA,eAAe/P,KAApB,MACtB,EAAKgQ,WAAa,EAAKA,WAAWhQ,KAAhB,MAGlB,EAAK6P,aArDc,E,+RAoSLrN,EAAKlB,EAAMQ,EAAM+L,GAC/B,MAAO,CACLrL,IAAKA,EACLG,MAAO,GACPC,OAAQ,GACRtB,KAAMA,EACNQ,KAAMA,EACN+L,IAAKA,EAELmB,YAAa,GACbC,YAAa,IACbC,WAAY,GACZC,YAAa,GACbC,SAAU,EACV/H,MAAO,wBACP0H,OAAQ,qBACRM,YAAa,GACbC,aAAc,GACdG,aAAc,IACdC,aAAc,IACdH,iBAAkB,GAClBC,kBAAmB,GACnBnH,OAAQ,M,mCAIQ7F,EAAKlB,EAAMQ,EAAM+L,GACnC,MAAO,CACLrL,IAAKA,EACLG,MAAO,GACPC,OAAQ,GACRtB,KAAMA,EACNQ,KAAMA,EACN+L,IAAKA,EACLkB,OAAQ,qBAERC,YAAa,GACbC,YAAa,IACbC,WAAY,GACZC,YAAa,GACbC,SAAU,EACV/H,MAAO,wBACPkI,iBAAkB,GAClBC,kBAAmB,GACnBH,YAAa,GACbC,aAAc,GACdG,aAAc,IACdC,aAAc,IACdrH,OAAQ,M,mCAIQ7F,EAAKlB,EAAMQ,EAAM+L,GACnC,MAAO,CACLrL,IAAKA,EACLG,MAAO,GACPC,OAAQ,GACRtB,KAAMA,EACNQ,KAAMA,EACN+L,IAAKA,EAELmB,YAAa,GACbC,YAAa,IACbC,WAAY,GACZC,YAAa,GACbC,SAAU,EACV/H,MAAO,6BACP0H,OAAQ,0BACRM,YAAa,GACbC,aAAc,GACdG,aAAc,IACdC,aAAc,IACdH,iBAAkB,GAClBC,kBAAmB,GACnBnH,OAAQ,M,uCAIY7F,EAAKlB,EAAMQ,EAAM+L,GACvC,MAAO,CACLrL,IAAKA,EACLG,MAAO,GACPC,OAAQ,GACRtB,KAAMA,EACNQ,KAAMA,EACN+L,IAAKA,EACLkB,OAAQ,0BAERC,YAAa,GACbC,YAAa,IACbC,WAAY,GACZC,YAAa,GACbC,SAAU,EACV/H,MAAO,6BACPkI,iBAAkB,GAClBC,kBAAmB,GACnBH,YAAa,GACbC,aAAc,GACdG,aAAc,IACdC,aAAc,IACdrH,OAAQ,M,iCAIM7F,EAAKlB,EAAMQ,EAAM+L,GACjC,MAAO,CACLrL,IAAKA,EACLG,MAAO,GACPC,OAAQ,GACRtB,KAAMA,EACNQ,KAAMA,EACN+L,IAAKA,EACLmB,YAAa,IACbC,YAAa,IACbC,WAAY,GACZC,YAAa,GACbC,SAAU,EACV/H,MAAO,sBACP0H,OAAQ,qBACR1G,OAAQ,M,mCAIQ7F,GAAwC,IAAnClB,EAAmC,uDAA5B,EAAGQ,EAAyB,uDAAlB,EACxC,OAD0D,wDACnD,CACLU,IAAKA,EACLG,MAAO,KACPC,OAAQ,GACRtB,KAAMA,EACNQ,KAAMA,EACN+L,IAAK,KACLmB,YAAa,EACbC,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,SAAU,EACV/H,MAAO,6BACP0H,OAAQ,6BACRF,cAAe,IACfQ,YAAa,IACbC,aAAc,IACdC,iBAAkB,IAClBC,kBAAmB,IACnBG,WAAY,IACZtH,OAAQ,Q,kCA3XV,MAAO,CACLjH,KAAMV,KAAKmC,EACXtB,MAAOb,KAAKmC,EAAKnC,KAAKiC,MACtBiL,IAAKlN,KAAKoC,EACV6K,OAAQjN,KAAKoC,EAAKpC,KAAKkC,U,gCAIjByE,GACR,IAAIC,EAAO,IAAIzC,MAEf,OADAyC,EAAKtD,IAAMqD,EACJC,I,sCAMP,MAAO,CAFC5D,KAAKC,MAAMjD,KAAKyC,WAAazC,KAAKuC,UAClCS,KAAKC,MAAMjD,KAAK0C,UAAY1C,KAAKuC,a,uCAOzC,MAAO,CAFCS,KAAKC,MAAMjD,KAAKwC,YAAcxC,KAAKuC,UACnCS,KAAKC,MAAMjD,KAAK0C,UAAY1C,KAAKuC,a,yCAMzC,MAAO,CAFCS,KAAKC,MAAMjD,KAAKyC,WAAazC,KAAKuC,UAClCS,KAAKC,MAAMjD,KAAK2C,aAAe3C,KAAKuC,a,0CAM5C,MAAO,CAFCS,KAAKC,MAAMjD,KAAKwC,YAAcxC,KAAKuC,UACnCS,KAAKC,MAAMjD,KAAK2C,aAAe3C,KAAKuC,a,6BAIvCT,GAAK,WAGR9B,KAAK4G,KAAKtD,IAAMtD,KAAKoO,UACrBpO,KAAKkO,UAAW,EAEhBlO,KAAKY,KAAO,EACZZ,KAAKoB,KAAO,EAGZpB,KAAKiP,WAAa7H,YAAW,WAC3B,EAAK/B,OAAQ,IAEZ,O,mCAMM,WACXrF,KAAKiP,WAAa7H,YAAW,WAC3B,EAAK/B,OAAQ,IACZ,O,sCAKH,IAAIgE,EACA6D,EACAD,EACApM,EACAH,EAGJ,GAAiB,SAAbV,KAAKmN,IAAgB,SACTnN,KAAK4C,gBADI,GACtBlC,EADsB,KAChBwM,EADgB,KAEvB7D,EAASrJ,KAAKuP,YAJL,GAIiBrC,EAAaxM,GACvCV,KAAKkP,SAAS/G,gBACZnI,KACAU,EAAOV,KAAKuC,SACZ2K,EAAMlN,KAAKuC,SACX8G,GAPqB,QAUNrJ,KAAK8C,mBAVC,GAUtBpC,EAVsB,KAUhBuM,EAVgB,KAWvB5D,EAASrJ,KAAKuP,YAbL,GAaiBtC,EAAgBvM,GAC1CV,KAAKkP,SAAS/G,gBACZnI,KACAU,EAAOV,KAAKuC,SACZ0K,EAASjN,KAAKuC,SACd8G,GAIJ,GAAiB,UAAbrJ,KAAKmN,IAAiB,SACTnN,KAAK6C,iBADI,GACvBhC,EADuB,KAChBqM,EADgB,KAExB7D,EAASrJ,KAAKuP,YAxBL,GAwBiBrC,EAAarM,GACvCb,KAAKkP,SAAS/G,gBACZnI,KAAKD,OACLc,EAAQb,KAAKuC,SACb2K,EAAMlN,KAAKuC,SACX8G,GAPsB,QAUNrJ,KAAK+C,oBAVC,GAUvBlC,EAVuB,KAUhBoM,EAVgB,KAWxB5D,EAASrJ,KAAKuP,YAjCL,GAiCiBtC,EAAgBpM,GAE1Cb,KAAKkP,SAAS/G,gBACZnI,KAAKD,OACLc,EAAQb,KAAKuC,SACb0K,EAASjN,KAAKuC,SACd8G,M,yCAQJrJ,KAAKqC,KAAOrC,KAAKmC,EACjBnC,KAAKsC,KAAOtC,KAAKoC,EAEjBpC,KAAKmC,GAAKnC,KAAKY,KACfZ,KAAKoC,GAAKpC,KAAKoB,O,qCAGFW,EAAKiD,GACdhF,KAAKwP,MAELxP,KAAKkO,SACPlO,KAAKsP,WAAWvN,EAAKiD,IAIvBhF,KAAKoP,mBACY,OAAbpP,KAAKmN,KACPpL,EAAI+E,MAAM,GAAI,GAEd/E,EAAI8E,UACF7G,KAAK4G,KACJ5B,EAAahF,KAAK0O,SAAY,GAA2C,IAAnC1J,EAAahF,KAAK0O,SAAY,GACrE1O,KAAKuO,YACLvO,KAAKwO,WACLxO,KAAKyO,YACLzO,KAAKmC,GAAInC,KAAKoC,EAAIpC,KAAKkC,OACvBlC,KAAKiC,MAAOjC,KAAKkC,QAEnBH,EAAI+E,MAAM,GAAI,IAGQ,SAAb9G,KAAKmN,IAEdpL,EAAI8E,UACF7G,KAAK4G,KACJ5B,EAAahF,KAAK0O,SAAY,GAA2C,IAAnC1J,EAAahF,KAAK0O,SAAY,GACrE1O,KAAKuO,YACLvO,KAAKwO,WACLxO,KAAKyO,YACLzO,KAAKmC,EAAGnC,KAAKoC,EACbpC,KAAKiC,MAAOjC,KAAKkC,QAIG,UAAblC,KAAKmN,IACdpL,EAAI8E,UACF7G,KAAK4G,KACJ5B,EAAahF,KAAK0O,SAAY1O,KAAKwO,WAAaxO,KAAKsO,YACtDtO,KAAKuO,YACLvO,KAAKwO,WACLxO,KAAKyO,YACLzO,KAAKmC,EAAGnC,KAAKoC,EACbpC,KAAKiC,MAAOjC,KAAKkC,SAGnBH,EAAI+E,OAAO,EAAG,GAEd/E,EAAI8E,UACF7G,KAAK4G,KACJ5B,EAAahF,KAAK0O,SAAY1O,KAAKwO,WAAaxO,KAAKsO,YACtDtO,KAAKuO,YACLvO,KAAKwO,WACLxO,KAAKyO,aACJzO,KAAKmC,EAAEnC,KAAKwO,WAAYxO,KAAKoC,EAC9BpC,KAAKiC,MAAOjC,KAAKkC,QAEnBH,EAAI+E,OAAO,EAAG,Q,iCAKP/E,EAAKiD,GACG,OAAbhF,KAAKmN,IACPpL,EAAI8E,UACF7G,KAAK4G,KACL5G,KAAK+O,aACL/O,KAAKgP,aACLhP,KAAK6O,iBACL7O,KAAK8O,kBACL9O,KAAKmC,EAAKnC,KAAK6O,iBAAmB,EAAI7O,KAAKoC,EAAKpC,KAAK8O,kBAAoB,EACzE9O,KAAK2O,YAAa3O,KAAK4O,cAIH,SAAb5O,KAAKmN,IAEdpL,EAAI8E,UACF7G,KAAK4G,KACL5G,KAAK+O,aACL/O,KAAKgP,aACLhP,KAAK6O,iBACL7O,KAAK8O,kBACL9O,KAAKmC,EAAKnC,KAAK6O,iBAAmB,EAAI7O,KAAKoC,EAAIpC,KAAKkC,OAAUlC,KAAK8O,kBAAoB,EACvF9O,KAAK2O,YAAa3O,KAAK4O,eAIhB5O,KAAKmN,IACdpL,EAAI8E,UACF7G,KAAK4G,KACL5G,KAAK+O,aACL/O,KAAKgP,aACLhP,KAAK6O,iBACL7O,KAAK8O,kBACL9O,KAAKmC,EAAInC,KAAKiC,MAAQ,EAAGjC,KAAKoC,EAAKpC,KAAK8O,kBAAoB,EAC5D9O,KAAK2O,YAAa3O,KAAK4O,oB,8BAtRNhN,G,muBCPzB,IA6Me6N,E,YAtMb,WAAY5N,GAAS,M,IAAA,O,4FAAA,S,EACnB,U,EAAA,eAAMA,K,8CACDjB,KAAQiB,EAAQjB,KAAQiB,EAAQjB,KAAO,EAC5C,EAAKQ,KAAQS,EAAQT,KAAQS,EAAQT,KAAO,EAC5C,EAAKsO,MAAQ,EAAKjL,UAAU5C,EAAQ8E,OACpC,EAAK+H,SAAW7M,EAAQ6M,SACxB,EAAKvB,IAAMtL,EAAQsL,KAAO,QAC1B,EAAKmB,YAAc,GACnB,EAAKC,YAAc,IACnB,EAAKC,WAAa,IAClB,EAAKC,YAAc,GACnB,EAAKkB,YAAc,GACnB,EAAKrK,OAAQ,EACb,EAAKC,MAAO,EACZ,EAAKtB,OAASpC,EAAQoC,OACtB,EAAK0D,OAAS9F,EAAQ8F,OACtB,EAAKtC,OAAQ,EAGb,EAAKe,OAAS,EAAKA,OAAO9G,KAAZ,MACd,EAAKiH,SAAW,EAAKA,SAASjH,KAAd,MAChB,EAAKsQ,QAAU,EAAKA,QAAQtQ,KAAb,MACf,EAAKuQ,QAAU,EAAKA,QAAQvQ,KAAb,MAEf,EAAKmF,UAAY,EAAKA,UAAUnF,KAAf,MACjB,EAAKwQ,UAAY,EAAKA,UAAUxQ,KAAf,MACjB,EAAKyQ,UAAY,EAAKA,UAAUzQ,KAAf,MACjB,EAAK0Q,WAAa,EAAKA,WAAW1Q,KAAhB,MA3BC,E,iSAmKHwC,GAChB,MAAO,CACLzD,KAAM,aACNsI,MAAO,sBACP+H,SAAU,EACV5M,IAAKA,EACLG,MAAO,IACPC,OAAQ,IACRtB,KAAM,EACNuM,IAAK,QACLlJ,OAAQ,IACR0D,OAAQ,Q,mCA9IQ,IAAZxF,EAAY,uDAARnC,KAAKmC,EACf,OAAOA,EAAKnC,KAAKiC,MAAM,I,gCAGL,IAAZG,EAAY,uDAARpC,KAAKoC,EACf,OAAOA,EAAKpC,KAAKkC,OAAO,I,gCAKhByE,GACR,IAAI+I,EAAQ,IAAIvL,MAEhB,OADAuL,EAAMpM,IAAMqD,EACL+I,I,+BAGW,WAAb/H,EAAa,uDAAJ,GACT3H,KAAKqF,QACRrF,KAAKqF,OAAQ,EACbrF,KAAK4H,YAAcR,YAAW,WAC5B,EAAK/B,OAAQ,IACZ,KACHrF,KAAKiE,QAAU0D,K,iCAIR,WACL3H,KAAKiE,QAAU,IACjBjE,KAAKsF,OAAQ,EACbtF,KAAK2H,OAAS,EACd3H,KAAKY,KAAO,EACZZ,KAAKoB,KAAO,EACZgG,YAAW,WACT,EAAK7B,MAAO,IACX,Q,gCAKGxD,EAAKiD,GACbhF,KAAKuG,YACAvG,KAAKqF,OAASrF,KAAKsF,QAAUN,EAAa,GAAM,IAEpC,SAAbhF,KAAKmN,IACPpL,EAAI8E,UACF7G,KAAK0P,MACJ1K,EAAahF,KAAK0O,SAAY1O,KAAKwO,WAAaxO,KAAKsO,YACtDtO,KAAKuO,YACLvO,KAAKwO,WACLxO,KAAKyO,YACLzO,KAAKmC,EAAGnC,KAAKoC,EACbpC,KAAKiC,MAAOjC,KAAKkC,SAGnBH,EAAI+E,OAAO,EAAG,GACd/E,EAAI8E,UACF7G,KAAK0P,MACJ1K,EAAahF,KAAK0O,SAAY1O,KAAKwO,WAAaxO,KAAKsO,YACtDtO,KAAKuO,YACLvO,KAAKwO,WACLxO,KAAKyO,aACJzO,KAAKmC,EAAEnC,KAAKiC,MAAOjC,KAAKoC,EACzBpC,KAAKiC,MAAOjC,KAAKkC,QAEnBH,EAAI+E,OAAO,EAAG,O,kCAOhB,GAA6C,IAAzCtI,OAAOyI,KAAKjH,KAAK2P,aAAazI,OAAlC,CAGA,IADA,IAAI7H,EACKvB,EAAI,EAAGA,GAAK,EAAGA,IACtB,IAAKkC,KAAK2P,YAAY7R,GAAI,CACxBuB,EAAMvB,EACN,MAIa,SAAbkC,KAAKmN,IAEPnN,KAAK2P,YAAYtQ,GAAO,IAAIgI,EAC1BA,EAAW4I,WACT,CAACjQ,KAAKyC,WAAa,GACnBzC,KAAK2C,aAAe,KACnB,EAAG,EAAG,SAGX3C,KAAK2P,YAAYtQ,GAAO,IAAIgI,EAC1BA,EAAW4I,WACT,CAACjQ,KAAKwC,YAAc,GACpBxC,KAAK2C,aAAe,IACpB,EAAG,EAAG,a,mCAUD,WACX3C,KAAKkQ,eAAiBpI,aAAY,WAChC,EAAKiI,cAEJ,O,2BAQA/N,GACHhC,KAAKqC,KAAOrC,KAAKmC,EACjBnC,KAAKmC,GAAKnC,KAAKY,MAGVZ,KAAKmC,EAAKnC,KAAKiC,MAAQ,EAAM,GAAKjC,KAAKmC,EAAKnC,KAAKiC,MAAQ,EAAKD,EAAOC,SACxEjC,KAAKY,OAAS,EACdZ,KAAKmN,IAAoB,UAAbnN,KAAKmN,IAAmB,OAAS,W,6BAuB1CL,EAAMC,GAEX,GAAID,EAAK1K,EAAI2K,EAAK3K,EAAI2K,EAAK7K,QAAU4K,EAAK1K,EAAI2K,EAAK3K,EAAK2K,EAAK7K,OAAS,GACpE,GAAkB,UAAb6K,EAAKI,KAAmBL,EAAK3K,EAAI4K,EAAK5K,EAAI4K,EAAK9K,OAAS6K,EAAK3K,EAAI2K,EAAK7K,MAAQ8K,EAAK5K,EAAK4K,EAAK9K,MAAQ,GAC1F,SAAb8K,EAAKI,KAAkBL,EAAK3K,EAAI4K,EAAK5K,EAAK4K,EAAK9K,OAAS,EAAI,IAAO6K,EAAK3K,EAAI2K,EAAK7K,MAAQ8K,EAAK5K,EAC/F,OAAO,OAGJ,IAAK2K,EAAK1K,EAAK2K,EAAK7K,OAAS,GAAM4K,EAAK1K,EAAI2K,EAAK3K,GAAM0K,EAAK1K,EAAI0K,EAAK5K,OAAS6K,EAAK3K,IACpF0K,EAAK3K,EAAI4K,EAAK5K,EAAI4K,EAAK9K,OAAS6K,EAAK3K,EAAI2K,EAAK7K,MAAQ8K,EAAK5K,EAE7D,OAAO,EAIX,OAAO,O,8BAlMSP,G,muBCJpB,IA+KeuO,E,YAxKb,WAAYtO,GAAS,M,IAAA,O,4FAAA,S,EACnB,U,EAAA,eAAMA,K,8CACDjB,KAAOiB,EAAQjB,MAAQ,EAC5B,EAAKQ,KAAO,EACZ,EAAKuF,MAAQ9E,EAAQ8E,OAAS,sBAC9B,EAAK+I,MAAQ,EAAKjL,UAAU,EAAKkC,OACjC,EAAK+H,SAAW7M,EAAQ6M,UAAY,EACpC,EAAKJ,YAAczM,EAAQyM,aAAe,GAC1C,EAAKC,YAAc1M,EAAQ0M,aAAe,IAC1C,EAAKC,WAAa3M,EAAQ2M,YAAc,IACxC,EAAKC,YAAc5M,EAAQ4M,aAAe,GAC1C,EAAKkB,YAAc,GACnB,EAAKS,OAASvO,EAAQuO,OAEtB,EAAKhD,OAAS,EAAIvL,EAAQwO,WAE1B,EAAK5L,UAAY,EAAKA,UAAUnF,KAAf,MACjB,EAAKwQ,UAAY,EAAKA,UAAUxQ,KAAf,MACjB,EAAKyQ,UAAY,EAAKA,UAAUzQ,KAAf,MACjB,EAAK0Q,WAAa,EAAKA,WAAW1Q,KAAhB,MAClB,EAAK0Q,aApBc,E,2RAmITlO,EAAKsO,GAA6C,IAArCjD,EAAqC,uDAA/B,QAAS/L,EAAsB,uCAAhBiP,EAAgB,uDAAH,EACzD,MAAO,CACLhS,KAAM,aACNsI,MAAO,sBACP+H,SAAU,EACV5M,IAAKA,EACLG,MAAO,IACPC,OAAQ,IACR+B,OAAQ,IACRrD,KAAe,SAARuM,GAAmB,EAAI,EAC9B/L,KAAMA,GAAQ,EACd+L,IAAKA,EACLxF,OAAQ,GACRyI,OAAQA,EACRC,WAAYA,K,2BAIJvO,EAAKsO,GAAwC,IAAhCjD,EAAgC,uDAA1B,QAASkD,EAAiB,uDAAJ,GACnD,MAAO,CACLhS,KAAM,aACNsI,MAAO,sBACP+H,SAAU,EACV5M,IAAKA,EACLG,MAAO,IACPC,OAAQ,GACR+B,OAAQ,IACRrD,KAAc,SAARuM,GAAkB,EAAI,EAC5BA,IAAKA,EACLxF,OAAQ,GACRyI,OAAQA,EACRC,WAAYA,O,mCAzINtO,EAAKiD,GACbhF,KAAKuG,YACAvG,KAAKqF,OAASrF,KAAKsF,QAAUN,EAAa,GAAM,IAEpC,SAAbhF,KAAKmN,IACPpL,EAAI8E,UACF7G,KAAK0P,MACJ1K,EAAahF,KAAK0O,SAAY1O,KAAKwO,WAAaxO,KAAKsO,YACtDtO,KAAKuO,YACLvO,KAAKwO,WACLxO,KAAKyO,YACLzO,KAAKmC,EAAGnC,KAAKoC,EACbpC,KAAKiC,MAAOjC,KAAKkC,SAGnBH,EAAI+E,OAAO,EAAG,GACd/E,EAAI8E,UACF7G,KAAK0P,MACJ1K,EAAahF,KAAK0O,SAAY1O,KAAKwO,WAAaxO,KAAKsO,YACtDtO,KAAKuO,YACLvO,KAAKwO,WACLxO,KAAKyO,aACJzO,KAAKmC,EAAInC,KAAKiC,MAAOjC,KAAKoC,EAC3BpC,KAAKiC,MAAOjC,KAAKkC,QAEnBH,EAAI+E,OAAO,EAAG,O,kCAOhB,GAA6C,IAAzCtI,OAAOyI,KAAKjH,KAAK2P,aAAazI,OAAlC,CAGA,IADA,IAAI7H,EACKvB,EAAI,EAAGA,GAAK,EAAGA,IACtB,IAAKkC,KAAK2P,YAAY7R,GAAI,CACxBuB,EAAMvB,EACN,MAIa,SAAbkC,KAAKmN,IAEPnN,KAAK2P,YAAYtQ,GAAO,IAAIgI,EAC1BA,EAAW4I,WACT,CAACjQ,KAAKyC,WAA2B,IAAbzC,KAAKiC,MACvBjC,KAAK2C,aAA8B,KAAd3C,KAAKkC,SAC3B,EAAG,EAAG,SAGXlC,KAAK2P,YAAYtQ,GAAO,IAAIgI,EAC1BA,EAAW4I,WACT,CAACjQ,KAAKwC,YAA4B,GAAbxC,KAAKiC,MACxBjC,KAAK2C,aAA8B,KAAd3C,KAAKkC,QAC5B,EAAG,EAAG,a,iCAMH,WACLlC,KAAKiE,QAAU,IACjBjE,KAAKsF,OAAQ,EACbtF,KAAK2H,OAAS,EACd3H,KAAKY,KAAO,EACZZ,KAAKoB,KAAO,EACZ2G,cAAc/H,KAAKkQ,gBACnB9I,YAAW,WACT,EAAK7B,MAAO,IACX,Q,mCAKM,WACXvF,KAAKkQ,eAAiBpI,aAAY,WAEhC,EAAKiI,cAEJ,O,2BAGA/N,GACHhC,KAAKqC,KAAOrC,KAAKmC,EACjBnC,KAAKmC,GAAKnC,KAAKY,KAEXZ,KAAKoQ,QACFpQ,KAAKmC,EAAKnC,KAAKiC,MAAQ,EAAMjC,KAAKoQ,OAAO,IAAMpQ,KAAKmC,EAAKnC,KAAKiC,MAAQ,EAAKjC,KAAKoQ,OAAO,MAC1FpQ,KAAKY,OAAS,EACdZ,KAAKmN,IAAoB,UAAbnN,KAAKmN,IAAmB,OAAS,UAG1CnN,KAAKmC,EAAKnC,KAAKiC,MAAQ,EAAM,GAAKjC,KAAKmC,EAAKnC,KAAKiC,MAAQ,EAAKD,EAAOC,SACxEjC,KAAKY,OAAS,EACdZ,KAAKmN,IAAoB,UAAbnN,KAAKmN,IAAmB,OAAS,c,8BAzH5BsC,G,muBCNzB,IAwLea,E,YAjLb,WAAYzO,GAAS,M,IAAA,O,4FAAA,S,EACnB,U,EAAA,eAAMA,K,8CACDjB,KAAOiB,EAAQjB,MAAQ,EAC5B,EAAKQ,KAAOS,EAAQT,MAAQ,EAC5B,EAAKuF,MAAQ9E,EAAQ8E,MACrB,EAAK+I,MAAQ,EAAKjL,UAAU,EAAKkC,OACjC,EAAK+H,SAAW7M,EAAQ6M,UAAY,EACpC,EAAKJ,YAAc,EACnB,EAAKC,YAAc,EACnB,EAAKC,WAAa3M,EAAQ2M,YAAc,KACxC,EAAKC,YAAc5M,EAAQ4M,aAAe,IAC1C,EAAKzJ,WAAa,EAClB,EAAKoL,OAASvO,EAAQuO,OACtB,EAAKzI,OAAS9F,EAAQ8F,OAEtB,EAAKyF,OAAS,EAAIvL,EAAQwO,WAI1B,EAAKV,YAAc,GAEnB,EAAKG,UAAY,EAAKA,UAAUxQ,KAAf,MACjB,EAAKyQ,UAAY,EAAKA,UAAUzQ,KAAf,MACjB,EAAK0Q,WAAa,EAAKA,WAAW1Q,KAAhB,MAClB,EAAKiR,gBAAkB,EAAKA,gBAAgBjR,KAArB,MAxBJ,E,8RA8HNwC,EAAKsO,GAAwB,IAAhBC,EAAgB,uDAAH,EACvC,MAAO,CACLhS,KAAM,SACNsI,MAAO,sBACP+H,SAAU,GACV5M,IAAKA,EACLG,MAAO,GACPC,OAAQ,IACR+B,OAAQ,IACRrD,KAAM,EACNQ,KAAM,EACNuG,OAAQ,GACRyI,OAAQA,EACRC,WAAYA,K,8BAGDvO,EAAKsO,GAAyB,IAAjBC,EAAiB,uDAAJ,GACvC,MAAO,CACLhS,KAAM,SACNsI,MAAO,sBACP+H,SAAU,GACV5M,IAAKA,EACLG,MAAO,KACPC,OAAQ,GACR+B,OAAQ,GACRrD,KAAM,EACNQ,KAAM,IACNuG,OAAQ,GACRyI,OAAQA,EACRC,WAAYA,K,8BAGDvO,EAAKsO,GAA0B,IAAlBC,EAAkB,uDAAL,GACvC,MAAO,CACLhS,KAAM,SACNsI,MAAO,sBACP+H,SAAU,GACV5M,IAAKA,EACLG,MAAO,KACPC,OAAQ,GACR+B,OAAQ,GACRrD,KAAM,EACNQ,KAAM,IACNgP,OAAQA,EACRzI,OAAQ,GACR0I,WAAYA,O,2CA9IE,WAChBrQ,KAAKwQ,cAAgB1I,aAAY,WAC/B,EAAK9C,eACJ,IAAO,M,gCAGFjD,GAAmC,IAA9BiD,EAA8B,uDAAjBhF,KAAKgF,WAW/B,GAVAhF,KAAKuG,WAELxE,EAAI0O,YACJ1O,EAAI2O,OAAO1Q,KAAK4P,QAAQ5P,KAAK8B,IAAI,IAAK9B,KAAK8B,IAAI,IAC/CC,EAAI4O,OAAO3Q,KAAK4P,QAAQ5P,KAAK8B,IAAI,IAAK9B,KAAK6P,QAAQ7P,KAAKoC,IACxDL,EAAI6O,UAAY,EAChB7O,EAAI8O,YAAc,2BAClB9O,EAAI+O,SACJ/O,EAAIgP,aAEC/Q,KAAKqF,QAASrF,KAAKsF,OAAUN,EAAa,GAAM,EAArD,CAEE,IAAIgM,EAAQhO,KAAKC,MAAM+B,EAAa,KAAOhF,KAAK0O,SAIhD3M,EAAI+E,MAAM,GAAI,GAEd/E,EAAI8E,UACF7G,KAAK0P,MAEJsB,EAAQhR,KAAK0O,SAAY1O,KAAKwO,WAE/BxO,KAAKuO,YACLvO,KAAKwO,WACLxO,KAAKyO,YACLzO,KAAKmC,GAAInC,KAAKoC,EAAIpC,KAAKkC,OACvBlC,KAAKiC,MAAOjC,KAAKkC,QAEnBH,EAAI+E,MAAM,GAAI,M,iCAIP,WACL9G,KAAKiE,QAAU,IACjBjE,KAAKsF,OAAQ,EACbtF,KAAK2H,OAAS,EACd3H,KAAKY,KAAO,EACZZ,KAAKoB,KAAO,EACZ2G,cAAc/H,KAAKkQ,gBACnB9I,YAAW,WACT,EAAK7B,MAAO,IACX,Q,2BA0BFvD,GACHhC,KAAKsC,KAAOtC,KAAKoC,EACjBpC,KAAKoC,GAAKpC,KAAKoB,KAEXpB,KAAKoQ,QACFpQ,KAAKoC,EAAKpC,KAAKkC,OAAWlC,KAAKoQ,OAAO,IAAMpQ,KAAKoC,EAAKpC,KAAKkC,OAAUlC,KAAKoQ,OAAO,MACpFpQ,KAAKoB,OAAS,IAIXpB,KAAKoC,EAAKpC,KAAKkC,OAAW,GAAKlC,KAAKoC,EAAKpC,KAAKkC,OAAUF,EAAOE,UAClElC,KAAKoB,OAAS,Q,8BApHDqO,G,muBCNrB,IAqOewB,E,YA9Nb,WAAYpP,GAAS,M,IAAA,O,4FAAA,S,EACnB,U,EAAA,eAAMA,K,8CACD9B,OAAS8B,EAAQ9B,OACtB,EAAKa,KAAOiB,EAAQjB,MAAQ,EAC5B,EAAKQ,KAAO,EACZ,EAAKuF,MAAQ9E,EAAQ8E,OAAS,wBAC9B,EAAK+I,MAAQ,EAAKjL,UAAU,EAAKkC,OACjC,EAAK+H,SAAW7M,EAAQ6M,UAAY,EACpC,EAAKJ,YAAc,EACnB,EAAKC,YAAc,EACnB,EAAKC,WAAa3M,EAAQ2M,YAAc,GACxC,EAAKC,YAAc5M,EAAQ4M,aAAe,GAC1C,EAAKyC,QAAS,EACd,EAAKC,SAAU,EACf,EAAKxB,YAAc,GACnB,EAAKyB,mBAAqB,GAC1B,EAAKzJ,OAAS,GAEd,EAAKyF,OAAS,GAAKvL,EAAQwO,WAE3B,EAAKP,UAAY,EAAKA,UAAUxQ,KAAf,MACjB,EAAKyQ,UAAY,EAAKA,UAAUzQ,KAAf,MAEjB,EAAK+R,eAAiB,EAAKA,eAAe/R,KAApB,MACtB,EAAK0Q,WAAa,EAAKA,WAAW1Q,KAAhB,MAxBC,E,4RA0KRwC,EAAK/B,GAAwC,IAAhCoN,EAAgC,uDAA1B,QAASkD,EAAiB,uDAAJ,GAEpD,MAAO,CACLhS,KAAM,WACNsI,MAAO,wBACP+H,SAAU,EACV5M,IAAKA,EACLG,MAAO,GACPC,OAAQ,GACR+B,OAAQ,GACRrD,KAAM,EACNuM,IAAKA,EACLpN,OAAQA,EACRsQ,WAAYA,K,4BAGHvO,EAAK/B,GAAuC,IAA/BoN,EAA+B,uDAAzB,QAASkD,EAAgB,uDAAH,EAEpD,MAAO,CACLhS,KAAM,WACNsI,MAAO,wBACP+H,SAAU,EACV5M,IAAKA,EACLG,MAAO,IACPC,OAAQ,IACR+B,OAAQ,IACRrD,KAAM,EACNuM,IAAKA,EACLpN,OAAQA,EACRsQ,WAAYA,K,4BAGHvO,EAAK/B,GAAwC,IAAhCoN,EAAgC,uDAA1B,QAASkD,EAAiB,uDAAJ,GAEpD,MAAO,CACLhS,KAAM,WACNsI,MAAO,wBACP+H,SAAU,EACV5M,IAAKA,EACLG,MAAO,GACPC,OAAQ,GACR+B,OAAQ,GACRrD,KAAM,EACNuM,IAAKA,EACLpN,OAAQA,EACRsQ,WAAYA,O,wCA1LDlO,EAAGC,EAAGkP,GAAQ,WACvBlP,EAAIpC,KAAKoC,EACXpC,KAAKoB,KAAO,EAEZpB,KAAKoB,MAAQ,EAGVgB,EAAIpC,KAAKoC,GAAKA,EAAIpC,KAAKoC,EAAIpC,KAAKkC,SAAYC,EAAInC,KAAKmC,GAAKA,EAAInC,KAAKmC,GACtEnC,KAAKY,KAAqB,SAAbZ,KAAKmN,KAAmB,EAAI,EAEzCnN,KAAKY,KAAqB,SAAbZ,KAAKmN,KAAmB,EAAI,EAGvChL,EAAInC,KAAKmC,GAAkB,SAAbnC,KAAKmN,IAErBnN,KAAKoR,mBAAqBhK,YAAW,WACnC,EAAKxG,KAAO,EACZ,EAAKuM,IAAM,UACV,KACMhL,EAAInC,KAAKmC,GAAkB,UAAbnC,KAAKmN,IAE5BnN,KAAKoR,mBAAqBhK,YAAW,WACnC,EAAKxG,MAAQ,EACb,EAAKuM,IAAM,SAEV,MAEOhL,EAAInC,KAAKmC,GAAkB,UAAbnC,KAAKmN,KAAqBhL,EAAInC,KAAKmC,GAAkB,SAAbnC,KAAKmN,MACrEhG,aAAanH,KAAKoR,sB,6CAICrR,GAAQ,WAC7BC,KAAKuR,oBAAsBzJ,aAAY,WACrC,EAAKuJ,eAAetR,KACnB,K,gCAGKgC,EAAKiD,GACbhF,KAAKuG,aACAvG,KAAKqF,QAASrF,KAAKsF,OAAUN,EAAa,GAAM,KAEpC,UAAbhF,KAAKmN,KACKnK,KAAKC,MAAM+B,EAAa,KAAOhF,KAAK0O,SAGhD3M,EAAI8E,UACF7G,KAAK0P,MACJ1M,KAAKC,MAAM+B,EAAa,KAAOhF,KAAK0O,SAAY1O,KAAKwO,WACtDxO,KAAKuO,YACLvO,KAAKwO,WACLxO,KAAKyO,YACLzO,KAAKmC,EAAGnC,KAAKoC,EACbpC,KAAKiC,MAAOjC,KAAKkC,UAGnBH,EAAI+E,OAAO,EAAG,GACd/E,EAAI8E,UACF7G,KAAK0P,MACJ1K,EAAahF,KAAK0O,SAAY1O,KAAKwO,WAAaxO,KAAKsO,YACtDtO,KAAKuO,YACLvO,KAAKwO,WACLxO,KAAKyO,aACJzO,KAAKmC,EAAInC,KAAKiC,MAAOjC,KAAKoC,EAC3BpC,KAAKiC,MAAOjC,KAAKkC,QAEnBH,EAAI+E,OAAO,EAAG,O,kCAOhB,GAA6C,IAAzCtI,OAAOyI,KAAKjH,KAAK2P,aAAazI,OAAlC,CAGA,IADA,IAAI7H,EACKvB,EAAI,EAAGA,GAAK,EAAGA,IACtB,IAAKkC,KAAK2P,YAAY7R,GAAI,CACxBuB,EAAMvB,EACN,MAIa,SAAbkC,KAAKmN,IAEPnN,KAAK2P,YAAYtQ,GAAO,IAAIgI,EAC1BA,EAAW4I,WACT,CAACjQ,KAAKyC,WAAa,GACnBzC,KAAK2C,aAAe,KACnB,EAAG,EAAG,SAGX3C,KAAK2P,YAAYtQ,GAAO,IAAIgI,EAC1BA,EAAW4I,WACT,CAACjQ,KAAKwC,YAAc,GACpBxC,KAAK2C,aAAe,IACpB,EAAG,EAAG,a,iCAMH,WACL3C,KAAKiE,QAAU,IACjBjE,KAAKsF,OAAQ,EACbtF,KAAK2H,OAAS,EACd3H,KAAKY,KAAO,EACZZ,KAAKoB,KAAO,EACZ2G,cAAc/H,KAAKkQ,gBACnB9I,YAAW,WACT,EAAK7B,MAAO,IACX,Q,2BAaFvD,EAAQjC,GACXC,KAAKsC,KAAOtC,KAAKoC,EACjBpC,KAAKqC,KAAOrC,KAAKmC,EACjBnC,KAAKmC,GAAKnC,KAAKY,KACfZ,KAAKoC,GAAKpC,KAAKoB,KACfpB,KAAKqR,eAAetR,EAAOoC,EAAGpC,EAAOqC,Q,8BA/JlBqN,G,kuCCPvB,IAyPe+B,G,YAjPX,WAAY3P,GAAS,M,IAAA,O,4FAAA,S,EACjB,U,EAAA,gBAAMA,K,gDACD+E,KAAO,EAAKnC,YACjB,EAAKxC,MAAQ,GACb,EAAKC,OAAS,KACd,EAAKtB,KAAO,EACZ,EAAKQ,KAAO,EACZ,EAAKiB,KAAO,EAAKF,EACjB,EAAKG,KAAO,EAAKF,EACjB,EAAKuF,OAAS9F,EAAQ8F,OACtB,EAAKuG,UAAW,EAChB,EAAKC,cAAgB,IACrB,EAAKC,UAAY,6BAGjB,EAAKE,YAAc,EACnB,EAAKC,YAAc,IACnB,EAAKC,WAAa,IAClB,EAAKC,YAAc,IACnB,EAAKC,SAAW,EAEhB,EAAKC,YAAc,IACnB,EAAKC,aAAe,IACpB,EAAKG,aAAe,IACpB,EAAKC,aAAgB,IAErB,EAAKC,WAAa,IAElB,EAAK1M,SAAW,GAEhB,EAAK2M,SAAW,IAAIjH,EACpB,EAAK5C,OAAQ,EAKb,EAAKZ,UAAY,EAAKA,UAAUnF,KAAf,OACjB,EAAKsD,cAAgB,EAAKA,cAActD,KAAnB,OACrB,EAAKuD,eAAiB,EAAKA,eAAevD,KAApB,OACtB,EAAKwD,iBAAmB,EAAKA,iBAAiBxD,KAAtB,OACxB,EAAKyD,kBAAoB,EAAKA,kBAAkBzD,KAAvB,OACzB,EAAK8G,OAAS,EAAKA,OAAO9G,KAAZ,OACd,EAAK6P,WAAa,EAAKA,WAAW7P,KAAhB,OAClB,EAAK8P,iBAAmB,EAAKA,iBAAiB9P,KAAtB,OACxB,EAAK+P,eAAiB,EAAKA,eAAe/P,KAApB,OACtB,EAAKgQ,WAAa,EAAKA,WAAWhQ,KAAhB,OAClB,EAAK0N,OAAS,EAAKA,OAAO1N,KAAZ,OAEd,EAAKmS,YAAc,IAAI3D,EAAMA,EAAM4D,SAEnC,EAAKvC,aAlDY,E,oSAuNDrN,GAAwC,IAAnClB,EAAmC,uDAA5B,EAAGQ,EAAyB,uDAAlB,EACtC,OADwD,wDACjD,CACHU,IAAKA,EACLG,MAAO,KACPC,OAAQ,GACRtB,KAAMA,EACNQ,KAAMA,EACN+L,IAAK,KACLmB,YAAa,EACbC,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,SAAU,EACV/H,MAAO,6BACP0H,OAAQ,6BACRF,cAAe,IACfQ,YAAa,IACbC,aAAc,IACdC,iBAAkB,IAClBC,kBAAmB,IACnBG,WAAY,IACZtH,OAAQ,Q,kCAtLZ,MAAO,CACHjH,KAAMV,KAAKmC,EAAKnC,KAAKiC,MAAQ,EAC7BpB,MAAOb,KAAKmC,EAAkB,GAAbnC,KAAKiC,MACtBiL,IAAKlN,KAAKoC,EAAKpC,KAAKkC,OAAS,EAC7B+K,OAAQjN,KAAKoC,EAAmB,GAAdpC,KAAKkC,U,kCAK3B,IAAI0E,EAAO,IAAIzC,MAEf,OADAyC,EAAKtD,IAAM,6BACJsD,I,sCAMP,MAAO,CAFC5D,KAAKC,OAAOjD,KAAKyC,WAAazC,KAAKiC,MAAQ,GAAKjC,KAAKuC,UACrDS,KAAKC,OAAOjD,KAAK0C,UAAY1C,KAAKkC,OAAS,GAAKlC,KAAKuC,a,uCAO7D,MAAO,CAFCS,KAAKC,OAAOjD,KAAKwC,YAAcxC,KAAKiC,MAAQ,GAAKjC,KAAKuC,UACtDS,KAAKC,OAAOjD,KAAK0C,UAAY1C,KAAKkC,OAAS,GAAKlC,KAAKuC,a,yCAM7D,MAAO,CAFCS,KAAKC,OAAOjD,KAAKyC,WAAazC,KAAKiC,MAAQ,GAAKjC,KAAKuC,UACrDS,KAAKC,OAAOjD,KAAK2C,aAAe3C,KAAKkC,OAAS,GAAKlC,KAAKuC,a,0CAMhE,MAAO,CAFCS,KAAKC,MAAMjD,KAAKwC,YAAcxC,KAAKuC,UACnCS,KAAKC,OAAOjD,KAAK2C,aAAe3C,KAAKkC,OAAS,GAAKlC,KAAKuC,a,+BAI3D,WAGDvC,KAAKkO,UAAW,EAChBlO,KAAKyR,YAAY9N,OACjB3D,KAAK4G,KAAKtD,IAAMtD,KAAKoO,UACrBpO,KAAKiC,OAAS,IACdjC,KAAKkC,QAAU,IACflC,KAAKY,KAAO,EACZZ,KAAKoB,KAAO,EAEZgG,YAAW,WACP,EAAKqK,YAAY7N,QACjB,EAAKyB,OAAQ,IACd,O,mCAME,WACTrF,KAAKiP,WAAa7H,YAAW,WACzB,EAAK/B,OAAQ,IACd,O,sCAKH,IAAIgE,EACA6D,EACAD,EACApM,EACAH,EAGJ,GAAiB,SAAbV,KAAKmN,IAAgB,UACPnN,KAAK4C,gBADE,GACpBlC,EADoB,KACdwM,EADc,KAErB7D,EAASrJ,KAAKuP,YAJP,GAImBrC,EAAaxM,GACvCV,KAAKkP,SAAS/G,gBACVnI,KACAU,EAAOV,KAAKuC,SACZ2K,EAAMlN,KAAKuC,SACX8G,GAPiB,SAUJrJ,KAAK8C,mBAVD,GAUpBpC,EAVoB,KAUduM,EAVc,KAWrB5D,EAASrJ,KAAKuP,YAbP,GAamBtC,EAAgBvM,GAC1CV,KAAKkP,SAAS/G,gBACVnI,KACAU,EAAOV,KAAKuC,SACZ0K,EAASjN,KAAKuC,SACd8G,GAIR,GAAiB,UAAbrJ,KAAKmN,IAAiB,UACPnN,KAAK6C,iBADE,GACrBhC,EADqB,KACdqM,EADc,KAEtB7D,EAASrJ,KAAKuP,YAxBP,GAwBmBrC,EAAarM,GACvCb,KAAKkP,SAAS/G,gBACVnI,KAAKD,OACLc,EAAQb,KAAKuC,SACb2K,EAAMlN,KAAKuC,SACX8G,GAPkB,SAUJrJ,KAAK+C,oBAVD,GAUrBlC,EAVqB,KAUdoM,EAVc,KAWtB5D,EAASrJ,KAAKuP,YAjCP,GAiCmBtC,EAAgBpM,GAE1Cb,KAAKkP,SAAS/G,gBACVnI,KAAKD,OACLc,EAAQb,KAAKuC,SACb0K,EAASjN,KAAKuC,SACd8G,M,yCAQRrJ,KAAKqC,KAAOrC,KAAKmC,EACjBnC,KAAKsC,KAAOtC,KAAKoC,EAEjBpC,KAAKmC,GAAKnC,KAAKY,KACfZ,KAAKoC,GAAKpC,KAAKoB,O,qCAGJW,EAAKiD,GACZhF,KAAKqF,QAELrF,KAAKkO,SACLlO,KAAKsP,WAAWvN,EAAKiD,IAGzBhF,KAAKoP,mBAELrN,EAAI8E,UACA7G,KAAK4G,KACJ5B,EAAahF,KAAK0O,SAAY1O,KAAKwO,WAGpCxO,KAAKuO,YACLvO,KAAKwO,WACLxO,KAAKyO,YACLzO,KAAKmC,EAAGnC,KAAKoC,EACbpC,KAAKiC,MAAOjC,KAAKkC,Y,iCAMdH,EAAKiD,GACZjD,EAAI8E,UACA7G,KAAK4G,KACJ5B,EAAahF,KAAK0O,SAAY1O,KAAKwO,WACpCxO,KAAKuO,YACL,IACA,IACAvO,KAAKmC,EAAK,GAAUnC,KAAKoC,EAAK,MAC9B,IAAK,U,gCAlNUiF,G,2uBCN3B,IAyNesK,G,YAlNX,WAAY9P,GAAS,M,IAAA,O,4FAAA,S,EACjB,U,EAAA,gBAAMA,K,gDACD9B,OAAS8B,EAAQ9B,OACtB,EAAKa,KAAOiB,EAAQjB,MAAQ,EAC5B,EAAKQ,KAAO,EACZ,EAAKuF,MAAQ9E,EAAQ8E,OAAS,yBAC9B,EAAK+I,MAAQ,EAAKjL,UAAU,EAAKkC,OACjC,EAAK+H,SAAW7M,EAAQ6M,UAAY,EACpC,EAAKJ,YAAc,EACnB,EAAKC,YAAc,IACnB,EAAKC,WAAa3M,EAAQ2M,YAAc,GACxC,EAAKC,YAAc5M,EAAQ4M,aAAe,GAC1C,EAAKyC,QAAS,EACd,EAAKC,SAAU,EACf,EAAKxB,YAAc,GACnB,EAAKyB,mBAAqB,GAC1B,EAAKzJ,OAAS9F,EAAQ8F,OAEtB,EAAKyF,OAAS,GAAKvL,EAAQwO,WAE3B,EAAKP,UAAY,EAAKA,UAAUxQ,KAAf,OACjB,EAAKyQ,UAAY,EAAKA,UAAUzQ,KAAf,OAEjB,EAAK+R,eAAiB,EAAKA,eAAe/R,KAApB,OACtB,EAAKsS,kBAAoB,EAAKA,kBAAkBtS,KAAvB,OAEzB,EAAKsS,oBA1BY,E,6RA4JR9P,EAAK/B,GAAoC,IAA5BoN,EAA4B,uDAAtB,QAE5B,OAFkD,wDAE3C,CACH9O,KAAM,YACNsI,MAAO,yBACP+H,SAAU,EACV5M,IAAKA,EACLG,MAAO,GACPC,OAAQ,IACR+B,OAAQ,IACRrD,KAAM,EACNuM,IAAKA,EACLpN,OAAQA,EACRsQ,WAAY,K,4BAIPvO,EAAK/B,GAAoC,IAA5BoN,EAA4B,uDAAtB,QAE5B,OAFkD,wDAE3C,CACH9O,KAAM,YACNsI,MAAO,yBACP+H,SAAU,EACV5M,IAAKA,EACLG,MAAO,GACPC,OAAQ,GACR+B,OAAQ,GACRrD,KAAM,EACNuM,IAAKA,EACLpN,OAAQA,EACRsQ,WAAY,M,4BAGPvO,EAAK/B,GAAoC,IAA5BoN,EAA4B,uDAAtB,QAE5B,OAFkD,wDAE3C,CACH9O,KAAM,YACNsI,MAAO,yBACP+H,SAAU,EACV5M,IAAKA,EACLG,MAAO,GACPC,OAAQ,GACR+B,OAAQ,GACRrD,KAAM,EACNuM,IAAKA,EACLpN,OAAQA,EACRsQ,WAAY,Q,6CA7KA,WAChBjJ,YAAW,WACP,EAAK8I,eAAiBpI,aAAY,WAC9B,EAAKiI,cACN,OACJ,O,qCAGQ5N,EAAGC,EAAGkP,GAAQ,WACrBlP,EAAIpC,KAAKoC,EACTpC,KAAKoB,KAAO,EAEZpB,KAAKoB,MAAQ,EASbe,EAAInC,KAAKmC,GAAkB,SAAbnC,KAAKmN,IAEnBnN,KAAKoR,mBAAqBhK,YAAW,WACjC,EAAKxG,KAAO,EACZ,EAAKuM,IAAM,UACZ,KACIhL,EAAInC,KAAKmC,GAAkB,UAAbnC,KAAKmN,IAE1BnN,KAAKoR,mBAAqBhK,YAAW,WACjC,EAAKxG,MAAQ,EACb,EAAKuM,IAAM,SAEZ,MAEKhL,EAAInC,KAAKmC,GAAkB,UAAbnC,KAAKmN,KAAqBhL,EAAInC,KAAKmC,GAAkB,SAAbnC,KAAKmN,MACnEhG,aAAanH,KAAKoR,sB,6CAIHrR,GAAQ,WAE3BC,KAAKuR,oBAAsBzJ,aAAY,WACnC,EAAKuJ,eAAetR,KACrB,O,gCAGGgC,EAAKiD,GAEX,GADAhF,KAAKuG,YACAvG,KAAKqF,QAASrF,KAAKsF,OAAUN,EAAa,GAAM,EAArD,CAEA,IAAIgM,EAAQhO,KAAKC,MAAM+B,EAAa,KAAOhF,KAAK0O,SAC/B,SAAb1O,KAAKmN,IAELpL,EAAI8E,UACA7G,KAAK0P,MACJsB,EAAShR,KAAKwO,YAAcxO,KAAKsO,YAAc0C,EAAiB,EAARA,GACzDhR,KAAKuO,YACLvO,KAAKwO,WACLxO,KAAKyO,YACLzO,KAAKmC,EAAGnC,KAAKoC,EACbpC,KAAKiC,MAAOjC,KAAKkC,SAGrBH,EAAI+E,OAAO,EAAG,GACd/E,EAAI8E,UACA7G,KAAK0P,MACJsB,EAAShR,KAAKwO,YAAcxO,KAAKsO,YAAc0C,EAAiB,EAARA,GACzDhR,KAAKuO,YACLvO,KAAKwO,WACLxO,KAAKyO,aACJzO,KAAKmC,EAAInC,KAAKiC,MAAOjC,KAAKoC,EAC3BpC,KAAKiC,MAAOjC,KAAKkC,QAErBH,EAAI+E,OAAO,EAAG,O,kCAMlB,GAA6C,KAAzCtI,OAAOyI,KAAKjH,KAAK2P,aAAazI,OAAlC,CAGA,IADA,IAAI7H,EACKvB,EAAI,EAAGA,GAAK,GAAIA,IACrB,IAAKkC,KAAK2P,YAAY7R,GAAI,CACtBuB,EAAMvB,EACN,MAGRkC,KAAK2P,YAAYtQ,GAAO,IAAImS,GAAa,CACjC1P,IAAK,CAAC9B,KAAKyC,WAAczC,KAAKiC,MAAQ,EACtCjC,KAAK2C,aAAgB3C,KAAKkC,OAAS,Q,iCAIpC,WACHlC,KAAKiE,QAAU,IACfjE,KAAKsF,OAAQ,EACbtF,KAAK2H,OAAS,EACd3H,KAAKY,KAAO,EACZZ,KAAKoB,KAAO,EACZ2G,cAAc/H,KAAKkQ,gBACnB9I,YAAW,WACP,EAAK7B,MAAO,IACb,Q,2BAMNvD,EAAQjC,GACTC,KAAKsC,KAAOtC,KAAKoC,EACjBpC,KAAKqC,KAAOrC,KAAKmC,EACjBnC,KAAKmC,GAAKnC,KAAKY,KACfZ,KAAKoC,GAAKpC,KAAKoB,KACfpB,KAAKqR,eAAetR,EAAOoC,EAAGpC,EAAOqC,EAAqB,EAAhBrC,EAAOmC,a,gCAjJjCuN,G,2KCgIToC,G,WAzIX,WAAYhQ,I,4FAAS,SACjB7B,KAAK8R,KAAOjQ,EAAQiQ,KACpB9R,KAAK+R,KAAO/R,KAAKyE,YACjBzE,KAAKiF,WAAY,EACjBjF,KAAKgS,UAAW,EAChBhS,KAAK0O,SAAW,EAChB1O,KAAKY,KAAO,EACZZ,KAAKoB,KAAOS,EAAQT,KACpBpB,KAAKmC,EAAIN,EAAQC,IAAI,GACrB9B,KAAKoC,EAAIP,EAAQC,IAAI,GACrB9B,KAAKiS,OAASjS,KAAKmC,EAEnBnC,KAAKkS,QAAUrQ,EAAQqQ,QACvBlS,KAAK2H,OAAS9F,EAAQ8F,QAAU,GAChC3H,KAAKmS,iBAAmBtQ,EAAQsQ,iBAEhCnS,KAAKoS,OAASpS,KAAKoS,OAAO9S,KAAKU,MAC/BA,KAAKyE,UAAYzE,KAAKyE,UAAUnF,KAAKU,MACrCA,KAAKqS,OAASrS,KAAKqS,OAAO/S,KAAKU,MAC/BA,KAAKsS,OAAStS,KAAKsS,OAAOhT,KAAKU,MAC/BA,KAAKuS,UAAYvS,KAAKuS,UAAUjT,KAAKU,MACrCA,KAAKwS,YAAcxS,KAAKwS,YAAYlT,KAAKU,MACzCA,KAAKyS,KAAOzS,KAAKyS,KAAKnT,KAAKU,M,qDAuGjB8R,EAAMhQ,GAEhB,MAAO,CACHgQ,KAAMA,EACNhQ,IAAKA,EACLV,KAJQ4B,KAAKC,MAAsB,GAAhBD,KAAK0P,WAIR,GAAM,EAAI,EAC1BR,QAAS,CAACpQ,EAAI,GAAK,GAAIA,EAAI,GAAK,IAChCqQ,iBAAkBnP,KAAKC,MAAsB,EAAhBD,KAAK0P,e,qCAzGtC,IAAIX,EAAO,IAAI5N,MAEf,OADA4N,EAAKzO,IAAM,qBACJyO,I,6BAGJY,GAAK,WAER3S,KAAKiF,WAAY,EACjBjF,KAAK4S,cAAgBxL,YAAW,WAC5B,EAAKkL,WACNK,K,+BAGE,WACL3S,KAAK6S,YAAczL,YAAW,WAC1B,EAAK4K,UAAW,EAChB,EAAKpR,KAAO,KACb,O,+BAIHZ,KAAKgS,UAAW,EAChBhS,KAAKY,MAAQ,K,gCAIPmB,EAAKiD,GACX,IAAIhF,KAAK8R,KAAKxM,OAASN,EAAa,GAAM,EAA1C,CAEA,IAAI+B,EAAS/G,KAAKgS,SAAY,EACzBhS,KAAKiF,WAAcD,EAAahF,KAAKmS,kBAAoBnS,KAAK0O,UACzD1L,KAAKC,MAAM+B,EAAa,KAAOhF,KAAKmS,kBAAoBnS,KAAK0O,SACnEzM,EAASjC,KAAKiF,UAAa,IAAO,IAGhB,SAAlBjF,KAAK8R,KAAK3E,IACVpL,EAAI8E,UACA7G,KAAK+R,KACL,EACQ,GAARhL,EACA9E,EACA,GACAjC,KAAKmC,EAAGnC,KAAKoC,EACbH,EAAO,KAGXF,EAAI+E,OAAO,EAAG,GACd/E,EAAI8E,UACA7G,KAAK+R,KACL,EACQ,GAARhL,EACA9E,EACA,IACCjC,KAAKmC,EAAIF,EAAOjC,KAAKoC,EACtBH,EAAO,IAEXF,EAAI+E,OAAO,EAAG,O,kCAKV/G,GACJC,KAAK8R,KAAKxM,OACVvF,EAAOoC,EAAInC,KAAKmC,GACfpC,EAAOqC,EAAIrC,EAAOmC,OAAUlC,KAAKoC,EAAI,IACtCrC,EAAOqC,EAAKpC,KAAKoC,EAAI,IACrBrC,EAAOqG,OAAOpG,KAAK2H,U,2BAItB5F,EAAKiD,EAAYjF,GAClBC,KAAKqC,KAAOrC,KAAKmC,EACjBnC,KAAKmC,GAAKnC,KAAKY,KACVZ,KAAKiF,YACNjF,KAAKoC,GAAKpC,KAAKoB,MAGnBpB,KAAKwS,YAAYzS,GACbC,KAAKmC,GAAK,IACVnC,KAAKmC,GAAK,GAEVnC,KAAKqS,UACErS,KAAKmC,EAAInC,KAAKiS,SACrBjS,KAAKY,KAAO,EACZZ,KAAKiF,WAAY,EACjBjF,KAAKmC,EAAInC,KAAKiS,SAOdjS,KAAKoC,EAAIpC,KAAKkS,QAAQ,IAAMlS,KAAKoC,EAAIpC,KAAKkS,QAAQ,MAClDlS,KAAKoB,OAAS,GAElBpB,KAAKuS,UAAUxQ,EAAKiD,Q,6wBCrH5B,IAkQe8N,G,YA3Pb,WAAYjR,GAAS,M,IAAA,O,4FAAA,S,EACnB,U,EAAA,gBAAMA,K,gDACD9B,OAAS8B,EAAQ9B,OACtB,EAAKa,KAAOiB,EAAQjB,MAAQ,EAC5B,EAAKQ,KAAO,EACZ,EAAKuF,MAAQ9E,EAAQ8E,OAAS,wBAC9B,EAAK+I,MAAQ,EAAKjL,UAAU,EAAKkC,OACjC,EAAKoM,QAAU,EAGf,EAAKrE,SAAW7M,EAAQ6M,UAAY,EACpC,EAAKJ,YAAc,EACnB,EAAKC,YAAc,EACnB,EAAKC,WAAa3M,EAAQ2M,YAAc,GACxC,EAAKC,YAAc5M,EAAQ4M,aAAe,GAC1C,EAAKyC,QAAS,EACd,EAAKC,SAAU,EACf,EAAKxB,YAAc,GACnB,EAAKyB,mBAAqB,GAC1B,EAAKzJ,OAAS,GACd,EAAK1C,WAAY,EACjB,EAAK+M,UAAW,EAChB,EAAKhN,WAAa,EAElB,EAAKoI,OAAS,GAEd,EAAK4F,MAAQ,CACX,IAAInB,GAAKA,GAAKoB,OAAL,MAAkB,CAAC,IAAK,MACjC,IAAIpB,GAAKA,GAAKoB,OAAL,MAAkB,CAAC,IAAK,OACjC,IAAIpB,GAAKA,GAAKoB,OAAL,MAAkB,CAAC,IAAK,OACjC,IAAIpB,GAAKA,GAAKoB,OAAL,MAAkB,CAAC,IAAK,OACjC,IAAIpB,GAAKA,GAAKoB,OAAL,MAAkB,CAAC,IAAK,OACjC,IAAIpB,GAAKA,GAAKoB,OAAL,MAAkB,CAAC,IAAK,QAGnC,EAAKnD,UAAY,EAAKA,UAAUxQ,KAAf,OACjB,EAAKyQ,UAAY,EAAKA,UAAUzQ,KAAf,OAGjB,EAAK0Q,WAAa,EAAKA,WAAW1Q,KAAhB,OAClB,EAAKgT,OAAS,EAAKA,OAAOhT,KAAZ,OACd,EAAKiR,gBAAkB,EAAKA,gBAAgBjR,KAArB,OACvB,EAAK4T,aAAe,EAAKA,aAAa5T,KAAlB,OACpB,EAAK6T,YAAc,EAAKA,YAAY7T,KAAjB,OACnB,EAAK8T,YAAc,EAAKA,YAAY9T,KAAjB,OACnB,EAAK+T,YAAc,EAAKA,YAAY/T,KAAjB,OACnB,EAAKiR,kBACL,EAAK8C,cA/Cc,E,6RAuORvR,EAAK/B,GAChB,OADuC,wDAChC,CACL1B,KAAM,WACNsI,MAAO,wBACP+H,SAAU,EACV5M,IAAKA,EACLG,MAAO,IACPC,OAAQ,IACR+B,OAAQ,KACRrD,KAAM,EACNuM,IAAK,OACLpN,OAAQA,O,2CAhMM,WAChBC,KAAKsT,aAAexL,aAAY,WAC9B,EAAK9C,eACJ,IAAO,M,oCAIE,WACZhF,KAAKuT,cAAgBnM,YAAW,WAC9B,EAAKgL,WACJ,KAGHpS,KAAKwT,aAAe1L,aAAY,WAE9B,EAAKsL,gBACJ,O,uEASI,WACPpT,KAAKiF,WAAY,EACjBjF,KAAK4S,cAAgBxL,YAAW,WAC9B,EAAKkL,WACJ,Q,+BAIHtS,KAAKgS,UAAW,EAChBhS,KAAKY,MAAQ,K,mCAIFoS,GACX,IAAK,IAAIlV,EAAIkV,EAAM9L,OAAS,EAAGpJ,EAAI,EAAGA,IAAK,CACzC,IAAM2V,EAAIzQ,KAAKC,MAAMD,KAAK0P,UAAY5U,EAAI,IADD,EAElB,CAACkV,EAAMS,GAAIT,EAAMlV,IAAvCkV,EAAMlV,GAFkC,KAE9BkV,EAAMS,GAFwB,KAI3C,OAAOT,I,kCAGGjR,EAAKhC,GAAQ,WACvBC,KAAKgT,MAAMU,SAAQ,SAAC3B,EAAMjU,GACxBiU,EAAKU,KAAK1Q,EAAK,EAAKiD,WAAYjF,Q,oCAItB,WAEZC,KAAKgT,MAAMU,SAAQ,SAAC3B,EAAMjU,GACxBiU,EAAKK,OAAQ,KAAY,IAAJtU,MAEvBsJ,YAAW,WACT,EAAK4L,MAAQ,EAAKE,aAAa,EAAKF,SACnC,O,gCAGKjR,EAAKiD,GAGb,GAFAhF,KAAKuG,YAEAvG,KAAKqF,QAASrF,KAAKsF,OAAUN,EAAa,GAAM,EAArD,CAEA,IAAI5C,EAAMpC,KAAKiF,YACZjF,KAAKgF,WAAa,GAAM,GAAKhF,KAAKgF,WAAa,GAAM,IACtDhF,KAAKgS,SAAY,GAAKhS,KAAKuO,YACZ,UAAbvO,KAAKmN,KACKnK,KAAKC,MAAM+B,EAAa,KAAOhF,KAAK0O,SAChD3M,EAAI8E,UACF7G,KAAK0P,MACJ1M,KAAKC,MAAMjD,KAAKgF,WAAa,KAAOhF,KAAK0O,SAAY1O,KAAKwO,WAC3DpM,EACApC,KAAKwO,WACLxO,KAAKyO,YACLzO,KAAKmC,EAAGnC,KAAKoC,EACbpC,KAAKiC,MAAOjC,KAAKkC,UAGnBH,EAAI+E,OAAO,EAAG,GACd/E,EAAI8E,UACF7G,KAAK0P,MACJ1P,KAAKgF,WAAahF,KAAK0O,SAAY1O,KAAKwO,WAAaxO,KAAKsO,YAC3DlM,EACApC,KAAKwO,WACLxO,KAAKyO,aACJzO,KAAKmC,EAAInC,KAAKiC,MAAOjC,KAAKoC,EAC3BpC,KAAKiC,MAAOjC,KAAKkC,QAEnBH,EAAI+E,OAAO,EAAG,O,kCAQhB,GAA6C,IAAzCtI,OAAOyI,KAAKjH,KAAK2P,aAAazI,OAAlC,CAGA,IADA,IAAI7H,EACKvB,EAAI,EAAGA,GAAK,EAAGA,IACtB,IAAKkC,KAAK2P,YAAY7R,GAAI,CACxBuB,EAAMvB,EACN,MAIa,SAAbkC,KAAKmN,IAEPnN,KAAK2P,YAAYtQ,GAAO,IAAIgI,EAC1BA,EAAW4I,WACT,CAACjQ,KAAKyC,WAAa,GACnBzC,KAAK2C,aAAe,KACnB,EAAG,EAAG,SAGX3C,KAAK2P,YAAYtQ,GAAO,IAAIgI,EAC1BA,EAAW4I,WACT,CAACjQ,KAAKwC,YAAc,GACpBxC,KAAK2C,aAAe,IACpB,EAAG,EAAG,a,iCAMH,WACL3C,KAAKiE,QAAU,IACjBjE,KAAKsF,OAAQ,EACbtF,KAAKgT,MAAMU,SAAQ,SAAC3B,GAClB5K,aAAa4K,EAAKa,eAClBzL,aAAa4K,EAAKc,gBAEpB7S,KAAK2H,OAAS,EACd3H,KAAKY,KAAO,EACZZ,KAAKoB,KAAO,EACZ2G,cAAc/H,KAAKkQ,gBACnBnI,cAAc/H,KAAKwT,cACnBpM,YAAW,WACT,EAAK7B,MAAO,EACZwC,cAAc,EAAKwI,mBAClB,Q,+BAQLvQ,KAAKgS,UAAW,EAChBhS,KAAKY,KAAO,I,2BAGToB,EAAQjC,EAAQgC,GAAK,WACxB/B,KAAKqC,KAAOrC,KAAKmC,EACjBnC,KAAKmC,GAAKnC,KAAKY,KACXZ,KAAKmC,EAAI,KACXnC,KAAKmC,EAAI,IAETnC,KAAKqS,UACIrS,KAAKmC,EAAI,MAClBnC,KAAKY,KAAO,EACZZ,KAAKiF,WAAY,EACjBjF,KAAKmC,EAAI,IAETnC,KAAKuT,cAAgBnM,YAAW,WAC9B,EAAKgL,WACJ,MAGLpS,KAAKmT,YAAYpR,EAAKhC,Q,gCAhOC0P,G,2KCuuBZkE,G,WA1uBb,WAAY9R,I,4FAAS,SACnB7B,KAAK+B,IAAMF,EAAQE,IACnB/B,KAAKD,OAAS8B,EAAQ9B,OACtBC,KAAK4T,QAAU/R,EAAQ+R,QACvB5T,KAAK6T,OAASrV,OAAOyI,KAAKjH,KAAK4T,SAAS,GACxC5T,KAAK8T,UAAYjS,EAAQiS,WAAa9T,KAAK4T,QAAQ5T,KAAK6T,QAAQC,UAChE9T,KAAKuP,YAAc1N,EAAQ0N,aAAevP,KAAK4T,QAAQ5T,KAAK6T,QAAQtE,YACpEvP,KAAK+T,KAAO,GACZ/T,KAAKgU,KAAO,GACZhU,KAAKuC,SAAWV,EAAQU,SACxBvC,KAAKiU,QAAUjU,KAAKyE,YACpBzE,KAAKkU,YAAclU,KAAKiU,QAAQhS,MAAQjC,KAAKgU,KAC7ChU,KAAKmU,QAAUnU,KAAK4T,QAAQ5T,KAAK6T,QAAQM,UACzCnU,KAAKoU,WAAa,EAClBpU,KAAKqU,MAAQ,IAAInR,EAAM,CAACI,IAAKtD,KAAK4T,QAAQ5T,KAAK6T,QAAQQ,QAEvDrU,KAAKsU,YAActU,KAAKuU,WAAWvU,KAAK4T,QAAQ5T,KAAK6T,QAAQS,aAG7DtU,KAAKwU,UAAYxU,KAAK4T,QAAQ5T,KAAK6T,QAAQW,WAAa,KACxDxU,KAAKyU,UAAY,EACjBzU,KAAK0U,eAAiB,EACtB1U,KAAK2U,aAAe,GAEpB3U,KAAK4U,eAAiB5U,KAAK4U,eAAetV,KAAKU,MAC/CA,KAAK6U,kBAAoB7U,KAAK6U,kBAAkBvV,KAAKU,MAIrDA,KAAK8U,QAAU9U,KAAK8U,QAAQxV,KAAKU,MACjCA,KAAK+U,QAAU/U,KAAK+U,QAAQzV,KAAKU,MACjCA,KAAKgV,SAAWhV,KAAKgV,SAAS1V,KAAKU,MACnCA,KAAKiV,OAASjV,KAAKiV,OAAO3V,KAAKU,MAC/BA,KAAKkV,UAAYlV,KAAKkV,UAAU5V,KAAKU,MACrCA,KAAKmV,UAAYnV,KAAKmV,UAAU7V,KAAKU,MACrCA,KAAKyE,UAAYzE,KAAKyE,UAAUnF,KAAKU,MACrCA,KAAKoV,UAAYpV,KAAKoV,UAAU9V,KAAKU,MACrCA,KAAKqV,gBAAkBrV,KAAKqV,gBAAgB/V,KAAKU,MACjDA,KAAKsV,aAAetV,KAAKsV,aAAahW,KAAKU,MAC3CA,KAAKuV,UAAYvV,KAAKuV,UAAUjW,KAAKU,MAErCA,KAAKuU,WAAavU,KAAKuU,WAAWjV,KAAKU,MACvCA,KAAKwV,iBAAmBxV,KAAKwV,iBAAiBlW,KAAKU,MACnDA,KAAKyV,UAAYzV,KAAKyV,UAAUnW,KAAKU,MACrCA,KAAK0V,YAAc1V,KAAK0V,YAAYpW,KAAKU,MAGzCA,KAAKqV,kB,uDAsMS,WACd,MAAO,CACLzL,EAAG,CACDkK,UAAW,CACT,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAG,GAAI,GAAI,GAAK,EAAI,EAAI,EAAG,GAAI,GAAI,GAAK,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAC1DvE,YAAa,CACX,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAE1D4E,QAAS,WACP,MAAO,CACLhL,EAAG,IAAImH,EAAOA,EAAOqF,QAAQ,CAAC,IAAK,GAAI,CAAC,GAAI,OAC5CrM,EAAG,IAAIgH,EAAOA,EAAOqF,QAAQ,CAAC,IAAK,GAAI,CAAC,GAAI,OAC5CpM,EAAG,IAAI+G,EAAOA,EAAOqF,QAAQ,CAAC,IAAK,GAAI,CAAC,GAAI,OAC5CnM,EAAG,IAAI8G,EAAOA,EAAOqF,QAAQ,CAAC,IAAK,GAAI,CAAC,GAAI,OAC5ClM,EAAG,IAAI6G,EAAOA,EAAOqF,QAAQ,CAAC,GAAI,GAAI,CAAC,GAAI,SAK/CnB,UAAW,CACTrL,EAAG,CAgBCyM,EAAG,WACD,OAAO,IAAItF,EAAOA,EAAOqF,QAAQ,CAAC,IAAK,GAAI,CAAC,GAAI,QAElDxM,EAAG,WACD,OAAO,IAAImH,EAAOA,EAAOqF,QAAQ,CAAC,IAAK,GAAI,CAAC,GAAI,QAElDrM,EAAG,WACD,OAAO,IAAIgH,EAAOA,EAAOqF,QAAQ,CAAC,IAAK,GAAI,CAAC,GAAI,SAIxDrM,EAAG,CACGsM,EAAG,WACD,OAAO,IAAIzF,EAAWA,EAAW0F,KAAK,CAAC,IAAK,IAAK,EAAE,GAAI,KAAM,UAE/D1M,EAAG,WACD,OAAO,IAAIgH,EAAWA,EAAW0F,KAAK,CAAC,EAAG,IAAK,EAAE,GAAI,KAAM,WAE7DvM,EAAG,WACD,OAAO,IAAI6G,EAAWA,EAAW2F,KAAK,CAAC,IAAK,IAAK,EAAE,GAAI,KAAM,UAE/DvM,EAAG,WACD,OAAO,IAAI4G,EAAWA,EAAW2F,KAAK,CAAC,EAAG,IAAK,EAAE,GAAI,KAAM,YAGnEvM,EAAG,CACGqM,EAAG,WACD,IAAIxT,EAAIY,KAAKC,MAAsB,IAAhBD,KAAK0P,UACpBvQ,EAAKC,EAAI,GAAM,EAAK,EAAI,IAC5B,OAAO,IAAIuP,GAAUA,GAAUoE,MAAM,CAAC5T,EAAGC,GAAI,EAAKrC,UAEpDoJ,EAAG,WACD,IAAI/G,EAAIY,KAAKC,MAAsB,IAAhBD,KAAK0P,UACpBvQ,EAAKC,EAAI,GAAM,EAAK,EAAI,IAC5B,OAAO,IAAIuP,GAAUA,GAAUqE,MAAM,CAAC7T,EAAGC,GAAI,EAAKrC,WAG1DyJ,EAAG,CACGoM,EAAG,WACD,IAAIxT,EAAIY,KAAKC,MAAsB,IAAhBD,KAAK0P,UACpBvQ,EAAKC,EAAI,GAAM,EAAK,EAAI,IAC5B,OAAO,IAAI6O,EAASA,EAASgF,MAAM,CAAC9T,EAAGC,GAAI,EAAKrC,UAElDoJ,EAAG,WACD,IAAI/G,EAAIY,KAAKC,MAAsB,IAAhBD,KAAK0P,UACpBvQ,EAAIC,EAAI,GAAM,EAAI,EAAI,IAC1B,OAAO,IAAI6O,EAASA,EAASiF,MAAM,CAAC/T,EAAGC,GAAI,EAAKrC,UAElDuJ,EAAG,WACD,IAAIlH,EAAIY,KAAKC,MAAsB,IAAhBD,KAAK0P,UACpBvQ,EAAIC,EAAI,GAAM,EAAI,EAAI,IAC1B,OAAO,IAAI6O,EAASA,EAASkF,MAAM,CAAChU,EAAGC,GAAI,EAAKrC,YAKxDsU,MAAO,qCACPC,YAAa,CACX8B,WAAY,oC,+BAOJ,WACd,MAAO,CACLjN,EAAG,CACD2K,UAAW,GAYXvE,YAAa,CACX,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EACxD,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EACxD,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAc1D4E,QAAS,WACP,MAAO,IASTE,MAAO,yCACPC,YAAa,CACX8B,WAAY,+BACZC,IAAK,8BACLC,MAAQ,kCAGZhN,EAAG,CACDwK,UAAW,GAYXvE,YAAa,CAEX,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAK,EAAI,EAAI,EAAI,EAAG,GAAK,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAG,GAAK,EACxD,EAAI,EAAG,GAAI,GAAK,EAAI,EAAI,EAAI,EAAG,GAAI,GAAK,EAAI,EAAI,EAAG,GAAK,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAG,GAAK,EAAI,EAAI,EAAI,EAAG,GAAI,GACvD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAI,GACvD,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAE1D+E,YAAa,CACX8B,WAAY,gCACZC,IAAK,+BACLC,MAAO,kCAGTnC,QAAS,WACP,MAAO,CACLhL,EAAG,IAAIgH,EAAWA,EAAW0F,KAAK,CAAC,GAAI,IAAK,CAAC,EAAG,OAEhDtM,EAAG,IAAI4G,EAAWA,EAAW0F,KAAK,CAAC,GAAI,KAAM,CAAC,EAAG,KAAM,SACvDrM,EAAG,IAAI8G,EAAOA,EAAOqF,QAAQ,CAAC,IAAK,GAAI,CAAC,EAAG,OAC3ClM,EAAG,IAAI6G,EAAOA,EAAOiG,QAAQ,CAAC,IAAK,GAAI,CAAC,GAAI,OAC5C7M,EAAG,IAAI4G,EAAOA,EAAOkG,QAAQ,CAAC,IAAK,GAAI,CAAC,GAAI,UAQlDjN,EAAG,CACDuK,UAAW,CAET,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACzD,GAAI,GAAK,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EACzD,GAAI,GAAI,GAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAG,GAAK,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAG1DvE,YAAa,CAEX,EAAG,GAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAG,GAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAG,GAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAG,GAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GACvD,EAAG,GAAK,EAAI,EAAI,EAAI,EAAG,GAAI,GAAK,EAAI,EAAI,EAAG,GAAI,GAAK,EAAI,EACzD,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAK,EAAI,EAAG,GAAI,GAAI,GAAK,EACzD,GAAI,GAAK,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAK,EAAG,GAAI,GAAI,GAAI,IAEzD4E,QAAS,WACP,MAAO,CAIL5K,EAAG,IAAIoI,GAAUA,GAAUoE,MAAM,CAAC,IAAK,OACvCvM,EAAG,IAAImI,GAAUA,GAAUqE,MAAM,CAAC,IAAK,MACvCvM,EAAG,IAAIwH,EAASA,EAASiF,MAAM,CAAC,IAAK,KAAM,EAAKnW,SAChD2J,EAAG,IAAIuH,EAASA,EAASgF,MAAM,CAAC,IAAK,IAAK,EAAKlW,WAKnDuU,YAAa,CACX8B,WAAY,gCACZC,IAAK,+BACLC,MAAO,mCAGX9M,EAAG,CACDsK,UAAW,GAEXvE,YAAa,CACX,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACzD,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAK,EAAG,GAAK,EAAI,EAAI,EAAG,GAAI,GACvD,EAAI,EAAI,EAAG,GAAI,GAAI,GAAK,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACzD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,GAE1D4E,QAAS,WACP,MAAO,CACLhL,EAAG,IAAIgH,EAAWA,EAAW0F,KAAK,CAAC,IAAK,KAExCrM,EAAG,IAAIyH,EAASA,EAASgF,MAAM,CAAC,IAAK,KAAM,EAAKlW,SAChD0J,EAAG,IAAIwH,EAASA,EAASgF,MAAM,CAAC,IAAK,KAAM,EAAKlW,SAChD2J,EAAG,IAAIuH,EAASA,EAASgF,MAAM,CAAC,IAAK,KAAM,EAAKlW,SAChD4J,EAAG,IAAIsH,EAASA,EAASiF,MAAM,CAAC,KAAM,IAAK,EAAKnW,WAKpDuU,YAAa,CACX8B,WAAY,gCACZC,IAAK,+BACLC,MAAO,mCAyCX7M,EAAG,CACDqK,UAAW,CACT,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACzD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAK,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EACzD,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GACvD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACzD,GAAI,GAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAE1DvE,YAAa,CACX,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAE1D4E,QAAS,WACP,MAAO,CACLhL,EAAG,IAAI8H,EAASA,EAASgF,MAAM,CAAC,GAAI,KAAM,EAAKlW,SAC/CuJ,EAAG,IAAI2H,EAASA,EAASgF,MAAM,CAAC,IAAK,GAAI,EAAKlW,SAC9CwJ,EAAG,IAAI0H,EAASA,EAASkF,MAAM,CAAC,IAAK,KAAM,EAAKpW,SAChDyJ,EAAG,IAAIyH,EAASA,EAASiF,MAAM,CAAC,IAAK,KAAM,EAAKnW,SAChD0J,EAAG,IAAIwH,EAASA,EAASkF,MAAM,CAAC,IAAK,KAAM,EAAKpW,SAChD2J,EAAG,IAAIuH,EAASA,EAASkF,MAAM,CAAC,IAAK,KAAM,EAAKpW,SAChD4J,EAAG,IAAIsH,EAASA,EAASiF,MAAM,CAAC,KAAM,IAAK,EAAKnW,WAGpDuU,YAAa,CACX8B,WAAY,kCAKhB1M,EAAG,CACDoK,UAAW,CACT,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACzD,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACzD,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAG,GAAI,GAAI,GAAK,EAAG,GAAI,GAAK,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAE1DvE,YAAa,CACX,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAE1D4E,QAAS,WACP,MAAO,CACLhL,EAAG,IAAI2J,GAAaA,GAAa2D,MAAM,CAAC,IAAK,KAAM,EAAK1W,WAG5DsU,MAAO,qCACPC,YAAa,CACX8B,WAAY,iCAOhBxM,EAAG,CACDkK,UAAW,CACT,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAG,GAAI,GAAI,GAAK,EAAI,EAAI,EAAG,GAAI,GAAI,GAAK,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAC1DvE,YAAa,CACX,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxD,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAE1D4E,QAAS,WACP,MAAO,CACLhL,EAAG,IAAImH,EAAOA,EAAOiG,QAAQ,CAAC,IAAK,GAAI,CAAC,GAAI,SAKhDlC,MAAO,qCACPC,YAAa,CACX8B,WAAY,sC,qCAroBlB,IAAInC,EAAU,IAAI9P,MAElB,OADA8P,EAAQ3Q,IAAM,uBACP2Q,I,iCAGEyC,GACT,IAAIN,EAAa,IAAIjS,MACrBiS,EAAW9S,IAAMoT,EAAON,WAExB,IAAIC,EAAOK,EAAOL,IAAO,IAAIlS,MAAU,KACtCkS,IAAOA,EAAI/S,IAAMoT,EAAOL,KAEzB,IAAIC,EAASI,EAAOJ,MAAS,IAAInS,MAAU,KAG3C,OAFCmS,IAASA,EAAMhT,IAAMoT,EAAOJ,OAEtB,CACLF,aACAC,MACAC,W,uCAIavU,EAAKC,GAElBD,EAAI8E,UACF7G,KAAKsU,YAAY8B,WACjB,EACA,EACA,IACA,IACA,EACA,EACApU,EAAOC,MACPD,EAAOE,U,gCAIHH,EAAKC,GACRhC,KAAKsU,YAAY+B,KACtBtU,EAAI8E,UACF7G,KAAKsU,YAAY+B,IACjB,EACA,EACA,IACA,IACA,EACA,EACArU,EAAOC,MACPD,EAAOE,U,kCAICH,EAAKC,GACVhC,KAAKsU,YAAYgC,OAEtBvU,EAAI8E,UACF7G,KAAKsU,YAAYgC,MACjB,EACA,EACA,IACA,IACA,EACA,EACAtU,EAAOC,MACPD,EAAOE,U,8BAIHyU,EAAKC,GACX,OAAO5W,KAAK8T,UAAU8C,EAAM5W,KAAK+T,KAAO4C,K,8BAGlCA,EAAKC,GACX,OAAO5T,KAAKC,MAAM0T,EAAM3W,KAAKuC,Y,+BAEtBoU,EAAKC,GACZ,OAAO5T,KAAKC,MAAO0T,EAAM3W,KAAKuC,SAAYvC,KAAKuC,Y,6BAE1CoU,EAAKC,GACV,OAAO5T,KAAKC,MAAM2T,EAAM5W,KAAKuC,SAAWvC,KAAKuC,Y,gCAErCoU,EAAKC,GACb,OAAO5T,KAAKC,MAAM2T,EAAM5W,KAAKuC,Y,wCAGb,WACZsU,SAAS7W,KAAK6T,QAAU,GAA+B,IAA1BgD,SAAS7W,KAAK6T,UAS7C7T,KAAK8W,cAAgBhP,aAAY,WAC1B,EAAKqM,QAAQ,IAChBpM,cAAc,EAAK+O,eAErB,EAAKxB,iBACJ,Q,qCAKL,KAAI9W,OAAOyI,KAAKjH,KAAKmU,SAASjN,QAAU,GAAxC,CACAlH,KAAKoU,aACL,IAAI/U,EAAMW,KAAKoU,WACXhS,EAAoB,IAAhBY,KAAK0P,SACb1S,KAAKmU,QAAQ9U,GAAO,IAAI4R,EAASA,EAASkF,MAAM,CAAC,IAAK/T,GAAIpC,KAAKD,OAAQ,Y,kCAIvE,KAAIvB,OAAOyI,KAAKjH,KAAKmU,SAASjN,QAAU,GAAxC,CACAlH,KAAKoU,aACL,IAAI/U,EAAMW,KAAKoU,WAAcpR,KAAKC,MAAsB,IAAhBD,KAAK0P,UACzCtQ,EAAoB,IAAhBY,KAAK0P,SACTvQ,EAAK3D,OAAOyI,KAAKjH,KAAKmU,SAASjN,OAAS,GAAM,EAAK,GAAK,IAC5DlH,KAAKmU,QAAQ9U,GAAO,IAAI4R,EAASA,EAASkF,MAAM,CAAChU,EAAGC,GAAIpC,KAAKD,OAAQ,Y,qCAGxDgX,GACb,KAAIvY,OAAOyI,KAAKjH,KAAKmU,SAASjN,QAAU6P,GAAxC,CACA,IAAI1X,EAAMW,KAAKoU,WAAapR,KAAKC,MAAsB,IAAhBD,KAAK0P,UACxCsE,EAAaxY,OAAOyI,KAAKjH,KAAKwU,UAAUxU,KAAK0U,iBAAiBxN,OAC9DwI,EAAQ1M,KAAKC,MAAMD,KAAK0P,SAAWsE,GAEvChX,KAAKmU,QAAQ9U,GAAOW,KAAKwU,UAAUxU,KAAK0U,gBAAgBhF,KAExD1P,KAAK0U,eAA0C,IAAxB1U,KAAK0U,eAAwB,EAAI1U,KAAK0U,eAAiB,K,0CAGjC,WAA7B/B,EAA6B,uDAAvB,KAAOyB,EAAgB,uDAAH,EACtB,MAAhBpU,KAAK6T,SAET9L,cAAc/H,KAAK2U,cAEnB3U,KAAK2U,aAAe7M,aAAY,WAC9B,EAAK8M,eAAeR,KACnBzB,M,gCAKKoE,GAUR,GARA/W,KAAK6T,OAASkD,EACd/W,KAAK8T,UAAY9T,KAAK4T,QAAQ5T,KAAK6T,QAAQC,UAC3C9T,KAAKuP,YAAcvP,KAAK4T,QAAQ5T,KAAK6T,QAAQtE,YAC7CvP,KAAKmU,QAAUnU,KAAK4T,QAAQ5T,KAAK6T,QAAQM,UACrCnU,KAAK4T,QAAQ5T,KAAK6T,QAAQS,cAE5BtU,KAAKsU,YAActU,KAAKuU,WAAWvU,KAAK4T,QAAQ5T,KAAK6T,QAAQS,cAE3DtU,KAAK4T,QAAQ5T,KAAK6T,QAAQQ,MAAO,CACnC,IAAIvQ,EAAQ9D,KAAKqU,MAAMlR,MAAMW,MAC7B9D,KAAKqU,MAAMzQ,QACX5D,KAAKqU,MAAQ,IAAInR,EAAM,CAAEI,IAAKtD,KAAK4T,QAAQ5T,KAAK6T,QAAQQ,QACxDrU,KAAKqU,MAAM1Q,OACX3D,KAAKqU,MAAMlR,MAAMW,MAAQA,EAE3B9D,KAAKqV,oB,gCAIGtT,GAER,IAAK,IAAI5D,EAAI,EAAGA,EAAI6B,KAAK+T,KAAM5V,IAC7B,IAAK,IAAIS,EAAI,EAAGA,EAAIoB,KAAKgU,KAAMpV,IAAK,CAClC,IAAIqY,EAAOjX,KAAK8U,QAAQ3W,EAAGS,GACvBsY,EAAWD,EAAO,GAAM,EAAK,EAAKA,EAAO,EAEzCA,EAAO,GAETlV,EAAI8E,UACF7G,KAAKiU,SACJiD,EAAU,IAAMlX,KAAKiU,QAAQhS,MAAO,GACpCe,KAAKC,MAAMgU,EAAO,IAAMjX,KAAKiU,QAAQhS,MAAQ,GAC9C,GACA,GACA9D,EAAI6B,KAAKuC,SACT3D,EAAIoB,KAAKuC,SACTvC,KAAKuC,SACLvC,KAAKuC,gB,6MCjEF4U,G,WAtLb,WAAYtV,I,4FAAS,SAGnB7B,KAAKuB,KAAOvB,KAAKoX,WACjBpX,KAAKyF,SAAWzF,KAAKqX,eAIrBrX,KAAKsX,WAAatX,KAAKsX,WAAWhY,KAAKU,MACvCA,KAAKuX,gBAAkBvX,KAAKuX,gBAAgBjY,KAAKU,MACjDA,KAAKoX,SAAWpX,KAAKoX,SAAS9X,KAAKU,MACnCA,KAAKqX,aAAerX,KAAKqX,aAAa/X,KAAKU,MAC3CA,KAAKwX,QAAUxX,KAAKwX,QAAQlY,KAAKU,MACjCA,KAAKyX,SAAWzX,KAAKyX,SAASnY,KAAKU,MACnCA,KAAK0X,WAAa1X,KAAK0X,WAAWpY,KAAKU,M,0DAIvC,IAAI2X,EAAM,IAAIxT,MAEd,OADAwT,EAAIrU,IAAM,wBACHqU,I,qCAGP,IAAIA,EAAM,IAAIxT,MAEd,OADAwT,EAAIrU,IAAM,6BACHqU,I,8BAKD3V,EAAQD,EAAKhC,EAAQiF,EAAYoI,GACvCrL,EAAI0O,YACJ1O,EAAI6V,KAAK,EAAI5V,EAAOE,OAAS,GAAKF,EAAOC,MAAO,IAChDF,EAAI8V,UAAY,QAChB9V,EAAI+V,OACJ/V,EAAIgP,YAEJ/Q,KAAKsX,WAAWtV,EAAQD,EAAKhC,GAC7BC,KAAKuX,gBAAgBvV,EAAQD,EAAKhC,GAClCC,KAAK0X,WAAW3V,EAAKC,EAAQoL,GAC7BpN,KAAKyX,SAASzV,EAAQD,EAAKhC,EAAQiF,K,iCAI1BhD,EAAQD,EAAKhC,GAEtB,IAAIgY,EAAgB/V,EAAOC,MAAQ,GAAMlC,EAAOkE,OAAS,KAEzDlC,EAAI0O,YACJ1O,EAAI6V,KAAK,IAAM5V,EAAOE,OAAS,GAAMF,EAAOC,MAAQ,EAAI,IACxDF,EAAI8V,UAAY,0BAChB9V,EAAI+V,OACJ/V,EAAIgP,YAEJhP,EAAI0O,YACJ1O,EAAI6V,KAAK,IAAM5V,EAAOE,OAAS,GAAM6V,EAAc,IACnDhW,EAAI8V,UAAY,MAChB9V,EAAI+V,OACJ/V,EAAIgP,c,sCAGU/O,EAAQD,EAAKhC,GAE3B,IAAIwE,EAAgBvC,EAAOC,MAAQ,GAAMlC,EAAOwE,YAAc,KAE9DxC,EAAI0O,YACJ1O,EAAI6V,KAAK,IAAM5V,EAAOE,OAAS,GAAMF,EAAOC,MAAQ,EAAI,GACxDF,EAAI8V,UAAY,0BAChB9V,EAAI+V,OACJ/V,EAAIgP,YAEJhP,EAAI0O,YACJ1O,EAAI6V,KAAK,IAAM5V,EAAOE,OAAS,GAAMqC,EAAc,GACnDxC,EAAI8V,UAAY,mBAChB9V,EAAI+V,OACJ/V,EAAIgP,c,+BAGG/O,EAAQD,EAAKhC,EAAQiF,GAC5B,GAAKjF,EAAOyE,YAwEVzC,EAAI8E,UACF7G,KAAKyF,SACJT,EAAa,EAAK,GAA8B,IAAvBA,EAAa,EAAK,GAC5C,IACA,GACA,GACAhD,EAAOC,MAAQ,IACfD,EAAOE,OAAS,GAChB,GACA,QAjFqB,CAEvB,IAAI8V,EAAYhW,EAAOC,MAAQ,GA6B/B,OA5BAF,EAAI0O,YACJ1O,EAAIkW,IAAID,EAAWhW,EAAOE,OAAS,GAAI,EAAG,EAAG,EAAIc,KAAKkV,IAAI,GAC1DnW,EAAI8V,UAAY,0BAChB9V,EAAI+V,OACJ/V,EAAI6O,UAAY,EAChB7O,EAAI8O,YAAc,0BAClB9O,EAAI+O,SACJ/O,EAAIgP,YAEJhP,EAAI0O,YACJ1O,EAAIkW,IAAIjW,EAAOC,MAAQ,IAAKD,EAAOE,OAAS,GAAI,EAAG,EAAG,EAAIc,KAAKkV,IAAI,GACnEnW,EAAI8V,UAAY,0BAChB9V,EAAI+V,OACJ/V,EAAI6O,UAAY,EAChB7O,EAAI8O,YAAc,0BAClB9O,EAAI+O,SACJ/O,EAAIgP,YAEJhP,EAAI0O,YACJ1O,EAAIkW,IAAIjW,EAAOC,MAAQ,IAAKD,EAAOE,OAAS,GAAI,EAAG,EAAG,EAAIc,KAAKkV,IAAI,GACnEnW,EAAI8V,UAAY,0BAChB9V,EAAI+V,OACJ/V,EAAI6O,UAAY,EAChB7O,EAAI8O,YAAc,0BAClB9O,EAAI+O,SACJ/O,EAAIgP,YAGIvS,OAAOyI,KAAKlH,EAAO2E,WAAWwC,QACpC,KAAK,EACHnF,EAAI8E,UACF7G,KAAKuB,KACJyD,EAAa,EAAK,GAA8B,IAAvBA,EAAa,EAAK,GAC5C,IACA,GACA,GACAhD,EAAOC,MAAQ,IACfD,EAAOE,OAAS,GAChB,GACA,IAEJ,KAAK,EACHH,EAAI8E,UACF7G,KAAKuB,KACJyD,EAAa,EAAK,GAA8B,IAAvBA,EAAa,EAAK,GAC5C,IACA,GACA,GACAhD,EAAOC,MAAQ,IACfD,EAAOE,OAAS,GAChB,GACA,IAEJ,KAAK,EACHH,EAAI8E,UACF7G,KAAKuB,KACJyD,EAAa,EAAK,GAA8B,IAAvBA,EAAa,EAAK,GAC5C,IACA,GACA,GACAhD,EAAOC,MAAQ,GACfD,EAAOE,OAAS,GAChB,GACA,Q,iCAsBCH,EAAKC,EAAQoL,GAClBrL,EAAIoW,KAAO,aAEXpW,EAAI8V,UAAY,QAChB9V,EAAIqW,UAAY,OAChBrW,EAAIsW,SAAJ,iBACYjL,GACV,GACApL,EAAOE,OAAS,S,+xBCtK1B,IAwgBeoW,G,WAhgBb,WAAYtW,EAAQD,GAAc,IAATwW,EAAS,uDAAH,EAAG,WAChCvY,KAAKgC,OAASA,EACdhC,KAAK+B,IAAMA,EACX/B,KAAKwY,UAAY,CACfrP,EAAGwK,GAAM8E,SACTnP,EAAGqK,GAAM+E,UAEX1Y,KAAKD,OAAS,IAAIsE,EAAOrE,KAAK+B,IAAK/B,KAAKgC,QACxChC,KAAK2Y,WAAa,IAAI7Y,EAAWE,KAAKD,QACtCC,KAAKuC,SAAWP,EAAOC,MAAQ,GAC/BjC,KAAK4Y,MAAQ,IAAIjF,GAAM,CACrB5R,IAAKA,EACL6R,QAAS5T,KAAKwY,UAAUD,GACxBxY,OAAQC,KAAKD,OACbwC,SAAUvC,KAAKuC,WAGjBvC,KAAKkP,SAAW,IAAIjH,EAAUjI,KAAKuC,UACnCvC,KAAK6Y,IAAM,IAAI1B,GACfnX,KAAKgF,WAAa,EAClBhF,KAAKmU,QAAUnU,KAAK4Y,MAAMzE,QAC1BnU,KAAK8Y,UAAW,EAChB9Y,KAAK+Y,OAAS,IAAI5U,MAClBnE,KAAK+Y,OAAOzV,IAAM,sBAGlBtD,KAAKgZ,UAAY,EAEjBhZ,KAAK4C,cAAgB5C,KAAK4C,cAActD,KAAKU,MAC7CA,KAAK6C,eAAiB7C,KAAK6C,eAAevD,KAAKU,MAC/CA,KAAK8C,iBAAmB9C,KAAK8C,iBAAiBxD,KAAKU,MACnDA,KAAK+C,kBAAoB/C,KAAK+C,kBAAkBzD,KAAKU,MACrDA,KAAKiZ,oBAAsBjZ,KAAKiZ,oBAAoB3Z,KAAKU,MACzDA,KAAKkZ,aAAelZ,KAAKkZ,aAAa5Z,KAAKU,MAC3CA,KAAKmZ,wBAA0BnZ,KAAKmZ,wBAAwB7Z,KAAKU,MACjEA,KAAKoZ,gBAAkBpZ,KAAKoZ,gBAAgB9Z,KAAKU,MACjDA,KAAKqZ,cAAgBrZ,KAAKqZ,cAAc/Z,KAAKU,MAC7CA,KAAKsZ,uBAAyBtZ,KAAKsZ,uBAAuBha,KAAKU,MAC/DA,KAAKuQ,gBAAkBvQ,KAAKuQ,gBAAgBjR,KAAKU,MACjDA,KAAKuZ,QAAUvZ,KAAKuZ,QAAQja,KAAKU,MACjCA,KAAKwZ,WAAaxZ,KAAKwZ,WAAWla,KAAKU,MACvCA,KAAKyZ,IAAMzZ,KAAKyZ,IAAIna,KAAKU,MACzBA,KAAK0Z,eAAiB1Z,KAAK0Z,eAAepa,KAAKU,MAC/CA,KAAKoV,UAAYpV,KAAKoV,UAAU9V,KAAKU,MACrCA,KAAK2Z,WAAa3Z,KAAK2Z,WAAWra,KAAKU,MACvCA,KAAK4Z,SAAW5Z,KAAK4Z,SAASta,KAAKU,MAGnCA,KAAKoU,WAAa5V,OAAOyI,KAAKjH,KAAKmU,SAASjN,OAC5ClH,KAAK6M,SAAU,EAEf7M,KAAK6Z,aAAe7Z,KAAK6Z,aAAava,KAAKU,MAE3CA,KAAKuQ,kB,iEAGW,WAChBvQ,KAAK8Z,cAAgBhS,aAAY,WAC/B,EAAK9C,eACH,IAAO,M,iCAKXhF,KAAK4Y,MAAQ,IAAIjF,GAAM,CACrB5R,IAAK/B,KAAK+B,IACV6R,QAASD,GAAM+E,SACf3Y,OAAQC,KAAKD,OACbwC,SAAUvC,KAAKuC,WAEjBvC,KAAK8T,UAAY9T,KAAK4Y,MAAMhF,QAAQ5T,KAAK4Y,MAAM/E,QAAQC,UACvD9T,KAAKuP,YAAcvP,KAAK4Y,MAAMhF,QAAQ5T,KAAK4Y,MAAM/E,QAAQtE,YACzDvP,KAAKmU,QAAUnU,KAAK4Y,MAAMzE,UAC1BnU,KAAK4Y,MAAMvD,oB,iCAIFrT,GACThC,KAAKuC,SAAWP,EAAOC,MAAQ,GAC/BjC,KAAK4Y,MAAMrW,SAAWvC,KAAKuC,W,sCAM3B,MAAO,CAFCS,KAAKC,MAAMjD,KAAKD,OAAO0C,WAAazC,KAAKuC,UACzCS,KAAKC,MAAMjD,KAAKD,OAAO2C,UAAY1C,KAAKuC,a,uCAMhD,MAAO,CAFCS,KAAKC,MAAMjD,KAAKD,OAAOyC,YAAcxC,KAAKuC,UAC1CS,KAAKC,MAAMjD,KAAKD,OAAO2C,UAAY1C,KAAKuC,a,yCAMhD,MAAO,CAFCS,KAAKC,MAAMjD,KAAKD,OAAO0C,WAAazC,KAAKuC,UACzCS,KAAKC,MAAMjD,KAAKD,OAAO4C,aAAe3C,KAAKuC,a,0CAMnD,MAAO,CAFCS,KAAKC,MAAMjD,KAAKD,OAAOyC,YAAcxC,KAAKuC,UAC1CS,KAAKC,MAAMjD,KAAKD,OAAO4C,aAAe3C,KAAKuC,a,uCAMnD,GAAoC,IAAhCsU,SAAS7W,KAAK4Y,MAAM/E,QACxB,OAAyC,IAArCrV,OAAOyI,KAAKjH,KAAKmU,SAASjN,SAC5BlH,KAAK6M,SAAU,GACR,K,4CAOT,IAAIxD,EACA6D,EACAD,EACApM,EACAH,EAGAqZ,EAAa,EACbC,EAAa,EAEbC,EAAUja,KAAK4Y,MAAMrJ,YAXL,KAaNvP,KAAK4C,gBAbC,GAanBlC,EAbmB,KAeT,MADX2I,EAAS4Q,EARE,IAOJ/M,EAba,MAcUxM,KACdsZ,IAChBha,KAAKkP,SAAS/G,gBACZnI,KAAKD,OACLW,EAAOV,KAAKuC,SACZ2K,EAAMlN,KAAKuC,SACX8G,EACArJ,KAAKuC,UArBa,SAwBLvC,KAAK6C,iBAxBA,GAwBnBhC,EAxBmB,KA0BT,MADXwI,EAAS4Q,EAnBE,IAkBH/M,EAxBY,MAyBUrM,KACdmZ,IAEhBha,KAAKkP,SAAS/G,gBACZnI,KAAKD,OACLc,EAAQb,KAAKuC,SACb2K,EAAMlN,KAAKuC,SACX8G,EACArJ,KAAKuC,UAjCa,SAoCHvC,KAAK8C,mBApCF,GAoCnBpC,EApCmB,KAsCR,KADZ2I,EAAS4Q,EA/BE,IA8BJhN,EApCa,MAqCavM,KAChBqZ,IACN,KAAX1Q,GAAgB2Q,IAChBha,KAAKkP,SAAS/G,gBACZnI,KAAKD,OACLW,EAAOV,KAAKuC,SACZ0K,EAASjN,KAAKuC,SACd8G,EACArJ,KAAKuC,UA7Ca,SAiDFvC,KAAK+C,oBAjDH,GAiDnBlC,EAjDmB,KAmDR,KADZwI,EAAS4Q,EA5CE,IA2CHhN,EAjDY,MAkDapM,KAChBkZ,IACN,KAAX1Q,GAAgB2Q,IACZha,KAAKD,OAAOiB,UAA2B,IAAfgZ,IAAkBha,KAAKD,OAAOiB,UAAW,GAClD,IAAf+Y,IACF/Z,KAAKD,OAAO0B,UAAW,GAGzBzB,KAAKkP,SAAS/G,gBACZnI,KAAKD,OACLc,EAAQb,KAAKuC,SACb0K,EAASjN,KAAKuC,SACd8G,EACArJ,KAAKuC,Y,8CAKe2X,GACtB,IAAI7Q,EACA6D,EACAD,EACApM,EACAH,EAEAuZ,EAAUja,KAAK4Y,MAAMrJ,YAEzB,GAAuB,SAAnB2K,EAAW/M,IAAgB,UACf+M,EAAWtX,gBADI,GAC5BlC,EAD4B,KAE7B2I,EAAS4Q,EALA,IAIF/M,EADsB,MAECxM,GAC9BV,KAAKkP,SAAS/G,gBACZ+R,EACAxZ,EAAOV,KAAKuC,SACZ2K,EAAMlN,KAAKuC,SACX8G,EACArJ,KAAKuC,UARsB,SAWZ2X,EAAWpX,mBAXC,GAW5BpC,EAX4B,KAY7B2I,EAAS4Q,EAfA,IAcFhN,EAXsB,MAYIvM,GACjCV,KAAKkP,SAAS/G,gBACZ+R,EACAxZ,EAAOV,KAAKuC,SACZ0K,EAASjN,KAAKuC,SACd8G,EACArJ,KAAKuC,UAIT,GAAuB,UAAnB2X,EAAW/M,IAAiB,UACf+M,EAAWrX,iBADI,GAC7BhC,EAD6B,KAE9BwI,EAAS4Q,EA3BA,IA0BD/M,EADsB,MAEArM,GAC9Bb,KAAKkP,SAAS/G,gBACZ+R,EACArZ,EAAQb,KAAKuC,SACb2K,EAAMlN,KAAKuC,SACX8G,EACArJ,KAAKuC,UARuB,SAWZ2X,EAAWnX,oBAXC,GAW7BlC,EAX6B,KAY9BwI,EAAS4Q,EArCA,IAoCDhN,EAXsB,MAYGpM,GAEjCb,KAAKkP,SAAS/G,gBACZ+R,EACArZ,EAAQb,KAAKuC,SACb0K,EAASjN,KAAKuC,SACd8G,EACArJ,KAAKuC,a,qCASTvC,KAAKD,OAAOoG,aACZnG,KAAKD,OAAOkG,SACZjG,KAAKD,OAAOgG,YAEP/F,KAAKD,OAAOS,OA0BfR,KAAKD,OAAOoC,GAAKnC,KAAKD,OAAOa,MAI3BZ,KAAKD,OAAOoB,SACZnB,KAAKD,OAAOyG,aAEZxG,KAAKD,OAAOiG,QAIhBhG,KAAKkP,SAAShH,cAAclI,KAAKD,OAAQC,KAAKgC,OAAQhC,KAAK6M,SAC3D7M,KAAKiZ,wB,sCAWL,GANEjZ,KAAKoU,WAAa5V,OAAOyI,KAAKjH,KAAK4Y,MAAMzE,SAASjN,QAM/ClH,KAAK6M,QAAS,CACjB,IAAK,IAAIxN,KAAOW,KAAKmU,QAEnBnU,KAAKmZ,wBAAwBnZ,KAAKmU,QAAQ9U,IAErCW,KAAKmU,QAAQ9U,GAAKkG,MAMrBvF,KAAKD,OAAOwE,aAAgBvE,KAAKmU,QAAQ9U,GAAK+N,OAAS,EACvDpN,KAAKgZ,WAAahZ,KAAKmU,QAAQ9U,GAAK+N,cAE7BpN,KAAKmU,QAAQ9U,GACpBW,KAAKoU,YAAc,IATnBpU,KAAKmU,QAAQ9U,GAAKyQ,UAAU9P,KAAK+B,IAAK/B,KAAKgF,YAC3ChF,KAAKkP,SAASjG,aAAajJ,KAAKD,OAAQC,KAAKmU,QAAQ9U,IACrDW,KAAKmU,QAAQ9U,GAAKoT,KAAKzS,KAAKgC,OAAQhC,KAAKD,OAAQC,KAAK+B,MAU1D/B,KAAK0Z,oB,wCAKP,GAAkD,IAA9Clb,OAAOyI,KAAKjH,KAAKD,OAAO2E,WAAWwC,OACrC,IAAK,IAAI7H,KAAOW,KAAKD,OAAO2E,UAAW,CACrC,IAAIgD,EAAW1H,KAAKD,OAAO2E,UAAUrF,GAErC,GAAwB,IAApBW,KAAKoU,WACP,IAAK,IAAI/U,KAAOW,KAAKmU,QACnBnU,KAAKkP,SAASjG,aAAavB,EAAU1H,KAAKmU,QAAQ9U,IAItDW,KAAKmZ,wBAAwBzR,GAE3BA,EAASrC,aAEFrF,KAAKD,OAAO2E,UAAUrF,GAD7BqI,EAAS2H,eAAerP,KAAK+B,IAAK/B,KAAKgF,e,+CAMtB,WAEvBxG,OAAO2b,OAAOna,KAAKmU,SAAST,SAAQ,SAAChE,GACnC,GAA8C,IAA1ClR,OAAOyI,KAAKyI,EAAMC,aAAazI,OACjC,IAAK,IAAI7H,KAAOqQ,EAAMC,YACpB,EAAKT,SAASkL,kBAAkB,EAAKra,OAAQ2P,EAAMC,YAAYtQ,IAE/D,EAAK8Z,wBAAwBzJ,EAAMC,YAAYtQ,IAE7CqQ,EAAMC,YAAYtQ,GAAKgG,aAEhBqK,EAAMC,YAAYtQ,GADzBqQ,EAAMC,YAAYtQ,GAAKgQ,eAAe,EAAKtN,IAAK,EAAKiD,iB,kCASvDhF,KAAKD,OAAOoC,EAAKnC,KAAKD,OAAOkC,MAAQ,GAAOjC,KAAKgC,OAAOC,OAC5DjC,KAAK4Y,MAAMxD,UAAUyB,SAAS7W,KAAK4Y,MAAM/E,QAAU,GACnD7T,KAAK6M,SAAU,EACf7M,KAAKmU,QAAUnU,KAAK4Y,MAAMzE,QAC1BnU,KAAKoU,WAAa5V,OAAOyI,KAAKjH,KAAKmU,SACnCnU,KAAKD,OAAOoC,EAAI,GACNnC,KAAKD,OAAOoC,EAAKnC,KAAKD,OAAOkC,MAAQ,GAAO,IACtDjC,KAAK4Y,MAAMxD,WAAW,GACtBpV,KAAKD,OAAOoC,EAAInC,KAAKgC,OAAOC,MAAQjC,KAAKD,OAAOkC,S,qCAKxB,MAAtBjC,KAAK4Y,MAAM/E,SAEc,IAAzB7T,KAAK4Y,MAAMnE,WACbzU,KAAK4Y,MAAMnE,YACXzU,KAAK4Y,MAAM/D,kBAAkB,IAAM,IAC1B7U,KAAKgZ,UAAY,IAA+B,IAAzBhZ,KAAK4Y,MAAMnE,WAC3CzU,KAAK4Y,MAAMnE,YACXzU,KAAK4Y,MAAM/D,kBAAkB,IAAM,IAC1B7U,KAAKgZ,UAAY,IAA+B,IAAzBhZ,KAAK4Y,MAAMnE,WAC3CzU,KAAK4Y,MAAMnE,YACXzU,KAAK4Y,MAAM/D,kBAAkB,IAAM,IAC1B7U,KAAKgZ,UAAY,KAAgC,IAAzBhZ,KAAK4Y,MAAMnE,WAC5CzU,KAAK4Y,MAAMnE,YACXzU,KAAK4Y,MAAM/D,kBAAkB,IAAM,IAC1B7U,KAAKgZ,UAAY,KAAgC,IAAzBhZ,KAAK4Y,MAAMnE,WAC5CzU,KAAK4Y,MAAMnE,YACXzU,KAAK4Y,MAAM/D,kBAAkB,IAAM,IAC1B7U,KAAKgZ,UAAY,KAAgC,IAAzBhZ,KAAK4Y,MAAMnE,YAC5CzU,KAAK4Y,MAAMnE,YACXzU,KAAK4Y,MAAM/D,kBAAkB,IAAM,O,mCAMrC7U,KAAKyZ,MACLzZ,KAAK8Y,YAAY9Y,KAAKD,OAAOwF,OAAQvF,KAAKqa,O,4BAK1Cra,KAAKqa,IAA6B,IAAtBra,KAAK4Y,MAAM/E,QAAqD,IAArCrV,OAAOyI,KAAKjH,KAAKmU,SAASjN,S,gCAKjElH,KAAKwZ,aAEAxZ,KAAK8Y,SAuBH9Y,KAAKqa,KAuCRra,KAAK4Y,MAAMvE,MAAMzQ,QAEjB5D,KAAK+B,IAAI8E,UACP7G,KAAK+Y,OACL,EACA,EACA,IACA,IACA,EAAG,EACH,IAAK,KAEP/Y,KAAK+B,IAAIoW,KAAO,aAChBnY,KAAK+B,IAAI8V,UAAY,OACrB7X,KAAK+B,IAAIqW,UAAY,SACrBpY,KAAK+B,IAAIsW,SAAS,YAAarY,KAAKgC,OAAOC,MAAQ,EAAG,KAGtDjC,KAAK+B,IAAIoW,KAAO,aAChBnY,KAAK+B,IAAI8V,UAAY,OACrB7X,KAAK+B,IAAIqW,UAAY,SACrBpY,KAAK+B,IAAIsW,SAAS,mBAAoBrY,KAAKgC,OAAOC,MAAQ,EAAGjC,KAAKgC,OAAOE,OAAS,GAElFlC,KAAK+B,IAAIoW,KAAO,aAChBnY,KAAK+B,IAAI8V,UAAY,OACrB7X,KAAK+B,IAAIqW,UAAY,SACrBpY,KAAK+B,IAAIsW,SAAT,wBAAmCrY,KAAKgZ,WAAahZ,KAAKgC,OAAOC,MAAQ,EAAG,KAG5EjC,KAAK+B,IAAIoW,KAAO,aAChBnY,KAAK+B,IAAI8V,UAAY,OACrB7X,KAAK+B,IAAIqW,UAAY,SACrBpY,KAAK+B,IAAIsW,SAAS,4BAA6BrY,KAAKgC,OAAOC,MAAQ,EAAG,OArEtEjC,KAAK4Y,MAAMvE,MAAMzQ,QACjB5D,KAAKgZ,UAAYhW,KAAKC,MAAMjD,KAAKgZ,UAAYhZ,KAAKD,OAAOkE,QAEzDjE,KAAK+B,IAAI8E,UACL7G,KAAK+Y,OACL,EACA,EACA,IACA,IACA,EAAG,EACH,IAAK,KAGT/Y,KAAK+B,IAAIoW,KAAO,cAChBnY,KAAK+B,IAAI8V,UAAY,gBACrB7X,KAAK+B,IAAIqW,UAAY,SACrBpY,KAAK+B,IAAIsW,SAAS,YAAarY,KAAKgC,OAAOC,MAAQ,EAAGjC,KAAKgC,OAAOE,OAAS,GAG3ElC,KAAK+B,IAAIoW,KAAO,aAChBnY,KAAK+B,IAAI8V,UAAY,OACrB7X,KAAK+B,IAAIqW,UAAY,SACrBpY,KAAK+B,IAAIsW,SAAT,wBACmBrY,KAAKgZ,WACtBhZ,KAAKgC,OAAOC,MAAQ,EACpB,KAGFjC,KAAK+B,IAAIoW,KAAO,aAChBnY,KAAK+B,IAAI8V,UAAY,OACrB7X,KAAK+B,IAAIqW,UAAY,SACrBpY,KAAK+B,IAAIsW,SACP,4BACArY,KAAKgC,OAAOC,MAAQ,EACpB,OAzDJjC,KAAKoV,YACLpV,KAAK4Y,MAAMpD,iBAAiBxV,KAAK+B,IAAK/B,KAAKgC,QACvChC,KAAK4Y,MAAM/E,OAAS,GAAG7T,KAAK4Y,MAAMzD,UAAUnV,KAAK+B,KACrD/B,KAAKD,OAAO8F,WAAW7F,KAAKgF,YAE5BhF,KAAKkZ,eACDlZ,KAAK4Y,MAAM/E,OAAS,IACtB7T,KAAK4Y,MAAMnD,UAAUzV,KAAK+B,IAAK/B,KAAKgC,QACpChC,KAAK4Y,MAAMlD,YAAY1V,KAAK+B,IAAK/B,KAAKgC,SAExChC,KAAK6Z,aAAa7Z,KAAK4Y,MAAO5Y,KAAKgZ,WAGnChZ,KAAKqZ,gBAGLrZ,KAAKsZ,yBACLtZ,KAAKoZ,kBAELpZ,KAAK6Y,IAAIrB,QAAQxX,KAAKgC,OAAQhC,KAAK+B,IAAK/B,KAAKD,OAAQC,KAAKgF,WAAYhF,KAAKgZ,iB,6MChTlEsB,G,WApIb,WAAatY,EAAQD,GAAK,Y,4FAAA,SACxB/B,KAAKgC,OAASA,EACdhC,KAAK+B,IAAMA,EAEX/B,KAAKua,KAAO,KACZva,KAAKwa,OAAS,IAAIrW,MAClBnE,KAAKwa,OAAOlX,IAAM,wBAClBtD,KAAKya,KAAO,IAAItW,MAChBnE,KAAKya,KAAKnX,IAAM,kCAGhBtD,KAAK0a,WAAa1a,KAAK0a,WAAWpb,KAAKU,MACvCA,KAAKyE,UAAYzE,KAAKyE,UAAUnF,KAAKU,MACrCA,KAAK2a,QAAU3a,KAAK2a,QAAQrb,KAAKU,MACjCA,KAAK4a,aAAe5a,KAAK4a,aAAatb,KAAKU,MAE3CI,OAAOC,iBAAiB,WAAW,SAACC,GAElC,OADAA,EAAMC,iBACED,EAAMjB,KACZ,IAAK,QACE,EAAKkb,OAAQ,EAAKA,KAAKzB,UAC1B,EAAK6B,UAEP,MACF,IAAK,IACE,EAAKJ,OAAQ,EAAKA,KAAKzB,UAC1B,EAAK8B,eAEP,MACF,IAAK,IACH,EAAKL,KAAK3B,MAAMvE,MAAMxQ,OACtB,MACF,QACE,W,2DAON,IAAIoQ,EAAU,IAAI9P,MAElB,OADA8P,EAAQ3Q,IAAM,uBACP2Q,I,gCAIFjU,KAAKua,OAAQva,KAAKua,KAAKzB,WAC1B9Y,KAAKua,KAAO,IAAIjC,GAAKtY,KAAKgC,OAAQhC,KAAK+B,KACvC/B,KAAKua,KAAK1B,IAAM,IAAI1B,GACpBnX,KAAKua,KAAK3B,MAAMvE,MAAM1Q,U,qCAKnB3D,KAAKua,OAAQva,KAAKua,KAAKzB,WAC1B9Y,KAAKua,KAAO,IAAIjC,GAAKtY,KAAKgC,OAAQhC,KAAK+B,IAAK,GAQ5C/B,KAAKua,KAAK1B,IAAM,IAAI1B,GACpBnX,KAAKua,KAAK3B,MAAMvE,MAAM1Q,U,mCAaxB3D,KAAK+B,IAAI8Y,UAAU,EAAG,EAAG7a,KAAKgC,OAAOC,MAAOjC,KAAKgC,OAAOE,QACnDlC,KAAKua,OACRva,KAAK+B,IAAI8E,UACL7G,KAAKwa,OACL,EACA,EACA,IACA,IACA,EAAG,EACHxa,KAAKgC,OAAOC,MAAOjC,KAAKgC,OAAOE,QAQnClC,KAAK+B,IAAI8E,UACP7G,KAAKya,KACL,EACA,EACA,IACA,IACAza,KAAKgC,OAAOC,MAAQ,EACpBjC,KAAKgC,OAAOE,OAAS,EACrB,IACA,KAEFlC,KAAK+B,IAAIoW,KAAO,cAChBnY,KAAK+B,IAAI8V,UAAY,OACrB7X,KAAK+B,IAAIqW,UAAY,SACrBpY,KAAK+B,IAAIsW,SAAS,8BAA+BrY,KAAKgC,OAAOC,MAAQ,EAAGjC,KAAKgC,OAAOE,QAAU,EAAE,IAEhGlC,KAAK+B,IAAIoW,KAAO,cAChBnY,KAAK+B,IAAI8V,UAAY,OACrB7X,KAAK+B,IAAIqW,UAAY,SACrBpY,KAAK+B,IAAIsW,SAAS,oCAAqCrY,KAAKgC,OAAOC,MAAQ,EAAGjC,KAAKgC,OAAOE,QAAU,EAAE,KAGpGlC,KAAKua,MAEPva,KAAKua,KAAKhB,UAIZnZ,OAAO0a,sBAAsB9a,KAAK0a,iB,kCC9HtCta,OAAOC,iBAAiB,oBAAoB,WAC1C,IAAI2B,EAASoB,SAAS2X,eAAe,cACjChZ,EAAMC,EAAOgZ,WAAW,MACb,IAAIV,GAAStY,EAAQD,GAE3B2Y","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","class Controller {\n  constructor(player) {\n    // this.gameview = gameview;\n    this.player = player;\n\n    this.keysPressed = {};\n\n    this.keydown = this.keydown.bind(this);\n    this.keyup = this.keyup.bind(this);\n    window.addEventListener(\"keydown\", this.keydown);\n    window.addEventListener(\"keyup\", this.keyup);\n  }\n\n  keydown(event) {\n    event.preventDefault();\n    this.player.idle = false;\n    this.player.keydown = true;\n    \n    switch (Controller.KEYS[event.key]) {\n    // switch (Controller.KEYS[event.keyCode]) {\n      case \"left\":\n        this.keysPressed.left = true;\n        // this.player.runningKeyDown = true;\n        this.player.direction = \"left\";\n        this.player.velX = -7;\n\n        break;\n      case \"right\":\n        this.keysPressed.right = true;\n        // this.player.runningKeyDown = true;\n\n        this.player.direction = \"right\";\n        this.player.velX = 7;\n        break;\n      case \"up\":\n        this.keysPressed.up = true;\n        this.player.upPressed = this.keysPressed.up;\n\n        if (this.player.canClimb) {\n          console.log(this.player.canClimb);\n          console.log(this.player.idle);\n\n          this.player.climbing = true;\n          this.player.velY = -7;\n        }\n        break;\n      case \"down\":\n        this.keysPressed.down = true;\n        if (this.player.canClimb) {\n          console.log(this.player.canClimb);\n          this.player.climbing = true;\n          this.player.velY = 7;\n        }\n        break;\n      case \"jump\":\n        this.keysPressed.jump = true;\n        this.player.jump();\n        break;\n      case \"fire\":\n\n        this.keysPressed.fire = true;\n        if (this.keysPressed.up) {\n          this.player.shootFire(\"up\");\n        } else if (this.keysPressed.down && !this.player.onGround) {\n          this.player.shootFire(\"down\");\n        } else {\n          this.player.shootFire();\n\n        }\n        break;\n      case \"dash\":\n        this.keysPressed.dash = true;\n        // this.player.dash = true;\n        // if (this.keysPressed.left || this.keysPressed.right) {\n        //   this.player.dash();\n        // }\n        // if (this.player.direction === \"right\") {\n        //   this.player.velX = 14;\n        // } else {\n        //   this.player.velX = -14;\n        // }\n      case \"space\":\n        // this.gameview.Ticker.paused = (this.gameview.Ticker.paused) ? false: true;\n        break;\n      default:\n        return;\n    }\n\n  }\n\n  keyup(event) {\n    // if (Controller.KEYS[event.keyCode] === \"left\" ||\n    //   Controller.KEYS[event.keyCode] === \"right\") {\n      // this.player.keydown = false;\n    //   // this.player.velX = 0;\n    //   // this.player.idle =ß true;\n    //   return;\n    // }\n    event.preventDefault();\n\n    switch (Controller.KEYS[event.key]) {\n    // switch (Controller.KEYS[event.keyCode]) {\n\n      case \"left\":\n        this.keysPressed.left = false;\n        // this.player.velX = 0;\n        this.player.runningKeyDown = false;\n\n        if (!this.keysPressed.left && !this.keysPressed.right) this.player.velX = 0;\n\n        break;\n      case \"right\":\n        this.keysPressed.right = false;\n        // this.player.runningKeyDown = false;\n\n        // this.player.velX *= -1;\n        if (!this.keysPressed.left && !this.keysPressed.right) this.player.velX = 0;\n        break;\n      case \"up\":\n        this.keysPressed.up = false;\n        this.player.upPressed = this.keysPressed.up;\n\n        if (this.player.climbing) this.player.climbing = false;\n        break;\n      case \"down\":\n        this.keysPressed.down = false;\n        break;\n      case \"jump\":\n        this.keysPressed.jump = false;\n        break;\n      case \"fire\":\n        this.keysPressed.fire = false;\n        break;\n      case \"dash\":\n        this.keysPressed.dash = false;\n      case \"space\":\n        // this.gameview.Ticker.paused = (this.gameview.Ticker.paused) ? false: true;\n        break;\n      default:\n        return;\n    }\n\n\n    this.player.idle = true;\n    // this.keysPressed = {};\n    // console.log(Controller.KEYS[event.keyCode])\n    // debugger\n\n  }\n}\n\n\n// Controller.KEYS = {\n//   19: 'space',\n//   37: 'left',\n//   38: 'up',\n//   39: 'right',\n//   40: 'down',\n//   65: 'jump',\n//   68: 'fire',\n//   83: 'dash',\n//   13: 'enter'\n// };\n\nController.KEYS = {\n  \"space\": 'space',\n  \"ArrowLeft\": 'left',\n  \"ArrowUp\": 'up',\n  \"ArrowRight\": 'right',\n  \"ArrowDown\": 'down',\n  \"a\": 'jump',\n  \"d\": 'fire',\n  \"s\": 'dash',\n  \"Enter\": 'enter'\n};\n\n\n\nexport default Controller;","\n\nclass GameObject {\n  constructor(options) {\n    this.name = options.name;\n    this.pos = options.pos;\n    this.ctx = options.ctx;\n    this.canvas = options.canvas;\n    this.width = options.width;\n    this.height = options.height;\n    this.x = options.pos[0];\n    this.y = options.pos[1];\n    this.oldX = this.x;\n    this.oldY = this.y;\n    this.tileSize = 60;\n\n\n\n    this.rightSide = this.rightSide.bind(this);\n    this.leftSide = this.leftSide.bind(this);\n    this.topSide = this.topSide.bind(this);\n    this.bottomSide = this.bottomSide.bind(this);\n\n    this.getTopLeftPos = this.getTopLeftPos.bind(this);\n    this.getTopRightPos = this.getTopRightPos.bind(this);\n    this.getBottomLeftPos = this.getBottomLeftPos.bind(this);\n    this.getBottomRightPos = this.getBottomRightPos.bind(this);\n  }\n\n  rightSide() {\n    return this.x + this.width;\n  }\n\n  leftSide() {\n    return this.x;\n  }\n\n  topSide() {\n    return this.y;\n  }\n\n  bottomSide() {\n    return this.y + this.height;\n  }\n\n  getTopLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n\n  getTopRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n}\n\nexport default GameObject;","class Music {\n    constructor(options){\n        this.music = document.createElement(\"audio\");\n        this.music.src = options.src;\n        this.music.id = \"theme\";\n        this.music.setAttribute(\"preload\", \"auto\");\n        this.music.setAttribute(\"controls\", \"none\");\n        this.music.setAttribute(\"loop\", \"true\");\n        this.music.setAttribute(\"muted\", \"false\");\n        this.music.style.display = \"none\";\n\n        this.play = this.play.bind(this);\n        this.pause = this.pause.bind(this);\n        this.mute = this.mute.bind(this);\n    };\n\n    play() {\n        this.music.play();\n    }\n    pause() {\n        this.music.pause();\n    }\n\n    mute() {\n        this.music.muted =!this.music.muted;\n    }\n\n}\n\nexport default Music;","import GameObject from \"../GameObject\";\n\nconst GRAVITY = 0.5;\nconst FRICTION = 0.5;\n\nclass Character extends GameObject {\n  constructor(options) {\n    super({ \n      name: options.name, \n      pos: options.pos, \n      ctx: options.ctx, \n      width: options.width,\n      height: options.height\n    });\n    this.vel = [0, 0];\n    this.health = 200;\n \n  }\n\n  loadImage() {\n    let spriteMap = new Image();\n    spriteMap.src = \"./assets/SeisaSpriteSheet.png\";\n    return spriteMap;\n    // this.tileMap.onLoad = this.drawLevel(ctx);\n  }\n  \n  // loadImage2() {\n  //   let spriteMap = new Image();\n  //   spriteMap.src = \"./assets/SeisaSpriteSheet.png\";\n  //   return spriteMap;\n  //   // this.tileMap.onLoad = this.drawLevel(ctx);\n  // }\n\n  // drawModel() {\n  //   this.ctx.beginPath();\n  //   this.ctx.rect(20, 40, 40, 70);\n  //   this.ctx.fillStyle = \"#FF000\";\n  //   this.ctx.fill();\n  //   this.ctx.closePath();\n\n  // }\n\n  \n}\n\nexport default Character;","import Character from \"./Objects/Characters/Character\";\nimport Collision from \"./util/Collision\";\nimport Projectile from \"./Objects/Projectiles/Projectile\";\n\n\nconst CONSTANTS = {\n  GRAVITY: 1,\n  FRICTION: 1.5,\n  MAX_VEL: 50,\n};\n\nclass Player {\n  constructor(ctx, canvas) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.character = new Character({\n      name: \"Seisa\",\n      pos: [20, 210],\n      ctx: this.ctx,\n      canvas: this.canvas,\n      // width: 30,\n      // width: 40,\n      width: 42.5,\n      height: 82\n      // height: 45\n      // height: 54\n    });\n    this.health = this.character.health;\n    this.damageMeter = 0;\n    this.damageBoost = false;\n    this.spriteMap = this.character.loadImage();\n    // this.spriteMap = this.character.loadImage2();\n    this.fireballs = {};\n    \n    this.vel = this.character.vel;\n    this.x = this.character.x;\n    this.y = this.character.y;\n    this.idleWidth = 42.5;\n    this.runWidth = 57;\n    this.attackWidth =\n    this.oldX = this.x;\n    this.oldY = this.y;\n    this.width = this.character.width;\n    this.height = this.character.height;\n    this.velX = this.vel[0];\n    this.velY = this.vel[1];\n    this.onGround = false;\n    this.idle = true;\n    this.keydown = false;\n    this.runningKeyDown = false;\n    this.isRunning = false;\n    this.direction = \"right\";\n    this.jumpCount = 2;\n    this.canClimb = false;\n    this.climbing = false;\n    this.frameCount = 0;\n    this.attacking = false;\n    this.aura = this.loadImage(\"./assets/aura.png\")\n\n    this.upPressed = false;\n    this.attackAnimTimeout = \"\";\n    this.dashing = false;\n\n    this.isHit = false;\n    this.dying = false;\n    this.dead = false;\n\n\n\n    this.drawPlayer = this.drawPlayer.bind(this);\n    this.jump = this.jump.bind(this);\n    // this.move = this.move.bind(this);\n\n\n    this.shootFire = this.shootFire.bind(this);\n    this.blueFire = this.blueFire.bind(this);\n    this.fire = this.fire.bind(this);\n\n    this.drawAttack = this.drawAttack.bind(this);\n    this.drawRunning = this.drawRunning.bind(this);\n    this.drawIdle = this.drawIdle.bind(this);\n    this.drawSprite = this.drawSprite.bind(this);\n    this.drawJump = this.drawJump.bind(this);\n    this.loadImage = this.loadImage.bind(this);\n\n    this.setOldPos = this.setOldPos.bind(this);\n    this.inAir = this.inAir.bind(this);\n    this.isIdle = this.isIdle.bind(this);\n    this.whichDirection = this.whichDirection.bind(this);\n    this.setRunning = this.setRunning.bind(this);\n    this.setHit = this.setHit.bind(this);\n\n    this.setDamageMeter = this.setDamageMeter.bind(this);\n    this.damageBoostCountdown = this.damageBoostCountdown.bind(this);\n    \n    this.setDying = this.setDying.bind(this);\n    this.isClimbing = this.isClimbing.bind(this);\n    this.getDirX = this.getDirX.bind(this);\n    this.getDirY = this.getDirY.bind(this);\n  }\n\n  loadImage(image) {\n    let proj = new Image();\n    proj.src = image;\n    return proj;\n  }\n\n  drawPlayer(frameCount) {\n// .74\n// .59\n    this.setDying();\n    // this.isIdle();\n    if (this.isHit && frameCount % 3 === 0 ) return;\n    if (this.velX === 0) {\n      if (this.direction === \"right\") {\n        this.ctx.drawImage(\n          this.spriteMap,\n          // this.spriteMap,\n          0,\n          // this.spriteMap,\n          529,\n          89,\n          175,\n          this.x, this.y,\n          this.width, this.height\n          // this.width - 5, this.height\n        );\n      } else {\n        this.ctx.scale(-1, 1);\n        this.ctx.drawImage(\n          // this.spriteMap,\n          // (Math.floor(frameCount / 2) % 10) * 147,\n          // 251,\n          // 147,\n          // 251,\n          this.spriteMap,\n          0,\n          529,\n          89,\n          175,\n          -this.x - this.width, this.y,\n          // -this.x - this.width - 5, this.y,\n          this.width, this.height\n          // this.width - 5, this.height\n        );\n        this.ctx.scale(-1, 1);\n      }\n    } else if (this.velX > 0) {\n      this.ctx.drawImage(\n        this.spriteMap,\n        // this.spriteMap,\n        (Math.floor(frameCount / 2) % 12) * 126.25 + 1,\n        // this.spriteMap,\n        0,\n        126.25,\n        175,\n        this.x, this.y,\n        this.width + 5, this.height\n      );\n    } else if (this.velX < 0) {\n      this.ctx.scale(-1, 1);\n      this.ctx.drawImage(\n        this.spriteMap,\n        // this.spriteMap,\n        (Math.floor(frameCount / 2) % 12) * 126.25 + 1,\n        // this.spriteMap,\n        0,\n        126.25,\n        175,\n        -(this.x) - this.width, this.y,\n        this.width + 5, this.height\n      );\n      this.ctx.scale(-1, 1);\n\n    } \n    ///change this.width and height based on movement\n  }\n\n  drawRunning(frameCount) {\n    if (this.direction === \"right\") {\n      this.ctx.drawImage(\n        this.spriteMap,\n        // this.spriteMap,\n        (Math.floor(frameCount / 2) % 12) * 126.4 + 1,\n        // this.spriteMap,\n        0,\n        126.4,\n        175,\n        this.x, this.y,\n        this.width + 5, this.height\n      );\n    } else {\n      this.ctx.scale(-1, 1);\n      this.ctx.drawImage(\n        this.spriteMap,\n        // this.spriteMap,\n        (Math.floor(frameCount / 2) % 12) * 126.4 + 1,\n        // this.spriteMap,\n        0,\n        126.4,\n        175,\n        -(this.x) - this.width, this.y,\n        this.width + 5, this.height\n      );\n      this.ctx.scale(-1, 1);\n\n    } \n  }\n  \n  \n  drawAttack(frameCount, state) {\n    switch (state) {\n      case \"jumping\":\n        if (this.velY < 0) {\n          if (this.direction === \"right\") {\n            this.ctx.drawImage(\n              this.spriteMap,\n              (Math.floor(frameCount / 2) % 3) * 108,\n              1145,\n              108,\n              172,\n              this.x, this.y,\n              this.width + 5, this.height\n              // this.width - 5, this.height\n            );\n          } else {\n            this.ctx.scale(-1, 1);\n            this.ctx.drawImage(\n              this.spriteMap,\n              (Math.floor(frameCount / 2) % 3) * 108,\n              1145,\n              108,\n              172,\n              -this.x - this.width, this.y,\n              // -this.x - this.width - 5, this.y,\n              this.width + 5, this.height\n              // this.width - 5, this.height\n            );\n            this.ctx.scale(-1, 1);\n          }\n        } else if (this.velY > 0) {\n          if (this.direction === \"right\") {\n            this.ctx.drawImage(\n              this.spriteMap,\n              (Math.floor(frameCount / 2) % 3) * 108,\n              1510,\n              108,\n              175,\n              this.x, this.y,\n              this.width, this.height\n              // this.width - 5, this.height\n            );\n          } else {\n            this.ctx.scale(-1, 1);\n            this.ctx.drawImage(\n              this.spriteMap,\n              (Math.floor(frameCount / 2) % 3) * 108,\n              1510,\n              108,\n              175,\n              -this.x - this.width, this.y,\n              // -this.x - this.width - 5, this.y,\n              this.width, this.height\n              // this.width - 5, this.height\n            );\n            this.ctx.scale(-1, 1);\n          }\n        }\n        break;\n      case \"running\":\n        if (this.direction === \"right\") {\n          this.ctx.drawImage(\n            this.spriteMap,\n            (Math.floor(frameCount / 2) % 4) * 160,\n            176,\n            160,\n            175,\n            this.x, this.y,\n            this.width + (this.width / 3), this.height\n          );\n        } else if (this.direction === \"left\") {\n          this.ctx.scale(-1, 1);\n          this.ctx.drawImage(\n            this.spriteMap,\n            (Math.floor(frameCount / 2) % 4) * 160,\n            176,\n            160,\n            175,\n            -this.x - this.width, this.y,\n            this.width + (this.width / 3), this.height\n          );\n          this.ctx.scale(-1, 1);\n        };\n        break;\n      default: \n        if (this.direction === \"right\") {\n          if (this.upPressed) {\n            this.ctx.drawImage(\n              this.spriteMap,\n              (Math.floor(frameCount / 2) % 4) * 89,\n              730,\n              89,\n              195,\n              this.x, this.y - (this.height / 10),\n              this.width, this.height * 1.1\n            );\n          } else {\n            this.ctx.drawImage(\n              this.spriteMap,\n              (Math.floor(frameCount / 2) % 4) * 125.1,\n              353,\n              123.25,\n              175,\n              this.x, this.y,\n              this.width + (this.width / 2.5), this.height\n            );\n          }\n        } else if (this.direction === \"left\") {\n          this.ctx.scale(-1, 1);\n          if (this.upPressed) {\n            this.ctx.drawImage(\n              this.spriteMap,\n              (Math.floor(frameCount / 2) % 4) * 89,\n              730,\n              89,\n              195,\n              -this.x - this.width, this.y - (this.height / 10),\n              this.width, this.height * 1.1\n            );\n          } else {\n            this.ctx.drawImage(\n              this.spriteMap,\n              (Math.floor(frameCount / 2) % 4) * 125.1,\n              353,\n              123.25,\n              175,\n              -this.x - this.width, this.y,\n              this.width + (this.width / 2.5), this.height\n            );\n          }\n          this.ctx.scale(-1, 1);\n        }\n       break;\n    }\n   \n}\n\n  drawJump(frameCount) {\n    if (!this.onGround && this.velY < 0) {\n      if (this.direction === \"right\") {\n        this.ctx.drawImage(\n          this.spriteMap,\n          (Math.floor(frameCount / 2) % 3) * 94,\n          959,\n          94,\n          176,\n          this.x, this.y,\n          this.width - (this.width / 8), this.height\n          // this.width - 5, this.height\n        );\n      } else {\n        this.ctx.scale(-1, 1);\n        this.ctx.drawImage(\n          this.spriteMap,\n          (Math.floor(frameCount / 2) % 3) * 94,\n          959,\n          94,\n          176,\n          -this.x - this.width, this.y,\n          // -this.x - this.width - 5, this.y,\n          this.width - (this.width / 8), this.height\n          // this.width - 5, this.height\n        );\n        this.ctx.scale(-1, 1);\n      }\n    } else if (!this.onGround && this.velY > 1) {\n      if (this.direction === \"right\") {\n        this.ctx.drawImage(\n          this.spriteMap,\n          (Math.floor(frameCount / 2) % 2) * 98,\n          1325,\n          98,\n          175,\n          this.x, this.y,\n          this.width, this.height\n          // this.width - 5, this.height\n        );\n      } else {\n        this.ctx.scale(-1, 1);\n        this.ctx.drawImage(\n          this.spriteMap,\n          (Math.floor(frameCount / 2) % 2) * 98,\n          1325,\n          98,\n          175,\n          -this.x - this.width, this.y,\n          // -this.x - this.width - 5, this.y,\n          this.width, this.height\n          // this.width - 5, this.height\n        );\n        this.ctx.scale(-1, 1);\n      }\n    }\n  }\n\n  drawIdle(frameCount) {\n    if (this.direction === \"right\") {\n      this.ctx.drawImage(\n        this.spriteMap,\n        0,\n        529,\n        89,\n        175,\n        this.x, this.y,\n        this.width, this.height\n        // this.width - 5, this.height\n      );\n    } else {\n      this.ctx.scale(-1, 1);\n      this.ctx.drawImage(\n        this.spriteMap,\n        0,\n        529,\n        89,\n        175,\n        -this.x - this.width, this.y,\n        // -this.x - this.width - 5, this.y,\n        this.width, this.height\n        // this.width - 5, this.height\n      );\n      this.ctx.scale(-1, 1);\n    }\n  }\n\n  drawSprite(frameCount) {\n    this.setDying();\n    // this.isIdle();\n    if (this.damageBoost) {\n      this.ctx.drawImage(\n        this.aura,\n        (Math.floor(frameCount / 3) % 4) * 82,\n        0,\n        82,\n        93,\n        this.x - 28, this.y - 42,\n        100, 130\n        // this.width - 5, this.height\n      );\n    }\n    if (this.isHit && frameCount % 3 === 0) return;\n\n\n\n    if (this.velY >= 0 && this.velY <= 1) {\n      if (this.isRunning) {\n        (!this.attacking) ? this.drawRunning(frameCount) : this.drawAttack(frameCount, \"running\");\n      } else {\n        (!this.attacking) ? this.drawIdle(frameCount) : this.drawAttack(frameCount, null);\n      }\n    } else if (!this.onGround) {\n      (!this.attacking) ? this.drawJump(frameCount) : this.drawAttack(frameCount, \"jumping\");\n    }\n\n    if (this.damageBoost) {\n      this.ctx.drawImage(\n        this.aura,\n        (Math.floor(frameCount / 3) % 4) * 82,\n        0,\n        82,\n        93,\n        this.x - 28, this.y - 42,\n        100, 130\n        // this.width - 5, this.height\n      );\n    }\n  }\n\n  shootFire(vert = null) {\n    if (!this.damageBoost) {\n      this.fire(vert); \n    } else {\n      this.blueFire(vert);\n    }\n  }\n\n  blueFire(vert = null) {\n\n    let key = null;\n    for (let i = 1; i <= Object.keys(this.fireballs).length; i++) {\n      \n      if (!this.fireballs[i]) {\n        key = i;\n        ///////\n        break;\n      }\n    }\n\n    key = (!key) ? Object.keys(this.fireballs).length + 1: key;\n    clearTimeout(this.attackAnimTimeout);\n    this.attacking = true;\n    this.attackAnimTimeout = setTimeout(() => {\n      this.attacking = false;\n    }, 200);\n\n    if (this.direction === \"right\") {\n      if (vert === \"up\") {\n        this.fireballs[key] = new Projectile(\n          Projectile.blueFireballVert(\n            [this.rightSide() - this.width / 2, this.y + this.height],\n            // [this.rightSide() - (this.width / 2),\n            // this.bottomSide() + this.height],\n            0,\n            -30,\n            vert\n          )\n        );\n      } else if (vert === \"down\") {\n        this.fireballs[key] = new Projectile(\n          Projectile.blueFireballVert(\n            [\n              this.rightSide() - this.width / 2,\n              this.bottomSide() - this.height\n            ],\n            0,\n            30,\n            vert\n          )\n        );\n          this.velY = -3;\n        \n      } else {\n        this.fireballs[key] = new Projectile(\n          Projectile.blueFireball(\n            [\n              this.rightSide() - this.width / 10,\n              this.topSide() + this.height / 5\n            ],\n            30,\n            0,\n            \"right\"\n          )\n        );\n      }\n\n    } else if (this.direction === \"left\") {\n\n      if (vert === \"up\") {\n        this.fireballs[key] = new Projectile(\n          Projectile.blueFireballVert(\n            [this.rightSide() - (this.width * .75),\n              this.y + (this.height)],\n            // [this.rightSide() - (this.width / 2),\n            // this.bottomSide() + this.height],\n            0, -30, vert)\n        );\n      } else if (vert === \"down\") {\n        this.fireballs[key] = new Projectile(\n          Projectile.blueFireballVert(\n            [this.rightSide() - (this.width / 2),\n            this.bottomSide() - this.height],\n            0, 30, vert)\n        );\n        this.velY -= 10;\n        this.jumpCount -= 1;\n      } else {\n        this.fireballs[key] = new Projectile(\n          Projectile.blueFireball(\n            [\n              this.leftSide() - (this.width + (this.width / 2)),\n              this.topSide() + (this.height / 5)\n            ],\n            -30,\n            0,\n            \"left\"\n          )\n        );\n      }\n\n    }\n    this.fireballs[key].launchSound.play();\n\n  }\n\n  fire(vert = null) {\n    if (Object.keys(this.fireballs).length === 3) {\n      this.attacking = false;\n      return;\n    }\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.fireballs[i]) {\n        key = i;\n        clearTimeout(this.attackAnimTimeout);\n        this.attacking = true;\n        this.attackAnimTimeout = setTimeout(() => {\n          this.attacking = false\n        }, 200)\n        ///////\n        break;\n      }\n    }\n\n    if (this.direction === \"right\") {\n      if (vert === \"up\") {\n        this.fireballs[key] = new Projectile(\n          Projectile.fireballVert(\n            [this.rightSide() - (this.width / 2),\n            this.y + (this.height)],\n            // [this.rightSide() - (this.width / 2),\n            // this.bottomSide() + this.height],\n            0, -20, vert)\n        );\n      } else if (vert === \"down\") {\n        this.fireballs[key] = new Projectile(\n          Projectile.fireballVert(\n            [this.rightSide() - (this.width / 2),\n            this.bottomSide() - this.height],\n            0, 20, vert)\n            );\n          this.velY = -3;\n        \n      } else {\n        this.fireballs[key] = new Projectile(\n          Projectile.fireball(\n            [this.rightSide() - (this.width / 10),\n            this.topSide() + (this.height / 5)],\n            20, 0, \"right\")\n        );\n      }\n\n    } else if (this.direction === \"left\") {\n\n      if (vert === \"up\") {\n        this.fireballs[key] = new Projectile(\n          Projectile.fireballVert(\n            [this.rightSide() - (this.width * .75),\n              this.y + (this.height)],\n            // [this.rightSide() - (this.width / 2),\n            // this.bottomSide() + this.height],\n            0, -20, vert)\n        );\n      } else if (vert === \"down\") {\n        this.fireballs[key] = new Projectile(\n          Projectile.fireballVert(\n            [this.rightSide() - (this.width / 2),\n            this.bottomSide() - this.height],\n            0, 20, vert)\n        );\n        this.velY -= 10;\n        this.jumpCount -= 1;\n      } else {\n        this.fireballs[key] = new Projectile(\n          Projectile.fireball(\n            [\n              this.leftSide() - (this.width + (this.width / 2)),\n              this.topSide() + (this.height / 5)\n            ],\n            -20,\n            0,\n            \"left\"\n          )\n        );\n      }\n\n    }\n    this.fireballs[key].launchSound.play();\n\n  }\n    \n  setHit(damage = 10) {\n    if (!this.isHit) {\n      this.isHit = true;\n      this.hitCooldown = setTimeout(() => {\n        this.isHit = false;\n      }, 2000);\n      this.health -= damage;\n      this.setDamageMeter(damage);\n    }\n  }\n\n  setDamageMeter(damage) {\n    if (!this.damageBoost) {\n      this.damageMeter += damage;\n\n\n      if (this.damageMeter >= 100) {\n        this.damageMeter = 100;\n        this.damageBoost = true;\n        this.damageBoostCountdown();\n      }\n    }\n  }\n\n  damageBoostCountdown() {\n    this.damageMeterInterval = setInterval(() => {\n      this.damageMeter -= 1;\n      if (this.damageMeter <= 0) {\n        this.damageMeter = 0;\n        clearInterval(this.damageMeterInterval);\n        this.damageBoost = false;\n      };\n    }, 100);\n  }\n\n  setDying() {\n\n    if (this.health <= 0) {\n      this.health = 0;\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      setTimeout(() => {\n        this.dead = true;\n      }, 1000);\n    }\n  }\n\n\n  rightSide() {\n    return this.x + this.width;\n  }\n\n  leftSide() {\n    return this.x;\n  }\n\n  topSide() {\n    return this.y;\n  }\n\n  bottomSide() {\n    return this.y + this.height;\n  }\n\n  \n  setOldPos() {\n    this.oldX = this.x;\n    this.oldY = this.y;\n  }\n\n  getDirX() {\n    return this.x + this.velX;\n  }\n\n  getDirY() {\n    return this.y + this.velY;\n  }\n\n  isIdle() {\n    if (this.velX === 0 && this.velY === 0) {\n      this.idle = true;\n    } else {\n      this.idle = false;\n    }\n  }\n\n  inAir() {\n    if (!this.onGround ) {\n      this.y += this.velY;\n      (this.velY + CONSTANTS.GRAVITY > 25) ? this.velY = 25 : this.velY += CONSTANTS.GRAVITY;\n    } else {\n      this.velY = 0;\n    }\n  }\n\n  isClimbing() {\n    if (this.climbing && this.canClimb && this.keydown) {\n      this.y += this.velY;\n    } else {\n      this.velY = 0;\n    }\n  }\n\n  // isDashing() {\n  //   if (this.dashing && this.runningKeyDown) {\n  //     if (this.velX > 7) {\n  //       this.velX -= .1;\n  //     } else if (this.velX < -7) {\n  //       this.velX += .1;\n  //     }\n        \n  //   } \n  //   // else if (this.dashing && !this.runningKeyDown) {\n  //   //   if (this.velX > 0) {\n  //   //     this.velX -= .5;\n  //   //   } else if (this.velX < 0) {\n  //   //     this.velX += .5;\n  //   //   }\n  //   // }\n\n  // }\n\n  // dash() {\n  //   if (this.dashing) return;\n\n  //   this.dashing = true;\n  //   this.velX = (this.direction === \"right\") ? 15 : -15;\n  //   this.dashTimeout = setTimeout(() => {\n  //     this.dashing = false;\n  //   }, 1000)\n  // }\n\n\n  jump() {\n    if (this.jumpCount === 2) {\n      this.onGround = false;\n      this.velY = 0 - 15;\n      this.jumpCount = 1;\n    } else if (this.jumpCount === 1) {\n      this.velY = 0 - 15;\n      this.jumpCount = 0;\n    }\n  }\n\n  climb() {\n    this.climb = (this.climb) ? false : true;\n  }\n\n\n\n\n  setRunning() {\n    if (this.velX !== 0) {\n      this.isRunning = true;\n      this.width = this.runWidth;\n    } else {\n      this.isRunning = false;\n      this.width = this.idleWidth;\n    }\n  }\n\n\n\n  whichDirection() {\n    this.direction = this.velX >= 0 ? \"right\" : \"left\";\n  }\n\n}\n\nexport default Player;","import Player from \"../Player\";\nimport Projectile from \"../Objects/Projectiles/Projectile\";\n// import ElectricBall from \"../Objects/Projectiles/ElectricBall\";\nimport Enemy from \"../Objects/Enemies/Enemy\";\n// import Helicopter from \"../Objects/Enemies/Helicopter\";\n\nclass Collision {\n  constructor() {\n\n\n    this.collidePlayer = this.collidePlayer.bind(this);\n    this.collidePlatform = this.collidePlatform.bind(this);\n    this.collidePlatTop = this.collidePlatTop.bind(this);\n    this.collidePlatBottom = this.collidePlatBottom.bind(this);\n    this.collidePlatLeft = this.collidePlatLeft.bind(this);\n    this.collidePlatRight = this.collidePlatRight.bind(this);\n    // this.collidePlatformSlopeRight = this.collidePlatformSlopeRight.bind(this);\n    this.collideSlopeFortyFiveRight = this.collideSlopeFortyFiveRight.bind(this);\n    this.collideSlopeFortyFiveRightBottom = this.collideSlopeFortyFiveRightBottom.bind(this);\n    this.collideSlopeFortyFiveLeft = this.collideSlopeFortyFiveLeft.bind(this);\n    this.collideSlopeFortyFiveLeftBottom = this.collideSlopeFortyFiveLeftBottom.bind(this);\n\n    this.collideSlopeTwentyLeft = this.collideSlopeTwentyLeft.bind(this);\n    this.collideSlopeTwentyLeftBottom = this.collideSlopeTwentyLeftBottom.bind(this);\n\n    this.collideSlopeTwentyRight = this.collideSlopeTwentyRight.bind(this);\n    this.collideSlopeTwentyRightBottom = this.collideSlopeTwentyRightBottom.bind(this);\n    \n    this.climbable = this.climbable.bind(this);\n\n    this.collideEnemy = this.collideEnemy.bind(this);\n\n    this.collisionPlatformKeys = {\n      1: (obj, x, y, colVal, tileSize) => {\n        this.collidePlatTop(obj, y);\n      },\n      2: (obj, x, y, colVal, tileSize) => {\n        ////thin platform\n        if (obj.velY > 0) {\n          this.collidePlatTop(obj, y);\n        }\n      },\n      3: (obj, x, y, colVal, tileSize) => {\n        /// bottom\n        this.collidePlatBottom(obj, y + tileSize);\n      },\n      4: (obj, x, y, colVal, tileSize) => {\n        ///left\n        this.collidePlatLeft(obj, x);\n      },\n      5: (obj, x, y, colVal, tileSize) => {\n        ///right\n        this.collidePlatRight(obj, x + tileSize);\n      },\n      6: (obj, x, y, colVal, tileSize) => {\n        ///top / left\n        ///  __\n        /// |\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          // this.collidePlatTop(obj, y)\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      7: (obj, x, y, colVal, tileSize) => {\n        ///top / right\n        ///  __\n        ///    |\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n        }\n      },\n      8: (obj, x, y, colVal, tileSize) => {\n        /// bottom / left\n        ///   __|\n\n        if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      9: (obj, x, y, colVal, tileSize) => {\n        /// bottom / right\n        ///   |__\n        if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x);\n        }\n      },\n      10: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom\n        //// ___\n        //// ___\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          this.collidePlatBottom(obj, y + tileSize);\n        }\n      },\n      11: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom / left\n        ////   ___\n        ////  |___ \n\n        if (obj.velY > 0) {\n          if (this.collidePlatTop(obj, y)) {\n            return;\n          } else if (this.collidePlatBottom(obj, y + tileSize)) {\n            return;\n          } else {\n            this.collidePlatLeft(obj, x);\n          }\n        }\n      },\n      12: (obj, x, y, colVal, tileSize) => {\n        ///top / left / right\n        ////  ___\n        //// |   | \n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else if (this.collidePlatRight(obj, x + tileSize)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      13: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom / right\n        ////  ___\n        ////  ___| \n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n        }\n      },\n      14: (obj, x, y, colVal, tileSize) => {\n        ///bottom / left / right\n        ////  \n        //// |___|\n        if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else if (this.collidePlatRight(obj, x + tileSize)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      15: (obj, x, y, colVal, tileSize) => {\n        //top half in\n        if (obj.velY > 0) {\n\n          this.collidePlatTop(obj, y + tileSize / 2);\n        }\n      },\n      16: (obj, x, y, colVal, tileSize) => {\n        //bottom half in\n        this.collidePlatBottom(obj, y + tileSize / 2);\n      },\n      17: (obj, x, y, colVal, tileSize) => {\n        //left half in\n        this.collidePlatLeft(obj, x + tileSize / 2);\n      },\n      18: (obj, x, y, colVal, tileSize) => {\n        //right half in\n        this.collidePlatRight(obj, x + tileSize / 2);\n      },\n      19: (obj, x, y, colVal, tileSize) => {\n        //top  half in/ left\n        ///\n        ///|---\n        if (this.collidePlatTop(obj, y + tileSize / 2)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      20: (obj, x, y, colVal, tileSize) => {\n        //top  half in/ right\n        /// ---|\n\n        if (this.collidePlatTop(obj, y + tileSize / 2)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n        }\n      },\n      21: (obj, x, y, colVal, tileSize) => {\n        //bottom half in/ left\n        ///\n        ///|---\n        if (this.collidePlatBottom(obj, y + tileSize / 2)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      22: (obj, x, y, colVal, tileSize) => {\n        //bottom half in/ right\n        /// ---|\n\n        if (this.collidePlatBottom(obj, y + tileSize / 2)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n        }\n      },\n      23: (obj, x, y, colVal, tileSize) => {\n        //top / left half in\n        if (this.collidePlatLeft(obj, x + tileSize / 2)) {\n          return;\n        } else if (obj.x + obj.width > x + tileSize / 2) {\n          this.collidePlatTop(obj, y);\n        }\n      },\n      24: (obj, x, y, colVal, tileSize) => {\n        //top / right half in\n        if (this.collidePlatRight(obj, x + tileSize / 2)) {\n          return;\n        } else if (obj.x < x + tileSize / 2 || obj.x + this.width > x) {\n          this.collidePlatTop(obj, y);\n        }\n      },\n      25: (obj, x, y, colVal, tileSize) => {\n        //bottom / left half in\n        if (this.collidePlatLeft(obj, x + tileSize / 2)) {\n          return;\n        } else if (obj.x + obj.width > x + tileSize / 2) {\n          this.collidePlatBottom(obj, y + tileSize);\n        }\n      },\n      26: (obj, x, y, colVal, tileSize) => {\n        //bottom / right half in\n        if (this.collidePlatRight(obj, x + tileSize / 2)) {\n          return;\n        } else if (obj.x < x + tileSize / 2) {\n          this.collidePlatBottom(obj, y + tileSize);\n        }\n      },\n      27: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom / left half in\n        ////   ___\n        ////  |___ \n        if (obj.x + obj.width > x) {\n          if (this.collidePlatLeft(obj, x + tileSize / 2)) {\n            return;\n          } else if (\n            this.collidePlatBottom(obj, y + tileSize)) {\n            return;\n          } else {\n            this.collidePlatTop(obj, y);\n          }\n        }\n      },\n      28: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom / right half in\n        ////   ___\n        ////   ___| \n        if (obj.x < x + tileSize) {\n          if (this.collidePlatRight(obj, x + tileSize / 2)) {\n            return;\n          } else if (this.collidePlatBottom(obj, y + tileSize)) {\n            return;\n          } else {\n            this.collidePlatTop(obj, y);\n          }\n        }\n      },\n\n      29: (obj, x, y, colVal, tileSize) => {\n        //top half in/ left half in\n        ///\n        ///|---\n        if (obj.x + obj.width > x && obj.y + obj.height > y) {\n          if (this.collidePlatTop(obj, y + tileSize / 2)) {\n            return;\n          } else {\n            this.collidePlatLeft(obj, x + tileSize / 2);\n          }\n        }\n      },\n      30: (obj, x, y, colVal, tileSize) => {\n        //top half in/ right half in\n        /// ---|\n        if (obj.x < x + (tileSize / 2) && obj.y + obj.height > y + (tileSize / 2)) {\n\n          if (this.collidePlatTop(obj, y + tileSize / 2)) {\n            return;\n          } else {\n            this.collidePlatRight(obj, x + tileSize / 2);\n        }\n        }\n      },\n      31: (obj, x, y, colVal, tileSize) => {\n        //bottom half in/ left half in\n        ///\n        ///|---\n        if (obj.x > x && obj.y < y + tileSize) {\n\n          if (this.collidePlatBottom(obj, y + tileSize / 2)) {\n            return;\n          } else {\n            this.collidePlatLeft(obj, x + tileSize / 2);\n          }\n        }\n      },\n      32: (obj, x, y, colVal, tileSize) => {\n        //bottom half in/ right half in\n        /// ---|\n        if (obj.x < x + tileSize && obj.y < y + tileSize) {\n\n          if (this.collidePlatBottom(obj, y + tileSize / 2)) {\n            return;\n          } else {\n            this.collidePlatRight(obj, x + tileSize / 2);\n          }\n        }\n      },\n      33: (obj, x, y, colVal, tileSize) => {\n        ////For Bottom of Screen\n          this.collidePlatTop(obj, y + (tileSize * 0.8));\n      },\n\n      34: (obj, x, y, colVal, tileSize) => {\n        //////////SLOPES/////////////\n        //45 deg left\n\n        if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else {\n          (this.collideSlopeFortyFiveLeft(obj, x + tileSize, y + tileSize))\n\n        }\n      },\n      35: (obj, x, y, colVal, tileSize) => {\n        //45 deg right\n        this.collideSlopeFortyFiveRight(obj, x, y + tileSize);\n      },\n      36: (obj, x, y, colVal, tileSize) => {\n        //22 deg left bottom half\n        this.collideSlopeTwentyLeft(obj, x + tileSize, y + tileSize);\n      },\n      37: (obj, x, y, colVal, tileSize) => {\n        //22 deg right bottom half\n        this.collideSlopeTwentyRight(obj, x, y + tileSize);\n      },\n      38: (obj, x, y, colVal, tileSize) => {\n        //22 deg left top half\n        this.collideSlopeTwentyLeft(obj, x, y + tileSize, 30);\n      },\n      39: (obj, x, y, colVal, tileSize) => {\n        //22 deg right top half\n        this.collideSlopeTwentyRight(obj, x, y + tileSize, tileSize / 2);\n      },\n\n\n      40: (obj, x, y, colVal, tileSize) => {\n        //////////////COLLIDE WITH BOTTOM OF SLOPE//////////\n        //45 deg right bottom\n        ///  /\n        this.collideSlopeFortyFiveRightBottom(obj, x, y + tileSize);\n      },\n      41: (obj, x, y, colVal, tileSize) => {\n        //45 deg left bottom\n          ///  \\\n        this.collideSlopeFortyFiveLeftBottom(obj, x + tileSize, y + tileSize);\n      },\n      42: (obj, x, y, colVal, tileSize) => {\n        //22 deg left bottom / bottom half\n        this.collideSlopeTwentyLeftBottom(obj, x + tileSize, y + tileSize);\n      },\n      43: (obj, x, y, colVal, tileSize) => {\n        //22 deg right bottom / bottom half\n        this.collideSlopeTwentyRightBottom(obj, x, y + tileSize );\n      },\n      44: (obj, x, y, colVal, tileSize) => {\n        //22 deg left bottom / top half\n        this.collideSlopeTwentyLeftBottom(obj, x + tileSize, y + tileSize, tileSize / 2);\n      },\n      45: (obj, x, y, colVal, tileSize) => {\n        //22 deg right bottom / top half\n        this.collideSlopeTwentyRightBottom(obj, x, y + tileSize, tileSize / 2);\n      },\n\n      \n      46: (obj, x, y, colVal, tileSize) => {\n        //45 deg left bottom / top\n        ///  \n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          this.collideSlopeFortyFiveLeftBottom(obj, x, y + tileSize);\n        }\n      },\n      47: (obj, x, y, colVal, tileSize) => {\n        //45 deg right bottom / top\n        ///\n        if (obj.velY > 0) {\n          if (this.collidePlatTop(obj, y)) {\n            return;\n          }\n        }\n        this.collideSlopeFortyFiveRightBottom(obj, x, y + tileSize);\n      },\n\n\n      48: (obj, x, y, colVal, tileSize) => {\n        //45 deg left & left\n        ///  |\\\n        if (this.collidePlatLeft(obj, x)) {\n          return;\n        } else {\n          this.collideSlopeFortyFiveLeft(obj, x, y + tileSize);\n        }\n      },\n      49: (obj, x, y, colVal, tileSize) => {\n        //45 deg left  & right\n        /// /| \n        if (this.collidePlatRight(obj, x + tileSize)) {\n          return;\n        } else {\n          this.collideSlopeTwentyRight(obj, x, y + tileSize, tileSize / 2);\n        }\n      },\n      50: (obj, x, y, colVal, tileSize) => {\n        //22 deg left top half & left\n        ///  |\\\n        if (this.collidePlatLeft(obj, x)) {\n          return;\n        } else {\n          this.collideSlopeTwentyLeft(obj, x, y + tileSize, tileSize / 2);\n        }\n      },\n      51: (obj, x, y, colVal, tileSize) => {\n        //22 deg left top half & right\n        /// /| \n        if (this.collidePlatRight(obj, x + tileSize)) {\n          return;\n        } else {\n          this.collideSlopeTwentyRight(obj, x, y + tileSize, tileSize / 2);\n        }\n      },\n\n\n      53: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom / left / right\n        ////   ___\n        ////  |___ |\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else if (this.collidePlatRight(obj, x + tileSize)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n\n      54: (obj, x, y, colVal, tileSize) => {\n        ////For Bottom of Screen\n        if (this.collidePlatTop(obj, y + (tileSize * 0.9))) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n          return;\n        }\n      },\n\n      58: (obj, x, y, colVal, tileSize) => {\n        // climb\n\n      if (obj.x + obj.width > x + (tileSize / 4) && obj.x < x + (tileSize * (3/4))) {\n\n          this.climbable(obj, x, y, tileSize);\n        } else if (this.collidePlatTop(obj, y)) {\n          return;\n        }\n      },\n\n\n      63: (obj, x, y, colVal, tileSize) => {\n        ///right / left / bottom thorn\n        if (this.collidePlatLeft(obj, x)) {\n          if (obj instanceof Player) {\n            obj.setHit(5);\n          }\n          return;\n        } else if (this.collidePlatBottom(obj, y + tileSize / 6)) {\n          if (obj instanceof Player) {\n            obj.setHit(5);\n          }\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n          if (obj instanceof Player) {\n            obj.setHit(5);\n          }\n        }\n      },\n      67: (obj, x, y, colVal, tileSize) => {\n        ///thorn bottom\n        this.collidePlatBottom(obj, y + tileSize / 6);\n        if (obj instanceof Player) {\n          obj.setHit(5);\n        }\n      },\n    };\n\n\n  //   this.colsionPlatformKeys = {\n  //     1: (obj, x, y, colVal, tileSize) => {\n  //       this.collidePlatTop(obj, y);\n  //     },\n  //     2: (obj, x, y, colVal, tileSize) => {\n  //       ////thin platform\n  //       if (obj.velY > 0) {\n  //         this.collidePlatTop(obj, y);\n  //       }\n  //     },\n  //     3: (obj, x, y, colVal, tileSize) => {\n  //       ///top / left\n  //       if (this.collidePlatTop(obj, y)) {\n  //         return;\n  //       } else {\n  //         // this.collidePlatTop(obj, y)\n  //         this.collidePlatLeft(obj, x);\n  //       }\n  //     },\n  //     4: (obj, x, y, colVal, tileSize) => {\n  //       ///top / left / right\n  //       if (this.collidePlatTop(obj, y)) {\n  //         return;\n  //       } else if (this.collidePlatRight(obj, x + tileSize)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatLeft(obj, x);\n  //       }\n  //     },\n  //     5: (obj, x, y, colVal, tileSize) => {\n  //       ///top / bottom / right\n  //       if (this.collidePlatTop(obj, y)) {\n  //         return;\n  //       } else if (this.collidePlatBottom(obj, y + tileSize)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatRight(obj, x + tileSize);\n  //       }\n  //     },\n  //     6: (obj, x, y, colVal, tileSize) => {\n  //       ///top / bottom\n  //       if (this.collidePlatTop(obj, y)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatBottom(obj, y + tileSize);\n  //       }\n  //     },\n  //     7: (obj, x, y, colVal, tileSize) => {\n  //       ///thorn bottom\n  //       this.collidePlatBottom(obj, y + tileSize / 6);\n  //       if (obj instanceof Player) {\n  //         obj.setHit(5);\n  //       }\n  //     },\n  //     8: (obj, x, y, colVal, tileSize) => {\n  //       ///top / right\n  //       if (this.collidePlatTop(obj, y)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatRight(obj, x + tileSize);\n  //       }\n  //     },\n  //     9: (obj, x, y, colVal, tileSize) => {\n  //       ///left\n  //       this.collidePlatLeft(obj, x);\n  //     },\n  //     10: (obj, x, y, colVal, tileSize) => {\n  //       ///right\n  //       this.collidePlatRight(obj, x + tileSize);\n  //     },\n  //     11: (obj, x, y, colVal, tileSize) => {\n  //       ///right / left / bottom thorn\n  //       if (this.collidePlatLeft(obj, x)) {\n  //         if (obj instanceof Player) {\n  //           obj.setHit(5);\n  //         }\n  //         return;\n  //       } else if (this.collidePlatBottom(obj, y + tileSize / 6)) {\n  //         if (obj instanceof Player) {\n  //           obj.setHit(5);\n  //         }\n  //         return;\n  //       } else {\n  //         this.collidePlatRight(obj, x + tileSize);\n  //         if (obj instanceof Player) {\n  //           obj.setHit(5);\n  //         }\n  //       }\n  //     },\n  //     12: (obj, x, y, colVal, tileSize) => {\n  //       //top / left half in\n  //       if (this.collidePlatLeft(obj, x + tileSize / 2)) {\n  //         return;\n  //       } else if (obj.x + obj.width > x + tileSize / 2) {\n  //         this.collidePlatTop(obj, y);\n  //       }\n  //     },\n  //     13: (obj, x, y, colVal, tileSize) => {\n  //       //top / right half in\n  //       if (this.collidePlatRight(obj, x + tileSize / 2)) {\n  //         return;\n  //       } else if (obj.x < x + tileSize / 2) {\n  //         this.collidePlatTop(obj, y);\n  //       }\n  //     },\n  //     14: (obj, x, y, colVal, tileSize) => {\n  //       /// bottom / left\n  //       if (this.collidePlatBottom(obj, y + tileSize)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatLeft(obj, x);\n  //       }\n  //     },\n  //     15: (obj, x, y, colVal, tileSize) => {\n  //       /// bottom / right\n  //       if (this.collidePlatBottom(obj, y + tileSize)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatRight(obj, x);\n  //       }\n  //     },\n  //     16: (obj, x, y, colVal, tileSize) => {\n  //       /// bottom\n  //       this.collidePlatBottom(obj, y + tileSize);\n  //     },\n  //     17: (obj, x, y, colVal, tileSize) => {\n  //       ///left\n  //       this.collidePlatLeft(obj, x);\n  //     },\n\n  //     18: (obj, x, y, colVal, tileSize) => {\n  //       //45 deg right\n  //       this.collideSlopeFortyFiveRight(obj, x, y + tileSize);\n  //     },\n  //     19: (obj, x, y, colVal, tileSize) => {\n  //       //45 deg left\n  //       this.collideSlopeFortyFiveLeft(obj, x + tileSize, y + tileSize);\n  //     },\n  //     20: (obj, x, y, colVal, tileSize) => {\n  //       //22 deg right bottom half\n  //       this.collideSlopeTwentyRight(obj, x, y + tileSize);\n  //     },\n  //     21: (obj, x, y, colVal, tileSize) => {\n  //       //22 deg left bootom half\n  //       this.collideSlopeTwentyLeft(obj, x + tileSize, y + tileSize);\n  //     },\n  //     22: (obj, x, y, colVal, tileSize) => {\n  //       //22 deg right top half\n  //       this.collideSlopeTwentyRight(obj, x, y + tileSize, tileSize / 2);\n  //     },\n  //     23: (obj, x, y, colVal, tileSize) => {\n  //       //22 deg left top half\n  //       this.collideSlopeTwentyLeft(obj, x, y + tileSize, tileSize / 2);\n  //     },\n  //     24: (obj, x, y, colVal, tileSize) => {\n  //       //22 deg left top half & left\n  //       ///refactor////\n  //       if (this.collidePlatLeft(obj, x)) {\n  //         return;\n  //       } else {\n  //         this.collideSlopeTwentyLeft(obj, x, y + tileSize, tileSize / 2);\n  //       }\n  //     },\n  //     25: (obj, x, y, colVal, tileSize) => {\n  //       //right half in\n  //       this.collidePlatRight(obj, x + tileSize / 2);\n  //     },\n  //     26: (obj, x, y, colVal, tileSize) => {\n  //       //left half in\n  //       this.collidePlatLeft(obj, x + tileSize / 2);\n  //     },\n  //     27: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ right half in\n  //       if (this.collidePlatRight(obj, x + tileSize / 2)) {\n  //         return;\n  //       } else if (obj.x < x + tileSize / 2) {\n  //         this.collidePlatTop(obj, y + tileSize / 2);\n  //       }\n  //     },\n  //     28: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ right half in / bottom\n  //       if (obj.x < x + tileSize / 2) {\n  //         if (this.collidePlatTop(obj, y + tileSize / 2)) {\n  //           return;\n  //         } else if (this.collidePlatBottom(obj, y + tileSize)) {\n  //           return;\n  //         } else {\n  //           this.collidePlatRight(obj, x + tileSize / 2);\n  //         }\n  //       }\n  //     },\n  //     29: (obj, x, y, colVal, tileSize) => {\n  //       //top half in\n  //       this.collidePlatTop(obj, y + tileSize / 2);\n  //     },\n  //     30: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ left half in / bottom\n  //       if (obj.x + obj.width > x + tileSize / 2) {\n  //         if (this.collidePlatTop(obj, y + tileSize / 2)) {\n  //           return;\n  //         } else if (this.collidePlatBottom(obj, y + tileSize)) {\n  //           return;\n  //         } else {\n  //           this.collidePlatLeft(obj, x + tileSize / 2);\n  //         }\n  //       }\n  //     },\n  //     31: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ right\n  //       if (this.collidePlatTop(obj, y + tileSize / 2)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatRight(obj, x + tileSize);\n  //       }\n  //     },\n  //     32: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ left\n  //       if (this.collidePlatTop(obj, y + tileSize / 2)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatLeft(obj, x);\n  //       }\n  //     },\n  //     33: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ left\n  //       if (obj.x > x + (tileSize / 4) && obj.x < x + (tileSize * (3/4))) {\n\n  //         this.climbable(obj, x, y, tileSize);\n  //       }\n  //     }\n  //   };\n  }\n\n  collidePlayer(player, canvas, cleared) {\n    if (player.x < 0) {\n      player.x = 0.01;\n      player.velX = 0;\n    } else if (player.x + player.width > canvas.width && !cleared) {\n      player.x = canvas.width - player.width;\n      player.velX = 0;\n    }\n\n    // if (player.y < 0) {\n    //   player.velY = 0;\n    //   player.y = 0.01;\n    // } else\n    if (player.y > canvas.height) {\n      // player.velY = 0;\n      // player.y = canvas.height - player.height - 0.1;\n      // player.jumpCount = 2;\n      // player.onGround = true;\n      // player.dead = true;\n      player.y = 0;\n      player.setHit(50);\n    }\n  }\n\n  climbable(obj, x, y) {\n    obj.canClimb = true;\n  }\n\n  collideProjectile(obj1, obj2) {\n    // if (!obj1 || !obj2) return false;\n    // if (obj2.dying || obj2.dead) return false;\n    let hitBox = obj2.hitBox();\n \n\n    if (\n      obj1.x < hitBox.right &&\n      obj1.x + obj1.width > hitBox.left &&\n      obj1.y < hitBox.bottom &&\n      obj1.y + obj1.height > hitBox.top\n    ) {\n      obj1.velY = -(obj1.velY / 3);\n      obj1.velX = -(obj1.velX / 3);\n      ///hit\n      obj1.setHit(obj2.damage);\n      obj2.setHit();\n      ///change Hit\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  collideEnemy(obj1, obj2) {\n    // if (!obj1 || !obj2) return false;\n    if (obj2.dying || obj2.dead) return false;\n\n    if (\n      obj1.x < obj2.x + obj2.width &&\n      obj1.x + obj1.width > obj2.x &&\n      obj1.y < obj2.y + obj2.height &&\n      obj1.y + obj1.height > obj2.y\n    ) {\n      // if (this.hitBox(obj1, obj2)) {\n      if (obj1 instanceof Player && !obj1.isHit) {\n        obj1.velY = -(obj1.velY / 3);\n        obj1.velX = -(obj1.velX / 3);\n        ///hit\n        obj1.setHit(obj2.damage);\n        return true;\n      }\n      if (obj1 instanceof Projectile) {\n        obj2.setHit(obj1.damage);\n        \n        if (obj2.health <= 0 && obj1.dir === \"down\") {\n          obj2.points *= 2\n        }\n        \n        setTimeout(() => {\n          obj1.setHit();\n\n        }, 10);\n\n        return true;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  ////////PLATFORM COLLISION\n\n  collideSlopeFortyFiveRight(gameObj, tileLeft, tileBottom) {\n    ///60 x60 120 y 60 120 (60, 120] [ 60, 120])\n    let tileY = tileBottom - (gameObj.rightSide() - tileLeft);\n    if (gameObj instanceof Player) {\n      if (gameObj.onGround) {\n        if (\n          gameObj.bottomSide() > tileBottom &&\n          gameObj.oldY + gameObj.height < tileBottom\n        ) {\n          gameObj.velY = 0;\n          gameObj.y = tileBottom - gameObj.height - 0.2;\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          return;\n        }\n        gameObj.y = tileY - gameObj.height - 0.2;\n      } else if (!gameObj.onGround) {\n        if (\n          gameObj.rightSide() > tileLeft &&\n          gameObj.bottomSide() > tileY &&\n          gameObj.oldY + gameObj.height < tileY\n        ) {\n          gameObj.vlY = 0;\n\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          // gameObj.getDirY() + 60 > tileY) {\n          gameObj.y = tileY - gameObj.height - 0.2;\n        }\n      }\n    }\n    if (gameObj instanceof Projectile) {\n      gameObj.setHit();\n      //set null\n      return true;\n    }\n  }\n\n  collideSlopeFortyFiveRightBottom(gameObj, tileLeft, tileBottom) {\n    ///60 x60 120 y 60 120 (60, 120] [ 60, 120])\n    let tileY = tileBottom - (gameObj.rightSide() - tileLeft);\n    if (\n      gameObj.rightSide() > tileLeft &&\n      gameObj.topSide() < tileY &&\n      gameObj.oldY > tileY\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        //set null\n        return true;\n      }\n      // gameObj.getDirY() + 60 > tileY) {\n      gameObj.y = tileY + 0.05;\n    }\n\n  }\n\n  collideSlopeFortyFiveLeft(gameObj, tileRight, tileBottom) {\n    let tileY = tileBottom - (tileRight - gameObj.leftSide());\n    if (gameObj instanceof Player) {\n      if (gameObj.onGround) {\n        if (\n          gameObj.bottomSide() > tileBottom &&\n          gameObj.oldY + gameObj.height < tileBottom\n        ) {\n          gameObj.velY = 0;\n\n          gameObj.y = tileBottom - gameObj.height - 0.02;\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          return;\n        }\n        gameObj.y = tileY - gameObj.height - 0.02;\n      } else if (!gameObj.onGround) {\n        if (\n          gameObj.leftSide() < tileRight &&\n          gameObj.bottomSide() > tileY &&\n          gameObj.oldY + gameObj.height < tileY\n        ) {\n          gameObj.velY = 0;\n\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          gameObj.y = tileY - gameObj.height - 0.02;\n        }\n      }\n    }\n    if (gameObj instanceof Projectile) {\n      gameObj.setHit();\n      //set null\n      return true;\n    }\n  }\n\n  collideSlopeFortyFiveLeftBottom(gameObj, tileRight, tileBottom) {\n    let tileY = tileBottom - (tileRight - gameObj.leftSide());\n    if (\n      gameObj.leftSide() < tileRight &&\n      gameObj.topSide() < tileY &&\n      gameObj.oldY > tileY\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        //set null\n        return true;\n      }\n      // gameObj.getDirY() + 60 > tileY) {\n      gameObj.y = tileY + 0.05;\n    }\n\n    \n\n  }\n\n \n\n  collideSlopeTwentyRight(gameObj, tileLeft, tileBottom, half = 0) {\n\n    let tileY = tileBottom - (half + (gameObj.rightSide() - tileLeft) / 2);\n    if (gameObj instanceof Player) {\n      if (gameObj.onGround) {\n        if (\n          gameObj.bottomSide() > tileBottom &&\n          gameObj.oldY + gameObj.height < tileBottom\n        ) {\n          gameObj.y = tileBottom - gameObj.height - 0.05;\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          return;\n        }\n        gameObj.y = tileY - gameObj.height - 0.05;\n      } else if (!gameObj.onGround) {\n        if (\n          gameObj.rightSide() > tileLeft &&\n          gameObj.bottomSide() > tileY &&\n          gameObj.oldY + gameObj.height < tileY\n        ) {\n          gameObj.velY = 0;\n\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n\n          gameObj.y = tileY - gameObj.height - 0.05;\n        }\n      }\n    }\n    if (gameObj instanceof Projectile) {\n      gameObj.setHit();\n      //set null\n      return true;\n    }\n  }\n\n  collideSlopeTwentyRightBottom(gameObj, tileLeft, tileBottom, half = 0) {\n\n    let tileY = tileBottom - (half + (gameObj.rightSide() - tileLeft) / 2);\n    if (\n      gameObj.rightSide() > tileLeft &&\n      gameObj.topSide() < tileY &&\n      gameObj.oldY > tileY\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        //set null\n        return true;\n      }\n      gameObj.y = tileY + 0.05;\n    }\n\n  }\n\n\n  collideSlopeTwentyLeft(gameObj, tileRight, tileBottom, half = 0) {\n    let tileY = tileBottom - (half + (tileRight - gameObj.leftSide()) / 2);\n    if (gameObj instanceof Player) {\n      if (gameObj.onGround) {\n        if (\n          gameObj.bottomSide() > tileBottom &&\n          gameObj.oldY + gameObj.height < tileBottom\n        ) {\n          gameObj.velY = 0;\n\n          gameObj.y = tileBottom - gameObj.height - 0.05;\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          return;\n        }\n        gameObj.y = tileY - gameObj.height - 0.05;\n      } else if (!gameObj.onGround) {\n        if (\n          gameObj.leftSide() < tileRight &&\n          gameObj.bottomSide() > tileY &&\n          gameObj.oldY + gameObj.height < tileY\n        ) {\n          gameObj.velY = 0;\n\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          gameObj.y = tileY - gameObj.height - 0.05;\n        }\n      }\n    }\n    if (gameObj instanceof Projectile) {\n      gameObj.setHit();\n      //set null\n      return true;\n    }\n  }\n\n  collideSlopeTwentyLeftBottom(gameObj, tileRight, tileBottom, half = 0) {\n    let tileY = tileBottom - (half + (tileRight - gameObj.leftSide()) / 2);\n    if (\n      gameObj.leftSide() < tileRight &&\n      gameObj.topSide() < tileY &&\n      gameObj.oldY > tileY\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        //set null\n        return true;\n      }\n      gameObj.y = tileY + 0.05;\n    }\n\n  }\n\n  ///////regular collision\n\n\n  collidePlatTop(gameObj, tileTop) {\n    if (\n      gameObj.bottomSide() > tileTop &&\n      gameObj.oldY + gameObj.height < tileTop\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        //set null\n        return true;\n      }\n      gameObj.velY = 0;\n      gameObj.y = tileTop - gameObj.height - 0.1;\n      if (gameObj instanceof Player) {\n        gameObj.onGround = true;\n        gameObj.jumpCount = 2;\n      }\n      return true;\n    } else {\n      if (gameObj instanceof Player) {\n        gameObj.onGround = false;\n      }\n    }\n    return false;\n  }\n\n  collidePlatBottom(gameObj, tileBottom) {\n    if (\n      gameObj.topSide() < tileBottom &&\n      gameObj.oldY + gameObj.height > tileBottom\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        return true;\n      }\n      gameObj.y = tileBottom + 0.1;\n      gameObj.velY = 0;\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatRight(gameObj, tileRight) {\n    if (\n      gameObj.leftSide() < tileRight &&\n      gameObj.oldX + gameObj.width > tileRight\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        return true;\n      }\n      gameObj.x = tileRight + 0.1;\n      // if (gameObj instanceof Enemy) {\n      //   gameObj.x = -gameObj.x;\n      // }\n      // gameObj.velX = 0;\n\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatLeft(gameObj, tileLeft) {\n    if (gameObj.rightSide() > tileLeft && gameObj.oldX < tileLeft) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        return true;\n      }\n      gameObj.x = tileLeft - gameObj.width - 0.1;\n      // if (!gameObj instanceof Enemy) {\n      //   gameObj.x = -gameObj.x;\n      // }\n      // gameObj.velX = 0;\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatform(gameObject, x, y, colVal, tileSize) {\n    if (!colVal || !this.collisionPlatformKeys[colVal]) return;\n    this.collisionPlatformKeys[colVal](gameObject, x, y, colVal, tileSize);\n  }\n}\n\n\n\nexport default Collision;\n","class Sound {\n    constructor(options) {\n        this.sound = document.createElement(\"audio\");\n        this.sound.src = options.src;\n        this.sound.id = options.idName;\n        this.sound.setAttribute(\"preload\", \"auto\");\n        this.sound.setAttribute(\"controls\", \"none\");\n        this.sound.setAttribute(\"muted\", \"false\");\n\n        this.sound.volume = 0.2;\n\n        this.sound.style.display = \"none\";\n\n        this.play = this.play.bind(this);\n        this.pause = this.pause.bind(this);\n        this.mute = this.mute.bind(this);\n    };\n\n    play() {\n        this.sound.play();\n    }\n\n    pause() {\n        this.sound.pause();\n    }\n\n    mute() {\n        this.sound.muted = !this.sound.muted;\n    }\n\n    static fire() {\n        return {\n            src: \"./assets/Sound/fireSound.mp3\",\n            id: \"fire\"\n        }\n    }\n    static shock() {\n        return {\n            src: \"./assets/Sound/shock.mp3\",\n            id: \"shock\"\n        }\n    }\n}\n\n\n\nexport default Sound;","import GameObject from \"../GameObject\";\nimport Collision from \"../../util/Collision\";\nimport Sound from \"../../util/Sound\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\n\nclass Projectile extends GameObject {\n  constructor(options) {\n    super(options);\n    this.proj = this.loadImage(options.image);\n    // this.impact = ;\n    this.velX = options.velX;\n    this.velY = options.velY;\n    this.oldX = this.x;\n    this.oldY = this.y;\n    this.dir = options.dir || \"right\";\n    this.damage = options.damage;\n    this.impacted = false;\n    this.impactTimeout = options.impactTimeout || 0;\n    this.impactSrc = options.impact;\n    \n    this.frameStartX = options.frameStartX;\n    this.frameStartY = options.frameStartY;\n    this.frameWidth = options.frameWidth;\n    this.frameHeight = options.frameHeight;\n    this.frameNum = options.frameNum;\n\n    this.impactWidth = options.impactWidth;\n    this.impactHeight = options.impactHeight;\n    this.impactFrameWidth = options.impactFrameWidth || this.frameStartX;\n    this.impactFrameHeight = options.impactFrameHeight || this.frameStartY;\n    this.impactStartX = options.impactStartX || 145;\n    this.impactStartY = options.impactStartY || 150;\n\n    this.hitTimeout = options.hitTimeout || 2000;\n\n\n\n    this.tileSize = 60;\n    \n    this.collider = new Collision();\n    this.isHit = false;\n\n    this.launchSound = new Sound(Sound.fire());\n    // this.impactSound = new Sound({ src: this.mapKeys[this.screen].theme });\n\n\n\n    this.loadImage = this.loadImage.bind(this);\n    this.getTopLeftPos = this.getTopLeftPos.bind(this);\n    this.getTopRightPos = this.getTopRightPos.bind(this);\n    this.getBottomLeftPos = this.getBottomLeftPos.bind(this);\n    this.getBottomRightPos = this.getBottomRightPos.bind(this);\n    this.setHit = this.setHit.bind(this);\n    this.timeOutHit = this.timeOutHit.bind(this);\n    this.updateProjectile = this.updateProjectile.bind(this);\n    this.drawProjectile = this.drawProjectile.bind(this);\n    this.drawImpact = this.drawImpact.bind(this);\n\n\n    this.timeOutHit();\n  }\n\n  hitBox() {\n    return {\n      left: this.x,\n      right: this.x + (this.width),\n      top: this.y,\n      bottom: this.y + (this.height)\n    }\n  }\n\n  loadImage(image) {\n    let proj = new Image();\n    proj.src = image;\n    return proj;\n  }\n\n  getTopLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n\n  getTopRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n\n  setHit(pos) {\n\n    // setTimeout(() => {\n      this.proj.src = this.impactSrc;\n      this.impacted = true;\n  \n      this.velX = 0;\n      this.velY = 0;\n    \n      // clearInterval(this.hitTimeout);\n      this.hitTimeout = setTimeout(() => {\n        this.isHit = true;\n  \n      }, 100)\n\n\n    // }, this.impactTimeout)\n  }\n\n  timeOutHit() {\n    this.hitTimeout = setTimeout(() => {\n      this.isHit = true;\n    }, 2000);\n  }\n\n\n  platformCheck() {\n    let colVal;\n    let top;\n    let bottom;\n    let right;\n    let left;\n    let cols = 15;\n\n    if (this.dir === \"left\") {\n      [left, top] = this.getTopLeftPos();\n      colVal = this.physicalMap[top * cols + left];\n      this.collider.collidePlatform(\n        this,\n        left * this.tileSize,\n        top * this.tileSize,\n        colVal\n      );\n        \n      [left, bottom] = this.getBottomLeftPos();\n      colVal = this.physicalMap[bottom * cols + left];\n      this.collider.collidePlatform(\n        this,\n        left * this.tileSize,\n        bottom * this.tileSize,\n        colVal\n      );\n    }\n\n    if (this.dir === \"right\") {\n      [right, top] = this.getTopRightPos();\n      colVal = this.physicalMap[top * cols + right];\n      this.collider.collidePlatform(\n        this.player,\n        right * this.tileSize,\n        top * this.tileSize,\n        colVal\n      );\n  \n      [right, bottom] = this.getBottomRightPos();\n      colVal = this.physicalMap[bottom * cols + right];\n\n      this.collider.collidePlatform(\n        this.player,\n        right * this.tileSize,\n        bottom * this.tileSize,\n        colVal\n      );\n\n    }\n\n  }\n\n  updateProjectile() {\n    this.oldX = this.x;\n    this.oldY = this.y;\n\n    this.x += this.velX;\n    this.y += this.velY;\n  }\n\n  drawProjectile(ctx, frameCount) {\n    if (this.hit) return;\n\n    if (this.impacted) {\n      this.drawImpact(ctx, frameCount);\n      return;\n    }\n\n    this.updateProjectile();\n    if (this.dir === \"up\") {\n      ctx.scale(1, -1);\n\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * 43 + (((frameCount % this.frameNum) + 1) * 21),\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, -this.y + this.height,\n        this.width, this.height\n      );\n      ctx.scale(1, -1);\n\n\n    } else if (this.dir === \"down\") {\n\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * 43 + (((frameCount % this.frameNum) + 1) * 21),\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n\n\n    } else if (this.dir === \"right\") {\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x-this.frameWidth, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  drawImpact(ctx, frameCount) {\n    if (this.dir === \"up\") {\n      ctx.drawImage(\n        this.proj,\n        this.impactStartX,\n        this.impactStartY,\n        this.impactFrameWidth,\n        this.impactFrameHeight,\n        this.x - (this.impactFrameWidth / 3), this.y - (this.impactFrameHeight / 2),\n        this.impactWidth, this.impactHeight\n      );\n\n\n    } else if (this.dir === \"down\") {\n\n      ctx.drawImage(\n        this.proj,\n        this.impactStartX,\n        this.impactStartY,\n        this.impactFrameWidth,\n        this.impactFrameHeight,\n        this.x - (this.impactFrameWidth / 2), this.y + this.height - (this.impactFrameHeight / 2),\n        this.impactWidth, this.impactHeight\n      );\n\n\n    } else if (this.dir === \"right\") {\n      ctx.drawImage(\n        this.proj,\n        this.impactStartX,\n        this.impactStartY,\n        this.impactFrameWidth,\n        this.impactFrameHeight,\n        this.x - this.width / 3, this.y - (this.impactFrameHeight / 3),\n        this.impactWidth, this.impactHeight\n      );\n    } else {\n      ctx.drawImage(\n        this.proj,\n        this.impactStartX,\n        this.impactStartY,\n        this.impactFrameWidth,\n        this.impactFrameHeight,\n        this.x - this.width / 3, this.y - (this.impactFrameHeight / 3),\n        this.impactWidth, this.impactHeight\n      );\n    }\n  }\n\n  static fireball(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 35,\n      height: 12,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n\n      frameStartX: 10,\n      frameStartY: 277,\n      frameWidth: 65,\n      frameHeight: 18,\n      frameNum: 8,\n      image: \"./assets/fireball.png\",\n      impact: \"./assets/burst.png\",\n      impactWidth: 60,\n      impactHeight: 60,\n      impactStartX: 145,\n      impactStartY: 150,\n      impactFrameWidth: 90,\n      impactFrameHeight: 90,\n      damage: 25\n    };\n  }\n\n  static fireballVert(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 12,\n      height: 35,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n      impact: \"./assets/burst.png\",\n\n      frameStartX: 10,\n      frameStartY: 400,\n      frameWidth: 22,\n      frameHeight: 35,\n      frameNum: 8,\n      image: \"./assets/fireball.png\",\n      impactFrameWidth: 90,\n      impactFrameHeight: 90,\n      impactWidth: 60,\n      impactHeight: 60,\n      impactStartX: 145,\n      impactStartY: 150,\n      damage: 25\n    };\n  }\n  \n  static blueFireball(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 70,\n      height: 36,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n\n      frameStartX: 10,\n      frameStartY: 277,\n      frameWidth: 65,\n      frameHeight: 18,\n      frameNum: 8,\n      image: \"./assets/blue_fireball.png\",\n      impact: \"./assets/blue_burst.png\",\n      impactWidth: 60,\n      impactHeight: 60,\n      impactStartX: 145,\n      impactStartY: 150,\n      impactFrameWidth: 90,\n      impactFrameHeight: 90,\n      damage: 50\n    };\n  }\n\n  static blueFireballVert(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 36,\n      height: 70,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n      impact: \"./assets/blue_burst.png\",\n\n      frameStartX: 10,\n      frameStartY: 400,\n      frameWidth: 22,\n      frameHeight: 35,\n      frameNum: 8,\n      image: \"./assets/blue_fireball.png\",\n      impactFrameWidth: 90,\n      impactFrameHeight: 90,\n      impactWidth: 60,\n      impactHeight: 60,\n      impactStartX: 145,\n      impactStartY: 150,\n      damage: 50\n    };\n  }\n\n  static helibullet(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 25,\n      height: 25,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n      frameStartX: 420,\n      frameStartY: 330,\n      frameWidth: 15,\n      frameHeight: 15,\n      frameNum: 1,\n      image: \"./assets/footEn.png\",\n      impact: \"./assets/burst.png\",\n      damage: 10\n    };\n  }\n\n  static electricBall(pos, velX = 0, velY = 1, dir = \"right\") {\n    return {\n      pos: pos,\n      width: 78.5,\n      height: 86,\n      velX: velX,\n      velY: velY,\n      dir: \"up\",\n      frameStartX: 0,\n      frameStartY: 435,\n      frameWidth: 180,\n      frameHeight: 145,\n      frameNum: 4,\n      image: \"./assets/electric_ball.png\",\n      impact: \"./assets/electric_ball.png\",\n      impactTimeout: 6000,\n      impactWidth: 180,\n      impactHeight: 145,\n      impactFrameWidth: 180,\n      impactFrameHeight: 145,\n      hitTimeout: 6000,\n      damage: 20\n    };\n  }\n}\n\nexport default Projectile;\n\n// const fireball = {\n//   name: \"fireball\"\n// }\n\n\n// };","import GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Enemy extends GameObject {\n  constructor(options) {\n    super(options);\n    this.velX = (options.velX) ? options.velX : 0;\n    this.velY = (options.velY) ? options.velY : 0;\n    this.enemy = this.loadImage(options.image);\n    this.frameNum = options.frameNum;\n    this.dir = options.dir || \"right\";\n    this.frameStartX = 68;\n    this.frameStartY = 290;\n    this.frameWidth = 116;\n    this.frameHeight = 80;\n    this.projectiles = {};\n    this.dying = false;\n    this.dead = false;\n    this.health = options.health;\n    this.damage = options.damage;\n    this.isHit = false;\n\n\n    this.setHit = this.setHit.bind(this);\n    this.setDying = this.setDying.bind(this);\n    this.getMidX = this.getMidX.bind(this);\n    this.getMidY = this.getMidY.bind(this);\n\n    this.loadImage = this.loadImage.bind(this);\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n\n    // this.callAttack();\n  }\n\n  getMidX(x = this.x) {\n    return x + (this.width/2);\n  }\n\n  getMidY(y = this.y) {\n    return y + (this.height/2);\n  }\n\n\n\n  loadImage(image) {\n    let enemy = new Image();\n    enemy.src = image;\n    return enemy;\n  }\n\n  setHit(damage = 10) {\n    if (!this.isHit) {\n      this.isHit = true;\n      this.hitCooldown = setTimeout(() => {\n        this.isHit = false;\n      }, 500);\n      this.health -= damage;\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      setTimeout(() => {\n        this.dead = true;\n      }, 1000);\n    }\n  }\n\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    if (this.dir === \"left\") {\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x-this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n    \n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + 30,\n          this.bottomSide() - 23],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - 40,\n          this.bottomSide() - 23],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n\n\n\n  ////////CPU\n  callAttack() {\n    this.attackInterval = setInterval(() => {\n      this.shootProj();\n\n    }, 200);\n  }\n\n\n\n\n\n\n  move(canvas) {\n    this.oldX = this.x;\n    this.x += this.velX;\n\n\n    if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n      this.velX *= -1;\n      this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n    } \n  }\n\n  //////\n  \n\n\n  static helicopter(pos) {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/footEn.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 200,\n      height: 125,\n      velX: 3,\n      dir: \"right\",\n      health: 100,\n      damage: 10\n    };\n  }\n\n  hitBox(obj1, obj2) {\n\n    if (obj1.y < obj2.y + obj2.height && obj1.y > obj2.y + (obj2.height / 2)) {\n      if ((obj2.dir === \"right\" && obj1.x < obj2.x + obj2.width && obj1.x + obj1.width > obj2.x + (obj2.width / 3)) ||\n        (obj2.dir === \"left\" && obj1.x < obj2.x + (obj2.width * (2 / 3)) && obj1.x + obj1.width > obj2.x)){\n        return true;\n      }\n\n    } else if ((obj1.y < (obj2.height / 2) && obj1.y > obj2.y) || obj1.y + obj1.height > obj2.y) {\n      if (obj1.x < obj2.x + obj2.width && obj1.x + obj1.width > obj2.x) {\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nexport default Enemy;\n","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Helicopter extends Enemy {\n  constructor(options) {\n    super(options);\n    this.velX = options.velX || 3;\n    this.velY = 0;\n    this.image = options.image || \"./assets/footEn.png\";\n    this.enemy = this.loadImage(this.image);\n    this.frameNum = options.frameNum || 3;\n    this.frameStartX = options.frameStartX || 68;\n    this.frameStartY = options.frameStartY || 290;\n    this.frameWidth = options.frameWidth || 116;\n    this.frameHeight = options.frameHeight || 80;\n    this.projectiles = {};\n    this.bounds = options.bounds;\n\n    this.points = 6 * options.multiplier;\n\n    this.loadImage = this.loadImage.bind(this);\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n    this.callAttack();\n  }\n\n\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    if (this.dir === \"left\") {\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x - this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n\n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + (this.width * 0.15),\n            this.bottomSide() - (this.height * 0.184)],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - (this.width * 0.2),\n            this.bottomSide() - (this.height * 0.184)],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      setTimeout(() => {\n        this.dead = true;\n      }, 300);\n    }\n  }\n\n  ////////CPU\n  callAttack() {\n    this.attackInterval = setInterval(() => {\n\n      this.shootProj();\n\n    }, 500);\n  }\n\n  move(canvas) {\n    this.oldX = this.x;\n    this.x += this.velX;\n\n    if (this.bounds) {\n      if ((this.x + (this.width / 2)) < this.bounds[0] || this.x + (this.width / 2) > this.bounds[1]) {\n        this.velX *= -1;\n        this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n      }\n    } else {\n      if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n        this.velX *= -1;\n        this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n      }\n\n    }\n\n  }\n\n  //////\n\n\n\n  static hel1(pos, bounds, dir = \"right\", velY, multiplier = 1) {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/footEn.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 200,\n      height: 125,\n      health: 100,\n      velX: (dir === \"left\") ? -3 : 3,\n      velY: velY || 0,\n      dir: dir,\n      damage: 20,\n      bounds: bounds,\n      multiplier: multiplier\n    };\n  }\n  \n  static hel2(pos, bounds, dir = \"right\", multiplier = .5) {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/footEn.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 150,\n      height: 85,\n      health: 100,\n      velX: dir === \"left\" ? -3 : 3,\n      dir: dir,\n      damage: 10,\n      bounds: bounds,\n      multiplier: multiplier\n    };\n  }\n\n}\n\nexport default Helicopter;\n","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Spider extends Enemy {\n  constructor(options) {\n    super(options);\n    this.velX = options.velX || 0;\n    this.velY = options.velY || 1;\n    this.image = options.image;\n    this.enemy = this.loadImage(this.image);\n    this.frameNum = options.frameNum || 4;\n    this.frameStartX = 0;\n    this.frameStartY = 0;\n    this.frameWidth = options.frameWidth || 92.5;\n    this.frameHeight = options.frameHeight || 102;\n    this.frameCount = 0;\n    this.bounds = options.bounds;\n    this.damage = options.damage;\n\n    this.points = 5 * options.multiplier;\n\n\n\n    this.projectiles = {};\n\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n    this.startFrameCount = this.startFrameCount.bind(this);\n\n\n  }\n\n  startFrameCount() {\n    this.enemyInterval = setInterval(() => {\n      this.frameCount++;\n    }, 1000 / 30);\n  }\n\n  drawEnemy(ctx, frameCount = this.frameCount) {\n    this.setDying();\n\n    ctx.beginPath();\n    ctx.moveTo(this.getMidX(this.pos[0]), this.pos[1]);\n    ctx.lineTo(this.getMidX(this.pos[0]), this.getMidY(this.y));\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"rgba(255, 255, 255, 0.5)\";\n    ctx.stroke();\n    ctx.closePath();\n\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n      let count = Math.floor(frameCount / 2.5) % this.frameNum;\n      // let x = (count > 0) ? 20 : this.frameStartX;\n\n\n      ctx.scale(1, -1);\n\n      ctx.drawImage(\n        this.enemy,\n        // (Math.floor(frameCount / 2) % this.frameNum) * this.frameWidth + this.frameStartX,\n        (count % this.frameNum) * this.frameWidth,\n        // (0) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, -this.y - this.height,\n        this.width, this.height\n      );\n      ctx.scale(1, -1);\n  }\n\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      setTimeout(() => {\n        this.dead = true;\n      }, 300);\n    }\n  }\n\n  ////////CPU\n  // callAttack() {\n  //   this.attackInterval = setInterval(() => {\n\n  //     this.shootProj();\n\n  //   }, 500);\n  // }\n\n  // move(canvas) {\n  //   this.oldX = this.x;\n  //   this.x += this.velX;\n\n\n  //   if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n  //     this.velX *= -1;\n  //     this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n  //   }\n  // }\n\n\n\n  move(canvas) {\n    this.oldY = this.y;\n    this.y += this.velY;\n\n    if (this.bounds) {\n      if ((this.y + (this.height)) < this.bounds[0] || this.y + (this.height) > this.bounds[1]) {\n        this.velY *= -1;\n        // this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n      }\n    } else {\n      if ((this.y + (this.height)) < 0 || this.y + (this.height) > canvas.height) {\n        this.velY *= -1;\n        // this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n      }\n\n    }\n\n  }\n  //////\n\n\n\n  static spider1(pos, bounds, multiplier = 1) {\n    return {\n      name: \"spider\",\n      image: \"./assets/spider.png\",\n      frameNum: 15,\n      pos: pos,\n      width: 93,\n      height: 102,\n      health: 110,\n      velX: 0,\n      velY: 3,\n      damage: 25,\n      bounds: bounds,\n      multiplier: multiplier\n    };\n  }\n  static spider2(pos, bounds, multiplier = .6) {\n    return {\n      name: \"spider\",\n      image: \"./assets/spider.png\",\n      frameNum: 15,\n      pos: pos,\n      width: 60.5,\n      height: 76,\n      health: 70,\n      velX: 0,\n      velY: 1.5,\n      damage: 30,\n      bounds: bounds,\n      multiplier: multiplier\n    };\n  }\n  static spider3(pos, bounds, multiplier = 0.2) {\n    return {\n      name: \"spider\",\n      image: \"./assets/spider.png\",\n      frameNum: 15,\n      pos: pos,\n      width: 46.5,\n      height: 56,\n      health: 70,\n      velX: 0,\n      velY: 2.5,\n      bounds: bounds,\n      damage: 50,\n      multiplier: multiplier\n    };\n  }\n\n}\n\nexport default Spider;\n","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Vinehead extends Enemy {\n  constructor(options) {\n    super(options);\n    this.player = options.player;\n    this.velX = options.velX || 0;\n    this.velY = 0;\n    this.image = options.image || \"./assets/vinehead.png\";\n    this.enemy = this.loadImage(this.image);\n    this.frameNum = options.frameNum || 8;\n    this.frameStartX = 0;\n    this.frameStartY = 0;\n    this.frameWidth = options.frameWidth || 57;\n    this.frameHeight = options.frameHeight || 87;\n    this.active = true;\n    this.opening = false;\n    this.projectiles = {};\n    this.playerCheckTimeout = \"\";\n    this.damage = 20;\n\n    this.points = 10 * options.multiplier;\n\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    // this.setPlayerCheckInterval = this.setPlayerCheckInterval.bind();\n    this.checkPlayerPos = this.checkPlayerPos.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n\n\n  }\n\n  checkPlayerPos(x, y, homing) {\n    if (y > this.y) {\n      this.velY = 1;\n    } else {\n      this.velY = -1;\n    }\n\n    if ((y > this.y && y < this.y + this.height) && (x > this.x || x < this.x) ) {\n      this.velX = (this.dir === \"left\") ? -5 : 5;\n    } else {\n      this.velX = (this.dir === \"left\") ? -1 : 1;\n    }\n\n    if (x > this.x && this.dir === \"left\") {\n      // clearTimeout(this.playerCheckTimeout);\n      this.playerCheckTimeout = setTimeout(() => {\n        this.velX = 1;\n        this.dir = \"right\";\n      }, 1000);\n    } else if (x < this.x && this.dir === \"right\") {\n      // clearTimeout(this.playerCheckTimeout);\n      this.playerCheckTimeout = setTimeout(() => {\n        this.velX = -1;\n        this.dir = \"left\";\n\n      }, 1000);\n      \n    } else if ((x > this.x && this.dir === \"right\") || (x < this.x && this.dir === \"left\")) {\n      clearTimeout(this.playerCheckTimeout);\n    }\n  }\n\n  setPlayerCheckInterval(player) {\n    this.playerCheckInterval = setInterval(() => {\n      this.checkPlayerPos(player);\n    }, 2);\n  }\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    if (this.dir === \"right\") {\n      let count = Math.floor(frameCount / 2.5) % this.frameNum;\n\n\n      ctx.drawImage(\n        this.enemy,\n        (Math.floor(frameCount / 1.5) % this.frameNum) * this.frameWidth,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x - this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n\n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + 30,\n          this.bottomSide() - 23],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - 40,\n          this.bottomSide() - 23],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      setTimeout(() => {\n        this.dead = true;\n      }, 300);\n    }\n  }\n\n  ////////CPU\n  // callAttack() {\n  //   this.attackInterval = setInterval(() => {\n\n  //     this.shootProj();\n\n  //   }, 500);\n  // }\n\n  move(canvas, player) {\n    this.oldY = this.y;\n    this.oldX = this.x;\n    this.x += this.velX;\n    this.y += this.velY;\n    this.checkPlayerPos(player.x, player.y);\n\n    // if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n    //   this.velX *= -1;\n    //   this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n    // }\n  }\n\n  //////\n\n\n\n  static vine1(pos, player, dir = \"right\", multiplier = .6) {\n    \n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 65,\n      height: 95,\n      health: 75,\n      velX: 1,\n      dir: dir,\n      player: player,\n      multiplier: multiplier\n    };\n  }\n  static vine2(pos, player, dir = \"right\", multiplier = 1) {\n    \n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 100,\n      height: 145,\n      health: 120,\n      velX: 1,\n      dir: dir,\n      player: player,\n      multiplier: multiplier\n    };\n  }\n  static vine3(pos, player, dir = \"right\", multiplier = .2) {\n    \n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 35,\n      height: 45,\n      health: 50,\n      velX: 1,\n      dir: dir,\n      player: player,\n      multiplier: multiplier\n    };\n  }\n  \n\n}\n\nexport default Vinehead;\n","import GameObject from \"../GameObject\";\nimport Collision from \"../../util/Collision\";\nimport Sound from \"../../util/Sound\";\nimport Projectile from \"./Projectile\";\n\nconst CONSTANTS = {\n    GRAVITY: 0.8,\n    FRICTION: 2.5,\n    MAX_VEL: 50\n};\n\n\nclass ElectricBall extends Projectile {\n    constructor(options) {\n        super(options);\n        this.proj = this.loadImage();\n        this.width = 90;\n        this.height = 72.5;\n        this.velX = 0;\n        this.velY = 1;\n        this.oldX = this.x;\n        this.oldY = this.y;\n        this.damage = options.damage;\n        this.impacted = false;\n        this.impactTimeout = 6000;\n        this.impactSrc = \"./assets/electric_ball.png\";\n\n\n        this.frameStartX = 0;\n        this.frameStartY = 435;\n        this.frameWidth = 180;\n        this.frameHeight = 145;\n        this.frameNum = 4;\n\n        this.impactWidth = 180;\n        this.impactHeight = 145;\n        this.impactStartX = 145;\n        this.impactStartY =  150;\n\n        this.hitTimeout = 6000;\n\n        this.tileSize = 60;\n\n        this.collider = new Collision();\n        this.isHit = false;\n\n        // this.impactSound = new Sound({ src: this.mapKeys[this.screen].theme });\n\n\n        this.loadImage = this.loadImage.bind(this);\n        this.getTopLeftPos = this.getTopLeftPos.bind(this);\n        this.getTopRightPos = this.getTopRightPos.bind(this);\n        this.getBottomLeftPos = this.getBottomLeftPos.bind(this);\n        this.getBottomRightPos = this.getBottomRightPos.bind(this);\n        this.setHit = this.setHit.bind(this);\n        this.timeOutHit = this.timeOutHit.bind(this);\n        this.updateProjectile = this.updateProjectile.bind(this);\n        this.drawProjectile = this.drawProjectile.bind(this);\n        this.drawImpact = this.drawImpact.bind(this);\n        this.hitBox = this.hitBox.bind(this);\n\n        this.impactSound = new Sound(Sound.shock());\n\n        this.timeOutHit();\n    }\n\n    hitBox() {\n        return {\n            left: this.x + (this.width / 5),\n            right: this.x + (this.width * .8),\n            top: this.y + (this.height / 5),\n            bottom: this.y + (this.height * .8)\n        }\n    }\n\n    loadImage() {\n        let proj = new Image();\n        proj.src = \"./assets/electric_ball.png\";\n        return proj;\n    }\n\n    getTopLeftPos() {\n        let x = Math.floor((this.leftSide() + this.width / 5) / this.tileSize);\n        let y = Math.floor((this.topSide() + this.height / 5) / this.tileSize);\n        return [x, y];\n    }\n\n    getTopRightPos() {\n        let x = Math.floor((this.rightSide() - this.width / 5) / this.tileSize);\n        let y = Math.floor((this.topSide() + this.height / 5) / this.tileSize);\n        return [x, y];\n    }\n    getBottomLeftPos() {\n        let x = Math.floor((this.leftSide() + this.width / 5) / this.tileSize);\n        let y = Math.floor((this.bottomSide() - this.height / 5) / this.tileSize);\n        return [x, y];\n    }\n    getBottomRightPos() {\n        let x = Math.floor(this.rightSide() / this.tileSize);\n        let y = Math.floor((this.bottomSide() - this.height / 5) / this.tileSize);\n        return [x, y];\n    }\n\n    setHit() {\n\n        // setTimeout(() => {\n            this.impacted = true;\n            this.impactSound.play();\n            this.proj.src = this.impactSrc;\n            this.width *= 1.7;\n            this.height *= 1.7;\n            this.velX = 0;\n            this.velY = 0;\n\n            setTimeout(() => {\n                this.impactSound.pause();\n                this.isHit = true;\n            }, 3000)\n\n\n        // }, 6000)\n    }\n\n    timeOutHit() {\n        this.hitTimeout = setTimeout(() => {\n            this.isHit = true;\n        }, 7000);\n    }\n\n\n    platformCheck() {\n        let colVal;\n        let top;\n        let bottom;\n        let right;\n        let left;\n        let cols = 15;\n\n        if (this.dir === \"left\") {\n            [left, top] = this.getTopLeftPos();\n            colVal = this.physicalMap[top * cols + left];\n            this.collider.collidePlatform(\n                this,\n                left * this.tileSize,\n                top * this.tileSize,\n                colVal\n            );\n\n            [left, bottom] = this.getBottomLeftPos();\n            colVal = this.physicalMap[bottom * cols + left];\n            this.collider.collidePlatform(\n                this,\n                left * this.tileSize,\n                bottom * this.tileSize,\n                colVal\n            );\n        }\n\n        if (this.dir === \"right\") {\n            [right, top] = this.getTopRightPos();\n            colVal = this.physicalMap[top * cols + right];\n            this.collider.collidePlatform(\n                this.player,\n                right * this.tileSize,\n                top * this.tileSize,\n                colVal\n            );\n\n            [right, bottom] = this.getBottomRightPos();\n            colVal = this.physicalMap[bottom * cols + right];\n\n            this.collider.collidePlatform(\n                this.player,\n                right * this.tileSize,\n                bottom * this.tileSize,\n                colVal\n            );\n\n        }\n\n    }\n\n    updateProjectile() {\n        this.oldX = this.x;\n        this.oldY = this.y;\n\n        this.x += this.velX;\n        this.y += this.velY;\n    }\n\n    drawProjectile(ctx, frameCount) {\n        if (this.isHit) return;\n\n        if (this.impacted) {\n            this.drawImpact(ctx, frameCount);\n            return;\n        }\n        this.updateProjectile();\n\n        ctx.drawImage(\n            this.proj,\n            (frameCount % this.frameNum) * this.frameWidth,\n            // (0) * this.frameWidth,\n            // (frameCount % this.frameNum) * this.frameWidth + (((frameCount % this.frameNum) + 1) * 21),\n            this.frameStartY,\n            this.frameWidth,\n            this.frameHeight,\n            this.x, this.y,\n            this.width, this.height\n        );\n\n\n    }\n\n    drawImpact(ctx, frameCount) {\n        ctx.drawImage(\n            this.proj,\n            (frameCount % this.frameNum) * this.frameWidth,\n            this.frameStartY,\n            180,\n            145,\n            this.x - (180 / 4), this.y - (145 / 4),\n            180, 145\n        );\n\n    }\n\n\n    static electricBall(pos, velX = 0, velY = 1, dir = \"right\") {\n        return {\n            pos: pos,\n            width: 78.5,\n            height: 86,\n            velX: velX,\n            velY: velY,\n            dir: \"up\",\n            frameStartX: 0,\n            frameStartY: 435,\n            frameWidth: 180,\n            frameHeight: 145,\n            frameNum: 4,\n            image: \"./assets/electric_ball.png\",\n            impact: \"./assets/electric_ball.png\",\n            impactTimeout: 6000,\n            impactWidth: 180,\n            impactHeight: 145,\n            impactFrameWidth: 180,\n            impactFrameHeight: 145,\n            hitTimeout: 6000,\n            damage: 20\n        };\n    }\n}\n\nexport default ElectricBall;\n\n// const fireball = {\n//   name: \"fireball\"\n// }\n\n\n// };","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport ElectricBall from \"../Projectiles/ElectricBall\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n    GRAVITY: 0.8,\n    FRICTION: 2.5,\n    MAX_VEL: 50\n};\n\nclass Jellyfish extends Enemy {\n    constructor(options) {\n        super(options);\n        this.player = options.player;\n        this.velX = options.velX || 0;\n        this.velY = 0;\n        this.image = options.image || \"./assets/jellyfish.png\";\n        this.enemy = this.loadImage(this.image);\n        this.frameNum = options.frameNum || 8;\n        this.frameStartX = 4;\n        this.frameStartY = 130;\n        this.frameWidth = options.frameWidth || 58;\n        this.frameHeight = options.frameHeight || 64;\n        this.active = true;\n        this.opening = false;\n        this.projectiles = {};\n        this.playerCheckTimeout = \"\";\n        this.damage = options.damage;\n\n        this.points = 10 * options.multiplier;\n\n        this.drawEnemy = this.drawEnemy.bind(this);\n        this.shootProj = this.shootProj.bind(this);\n        // this.setPlayerCheckInterval = this.setPlayerCheckInterval.bind();\n        this.checkPlayerPos = this.checkPlayerPos.bind(this);\n        this.setAttackInterval = this.setAttackInterval.bind(this);\n\n        this.setAttackInterval();\n    }\n\n    setAttackInterval() {\n        setTimeout(() => {\n            this.attackInterval = setInterval(() => {\n                this.shootProj();\n            }, 4000)\n        }, 2000)\n    }\n\n    checkPlayerPos(x, y, homing) {\n        if (y > this.y) {\n            this.velY = 2;\n        } else {\n            this.velY = -2;\n        }\n\n        // if ((y > this.y && y < this.y + this.height) && (x > this.x || x < this.x)) {\n        //     this.velX = (this.dir === \"left\") ? -5 : 5;\n        // } else {\n        //     this.velX = (this.dir === \"left\") ? -2 : 2;\n        // }\n\n        if (x > this.x && this.dir === \"left\") {\n            // clearTimeout(this.playerCheckTimeout);\n            this.playerCheckTimeout = setTimeout(() => {\n                this.velX = 2;\n                this.dir = \"right\";\n            }, 1000);\n        } else if (x < this.x && this.dir === \"right\") {\n            // clearTimeout(this.playerCheckTimeout);\n            this.playerCheckTimeout = setTimeout(() => {\n                this.velX = -2;\n                this.dir = \"left\";\n\n            }, 1000);\n\n        } else if ((x > this.x && this.dir === \"right\") || (x < this.x && this.dir === \"left\")) {\n            clearTimeout(this.playerCheckTimeout);\n        }\n    }\n\n    setPlayerCheckInterval(player) {\n        // debugger\n        this.playerCheckInterval = setInterval(() => {\n            this.checkPlayerPos(player);\n        }, 2000);\n    }\n\n    drawEnemy(ctx, frameCount) {\n        this.setDying();\n        if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n        let count = Math.floor(frameCount / 2.5) % this.frameNum;\n        if (this.dir === \"left\") {\n\n            ctx.drawImage(\n                this.enemy,\n                (count) * this.frameWidth + (this.frameStartX * count + (count * 2)),\n                this.frameStartY,\n                this.frameWidth,\n                this.frameHeight,\n                this.x, this.y,\n                this.width, this.height\n            );\n        } else {\n            ctx.scale(-1, 1);\n            ctx.drawImage(\n                this.enemy,\n                (count) * this.frameWidth + (this.frameStartX * count + (count * 2)),\n                this.frameStartY,\n                this.frameWidth,\n                this.frameHeight,\n                -this.x - this.width, this.y,\n                this.width, this.height\n            );\n            ctx.scale(-1, 1);\n\n        }\n    }\n\n    shootProj() {\n        if (Object.keys(this.projectiles).length === 10) return;\n\n        let key;\n        for (let i = 1; i <= 10; i++) {\n            if (!this.projectiles[i]) {\n                key = i;\n                break;\n            }\n        }\n        this.projectiles[key] = new ElectricBall({\n                pos: [this.leftSide() + (this.width / 2),\n                this.bottomSide() - (this.height / 2)]\n            });\n    }\n\n    setDying() {\n        if (this.health <= 0) {\n            this.dying = true;\n            this.damage = 0;\n            this.velX = 0;\n            this.velY = 0;\n            clearInterval(this.attackInterval);\n            setTimeout(() => {\n                this.dead = true;\n            }, 300);\n        }\n    }\n\n    ////////CPU\n\n    move(canvas, player) {\n        this.oldY = this.y;\n        this.oldX = this.x;\n        this.x += this.velX;\n        this.y += this.velY;\n        this.checkPlayerPos(player.x, player.y - (player.height * 2));\n\n        // if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n        //   this.velX *= -1;\n        //   this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n        // }\n    }\n\n    //////\n\n\n\n    static jell1(pos, player, dir = \"right\", damage = 20) {\n\n        return {\n            name: \"Jellyfish\",\n            image: \"./assets/jellyfish.png\",\n            frameNum: 8,\n            pos: pos,\n            width: 90,\n            height: 100,\n            health: 130,\n            velX: 1,\n            dir: dir,\n            player: player,\n            multiplier: 1\n\n        };\n    }\n    static jell2(pos, player, dir = \"right\", damage = 15) {\n\n        return {\n            name: \"Jellyfish\",\n            image: \"./assets/jellyfish.png\",\n            frameNum: 8,\n            pos: pos,\n            width: 60,\n            height: 66,\n            health: 90,\n            velX: 1,\n            dir: dir,\n            player: player,\n            multiplier: .5\n        };\n    }\n    static jell3(pos, player, dir = \"right\", damage = 10) {\n\n        return {\n            name: \"Jellyfish\",\n            image: \"./assets/jellyfish.png\",\n            frameNum: 8,\n            pos: pos,\n            width: 35,\n            height: 45,\n            health: 50,\n            velX: 1,\n            dir: dir,\n            player: player,\n            multiplier: .5\n\n        };\n    }\n\n\n}\n\nexport default Jellyfish;\n","\n\nclass Vine {\n    constructor(options) {\n        this.boss = options.boss;\n        this.vine = this.loadImage();\n        this.attacking = false;\n        this.charging = false;\n        this.frameNum = 7;\n        this.velX = 0;\n        this.velY = options.velY;\n        this.x = options.pos[0];\n        this.y = options.pos[1];\n        this.startX = this.x;\n\n        this.boundsY = options.boundsY;\n        this.damage = options.damage || 10;\n        this.frameCountOffset = options.frameCountOffset;\n\n        this.attack = this.attack.bind(this);\n        this.loadImage = this.loadImage.bind(this);\n        this.backUp = this.backUp.bind(this);\n        this.charge = this.charge.bind(this);\n        this.drawVines = this.drawVines.bind(this);\n        this.playerCheck = this.playerCheck.bind(this);\n        this.move = this.move.bind(this);\n\n    }\n\n    loadImage() {\n        let vine = new Image();\n        vine.src = \"./assets/vines.png\";\n        return vine;\n    }\n\n    attack(int) {\n\n        this.attacking = true;\n        this.chargeTimeout = setTimeout(() => {\n            this.charge();\n        }, int);\n    }\n\n    backUp() {\n        this.vineTimeout = setTimeout(() => {\n            this.charging = false;\n            this.velX = 10;\n        }, 300)\n    }\n\n    charge() {\n        this.charging = true;\n        this.velX = -20;\n    }\n\n\n    drawVines(ctx, frameCount) {\n        if (this.boss.dying && frameCount % 3 === 0) return;\n\n        let state = (this.charging) ? 0 :\n            (this.attacking) ? (frameCount + this.frameCountOffset) % this.frameNum :\n                ((Math.floor(frameCount / 2.5) + this.frameCountOffset) % this.frameNum)\n        let width = (this.attacking) ? 1000 : 400\n\n        // let count = Math.floor(frameCount / 2.5) + this.frameCountOffset % this.frameNum;\n        if (this.boss.dir === \"left\") {\n            ctx.drawImage(\n                this.vine,\n                2,\n                state * 95,\n                width,\n                95,\n                this.x, this.y,\n                width, 60\n            );\n        } else {\n            ctx.scale(-1, 1);\n            ctx.drawImage(\n                this.vine,\n                2,\n                state * 95,\n                width,\n                95,\n                -this.x - width, this.y,\n                width, 60\n            );\n            ctx.scale(-1, 1);\n\n        }\n    }\n\n    playerCheck(player) {\n        if (this.boss.dying) return;\n        if (player.x > this.x &&\n            (player.y + player.height > (this.y + 10)) &&\n            player.y < (this.y + 50)) {\n            player.setHit(this.damage);\n        }\n    }\n\n    move(ctx, frameCount, player) {\n        this.oldX = this.x;\n        this.x += this.velX;\n        if (!this.attacking) {\n            this.y += this.velY;\n        }\n\n        this.playerCheck(player);\n        if (this.x < -20) {\n            this.x = -20;\n            // this.attacking = false;\n            this.backUp();\n        } else if (this.x > this.startX) {\n            this.velX = 0;\n            this.attacking = false;\n            this.x = this.startX;\n\n\n            // this.attackTimeout = setTimeout(() => {\n            //   this.attack();\n            // }, 10000);\n        }\n        if (this.y < this.boundsY[0] || this.y > this.boundsY[1]) {\n            this.velY *= -1;\n        }\n        this.drawVines(ctx, frameCount);\n    }\n\n    static vines1(boss, pos) {\n        let round = Math.floor(Math.random() * 10);\n        return {\n            boss: boss,\n            pos: pos,\n            velY: (round <= 5) ? -1 : 1,\n            boundsY: [pos[1] - 75, pos[1] + 75],\n            frameCountOffset: Math.floor(Math.random() * 7)\n        }\n    }\n}\n\nexport default Vine;","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\nimport Vinehead from \"./Vinehead\";\nimport Vine from '../Projectiles/Vine';\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass BossVinehead extends Enemy {\n  constructor(options) {\n    super(options);\n    this.player = options.player;\n    this.velX = options.velX || 0;\n    this.velY = 0;\n    this.image = options.image || \"./assets/vinehead.png\";\n    this.enemy = this.loadImage(this.image);\n    this.vineNum = 5;\n\n    // this.vines = this.loadImage(\"../assets/vine.png\");\n    this.frameNum = options.frameNum || 8;\n    this.frameStartX = 0;\n    this.frameStartY = 0;\n    this.frameWidth = options.frameWidth || 57;\n    this.frameHeight = options.frameHeight || 87;\n    this.active = true;\n    this.opening = false;\n    this.projectiles = {};\n    this.playerCheckTimeout = \"\";\n    this.damage = 50;\n    this.attacking = false;\n    this.charging = false;\n    this.frameCount = 0;\n\n    this.points = 50;\n\n    this.vines = [\n      new Vine(Vine.vines1(this, [600, 60])),\n      new Vine(Vine.vines1(this, [600, 150])),\n      new Vine(Vine.vines1(this, [600, 500])),\n      new Vine(Vine.vines1(this, [700, 100])),\n      new Vine(Vine.vines1(this, [600, 300])),\n      new Vine(Vine.vines1(this, [700, 400])),\n    ]\n\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    // this.setPlayerCheckInterval = this.setPlayerCheckInterval.bind();\n    // this.checkPlayerPos = this.checkPlayerPos.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n    this.charge = this.charge.bind(this);\n    this.startFrameCount = this.startFrameCount.bind(this);\n    this.shuffleVines = this.shuffleVines.bind(this);\n    this.renderVines = this.renderVines.bind(this);\n    this.attackVines = this.attackVines.bind(this);\n    this.startAttack = this.startAttack.bind(this);\n    this.startFrameCount();\n    this.startAttack();\n  }\n\n  startFrameCount() {\n    this.bossInterval = setInterval(() => {\n      this.frameCount++;\n    }, 1000 / 30);\n    // }, 5000)\n  }\n\n  startAttack() {\n    this.attackTimeout = setTimeout(() => {\n      this.attack();\n    }, 1000);\n\n    // setTimeout(() => {\n    this.vineInterval = setInterval(() => {\n\n      this.attackVines();\n    }, 10000);\n  }\n\n  spawnEnemies() {\n    // if (this.enemies.length < 8) {\n    //   this.enemiesnew Vinehead(Vinehead.vine3([500, 100], this.player));\n    // }\n  }\n\n  attack() {\n    this.attacking = true;\n    this.chargeTimeout = setTimeout(() => {\n      this.charge();\n    }, 2500);\n  }\n\n  charge() {\n    this.charging = true;\n    this.velX = -10;\n  }\n\n\n  shuffleVines(vines) {\n    for (let i = vines.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [vines[i], vines[j]] = [vines[j], vines[i]];\n    }\n    return vines;\n  }\n\n  renderVines(ctx, player) {\n    this.vines.forEach((vine, i) => {\n      vine.move(ctx, this.frameCount, player);\n    });\n  }\n\n  attackVines() {\n\n    this.vines.forEach((vine, i) => {\n      vine.attack((1500) + i * 300);\n    })\n    setTimeout(() => {\n      this.vines = this.shuffleVines(this.vines);\n    }, 5000);\n  }\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    \n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    let y = ((this.attacking && \n      (this.frameCount % 3 === 0 || this.frameCount % 3 === 1)) ||\n      this.charging) ? 87 : this.frameStartY;\n    if (this.dir === \"right\") {\n      let count = Math.floor(frameCount / 2.5) % this.frameNum;\n      ctx.drawImage(\n        this.enemy,\n        (Math.floor(this.frameCount / 1.5) % this.frameNum) * this.frameWidth,\n        y,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (this.frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        y,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x - this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n\n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + 30,\n          this.bottomSide() - 23],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - 40,\n          this.bottomSide() - 23],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.vines.forEach((vine) => {\n        clearTimeout(vine.chargeTimeout);\n        clearTimeout(vine.vineTimeout);\n      })\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      clearInterval(this.vineInterval);\n      setTimeout(() => {\n        this.dead = true;\n        clearInterval(this.startFrameCount);\n      }, 3000);\n    }\n  }\n\n  ////////CPU\n\n  \n  backUp() {\n    this.charging = false;\n    this.velX = 2;\n  }\n\n  move(canvas, player, ctx) {\n    this.oldX = this.x;\n    this.x += this.velX;\n    if (this.x < 160) {\n      this.x = 160;\n      // this.attacking = false;\n      this.backUp();\n    } else if (this.x > 650) {\n      this.velX = 0;\n      this.attacking = false;\n      this.x = 650;\n\n      this.attackTimeout = setTimeout(() => {\n        this.attack();\n      }, 7000);\n    }\n\n    this.renderVines(ctx, player)\n\n  }\n\n  //////\n\n\n\n  static boss1(pos, player, dir = \"right\") {\n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 260,\n      height: 370,\n      health: 1200,\n      velX: 0,\n      dir: \"left\",\n      player: player\n    };\n  }\n\n}\n\n\n\n\nexport default BossVinehead;\n","import Tile from \"../Objects/Platforms/Tile\";\nimport Music from \"../util/Music\";\nimport Enemy from \"../Objects/Enemies/Enemy\";\nimport Helicopter from \"../Objects/Enemies/Helicopter\";\nimport Flower from \"../Objects/Enemies/Flower\";\nimport Spider from \"../Objects/Enemies/Spider\";\nimport Vinehead from \"../Objects/Enemies/Vinehead\";\nimport Jellyfish from \"../Objects/Enemies/Jellyfish\";\nimport BossVinehead from \"../Objects/Enemies/BossVinehead\";\n\nclass Level {\n  constructor(options) {\n    this.ctx = options.ctx;\n    this.player = options.player;\n    this.mapKeys = options.mapKeys;\n    this.screen = Object.keys(this.mapKeys)[0];\n    this.renderMap = options.renderMap || this.mapKeys[this.screen].renderMap;\n    this.physicalMap = options.physicalMap || this.mapKeys[this.screen].physicalMap;\n    this.cols = 15;\n    this.rows = 10;\n    this.tileSize = options.tileSize;\n    this.tileMap = this.loadImage();\n    this.mapTileSize = this.tileMap.width / this.rows;\n    this.enemies = this.mapKeys[this.screen].enemies();\n    this.enemyCount = 1;\n    this.theme = new Music({src: this.mapKeys[this.screen].theme});\n    \n    this.levelLayers = this.loadImages(this.mapKeys[this.screen].levelLayers);\n        \n////Enemy Rush////\n    this.spawnTier = this.mapKeys[this.screen].spawnTier || null;\n    this.rushLevel = 0;\n    this.spawnTierGroup = 2;\n    this.rushInterval = \"\";\n\n    this.enemyRushSpawn = this.enemyRushSpawn.bind(this);\n    this.enemyRushInterval = this.enemyRushInterval.bind(this);\n\n//////\n\n    this.getTile = this.getTile.bind(this);\n    this.getLeft = this.getLeft.bind(this);\n    this.getRight = this.getRight.bind(this);\n    this.getTop = this.getTop.bind(this);\n    this.getBottom = this.getBottom.bind(this);\n    this.drawLevel = this.drawLevel.bind(this);\n    this.loadImage = this.loadImage.bind(this);\n    this.loadLevel = this.loadLevel.bind(this);\n    this.enemiesInterval = this.enemiesInterval.bind(this);\n    this.spawnEnemies = this.spawnEnemies.bind(this);\n    this.enemyRush = this.enemyRush.bind(this);\n\n    this.loadImages = this.loadImages.bind(this);\n    this.renderBackground = this.renderBackground.bind(this);\n    this.renderMid = this.renderMid.bind(this);\n    this.renderFront = this.renderFront.bind(this);\n    // this.loadImage(this.ctx);\n\n    this.enemiesInterval();\n    // this.enemyRushInterval();\n  }\n\n//15 x 10\n\n  loadImage() {\n    let tileMap = new Image();\n    tileMap.src = \"./assets/tileGen.png\";\n    return tileMap;\n  }\n\n  loadImages(images) {\n    let background = new Image();\n    background.src = images.background;\n\n    let mid = (images.mid) ? new Image() : null;\n    (mid) ? mid.src = images.mid : \"\";\n\n    let front = (images.front) ? new Image() : null;\n    (front) ? front.src = images.front : \"\";\n\n    return {\n      background,\n      mid,\n      front\n    };\n  }\n\n  renderBackground(ctx, canvas) {\n\n      ctx.drawImage(\n        this.levelLayers.background,\n        0,\n        0,\n        900,\n        600,\n        0,\n        0,\n        canvas.width,\n        canvas.height\n      );\n  }\n\n  renderMid(ctx, canvas) {\n    if (!this.levelLayers.mid) return;\n    ctx.drawImage(\n      this.levelLayers.mid,\n      0,\n      0,\n      900,\n      600,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n  }\n\n  renderFront(ctx, canvas) {\n    if (!this.levelLayers.front) return;\n\n    ctx.drawImage(\n      this.levelLayers.front,\n      0,\n      0,\n      900,\n      600,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n  }\n\n  getTile(col, row) {\n    return this.renderMap[row * this.cols + col];\n  }\n\n  getLeft(col, row) {\n    return Math.floor(col * this.tileSize);\n  }\n  getRight(col, row) {\n    return Math.floor((col * this.tileSize) + this.tileSize);\n  }\n  getTop(col, row) {\n    return Math.floor(row * this.tileSize - this.tileSize);\n  }\n  getBottom(col, row) {\n    return Math.floor(row * this.tileSize);\n  }\n\n  enemiesInterval() {\n    if (parseInt(this.screen) < 6 || parseInt(this.screen) === 8) return;\n\n    // if (parseInt(this.screen) === 8) {\n    //   this.enemyRush();\n    //   this.spawnInterval = setInterval(() => {\n    //     this.enemyRush();\n    //   }, 12000);\n    // } else {\n      \n      this.spawnInterval = setInterval(() => {\n        if (!this.enemies[1]) {\n          clearInterval(this.spawnInterval);\n        }\n        this.spawnEnemies();\n      }, 7000);\n    // }\n  }\n\n  spawnEnemies() {\n    if (Object.keys(this.enemies).length >= 8) return;\n    this.enemyCount++;\n    let key = this.enemyCount;\n    let y = Math.random() * 600;\n    this.enemies[key] = new Vinehead(Vinehead.vine2([890, y], this.player, \"left\"));\n  }\n\n  enemyRush() {\n    if (Object.keys(this.enemies).length >= 6) return;\n    this.enemyCount++;\n    let key = this.enemyCount + (Math.floor(Math.random() * 100));\n    let y = Math.random() * 600;\n    let x = (Object.keys(this.enemies).length % 2 === 0) ? 10 : 890\n    this.enemies[key] = new Vinehead(Vinehead.vine2([x, y], this.player, \"left\"));\n  }\n\n  enemyRushSpawn(num) {\n    if (Object.keys(this.enemies).length >= num) return;\n    let key = this.enemyCount + Math.floor(Math.random() * 100);\n    let tierAmount = Object.keys(this.spawnTier[this.spawnTierGroup]).length\n    let enemy = Math.floor(Math.random() * tierAmount);\n\n    this.enemies[key] = this.spawnTier[this.spawnTierGroup][enemy]();\n\n    this.spawnTierGroup = (this.spawnTierGroup === 4) ? 1 : this.spawnTierGroup + 1;\n  }\n\n  enemyRushInterval(int = 12000, enemyCount = 6) {\n    if (this.screen !== \"8\") return;\n\n    clearInterval(this.rushInterval);\n    \n    this.rushInterval = setInterval(() => {\n      this.enemyRushSpawn(enemyCount);\n    }, int);\n  }\n\n\n\n  loadLevel(num) {\n    // if (this.screen + num === 0) return;\n    this.screen = num;\n    this.renderMap = this.mapKeys[this.screen].renderMap;\n    this.physicalMap = this.mapKeys[this.screen].physicalMap;\n    this.enemies = this.mapKeys[this.screen].enemies();\n    if (this.mapKeys[this.screen].levelLayers) {\n\n      this.levelLayers = this.loadImages(this.mapKeys[this.screen].levelLayers);\n    }\n    if (this.mapKeys[this.screen].theme) {\n      let muted = this.theme.music.muted;\n      this.theme.pause();\n      this.theme = new Music({ src: this.mapKeys[this.screen].theme });\n      this.theme.play();\n      this.theme.music.muted = muted;\n    }\n    this.enemiesInterval();\n\n  }\n\n  drawLevel(ctx) {\n\n    for (let c = 0; c < this.cols; c++) {\n      for (let r = 0; r < this.rows; r++) {\n        let tile = this.getTile(c, r);\n        let tileCut = (tile % 8 === 0) ? 8 : (tile % 8);\n\n        if (tile > 0) {\n\n          ctx.drawImage(\n            this.tileMap,\n            (tileCut - 1) * (this.tileMap.width/ 8),\n            (Math.floor(tile / 8) * (this.tileMap.width / 8)),\n            64,\n            64,\n            c * this.tileSize,\n            r * this.tileSize,\n            this.tileSize,\n            this.tileSize\n          );\n        }\n      }\n    }\n  }\n\n\n  static level2() {\n    return {\n      8: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0, 29, 29, 29,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  3,  1,  2,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0, 29, 29, 29,  0,  0,  0, 29, 29, 29,  0,  0,  0,\n          0,  0,  0,  3,  1,  2,  0,  0,  0,  3,  1,  2,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,        ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  2,  2,  2,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  2,  2,  2,  0,  0,  0,  2,  2,  2,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,  1,  1,  1,  1\n        ],\n        enemies: () => {\n          return {\n            1: new Spider(Spider.spider1([600, 0], [20, 359])),\n            2: new Spider(Spider.spider1([420, 0], [20, 179])),\n            3: new Spider(Spider.spider1([240, 0], [20, 359])),\n            4: new Spider(Spider.spider1([780, 0], [20, 479])),\n            5: new Spider(Spider.spider1([60, 0], [20, 479])),\n            // 5: new Helicopter(Helicopter.hel1([0, 15], [-50, 950], \"right\"))\n            // 1: new BossVinehead(BossVinehead.boss1([650, 100], this.player))\n          };\n        },\n        spawnTier: {\n          1: {\n              // 0: () => {\n              //   return new Spider(Spider.spider2([600, 0], [20, 359]));\n              // },\n              // 1: () => {\n              //   return new Spider(Spider.spider2([420, 0], [20, 179]));\n              // },\n              // 2: () => {\n              //   return new Spider(Spider.spider2([240, 0], [20, 359]));\n              // },\n              // 3: () => {\n              //   return new Spider(Spider.spider2([780, 0], [20, 479]));\n              // },\n              // 4: () => {\n              //   return new Spider(Spider.spider2([60, 0], [20, 479]));\n              // },\n              0: () => {\n                return new Spider(Spider.spider1([600, 0], [20, 359]));\n              },\n              1: () => {\n                return new Spider(Spider.spider1([420, 0], [20, 179]));\n              },\n              2: () => {\n                return new Spider(Spider.spider1([240, 0], [20, 359]));\n              }\n            },\n            \n        2: {\n              0: () => {\n                return new Helicopter(Helicopter.hel2([800, 50], [-50, 950], \"left\"));\n              },\n              1: () => {\n                return new Helicopter(Helicopter.hel2([0, 50], [-50, 950], \"right\"));\n              },\n              2: () => {\n                return new Helicopter(Helicopter.hel1([800, 15], [-50, 950], \"left\"));\n              },\n              3: () => {\n                return new Helicopter(Helicopter.hel1([0, 15], [-50, 950], \"right\"));\n              },\n           },\n        3: {\n              0: () => {\n                let y = Math.floor(Math.random() * 600);\n                let x = (y % 2 === 0) ? 1 : 839;\n                return new Jellyfish(Jellyfish.jell2([x, y], this.player));\n              },\n              1: () => {\n                let y = Math.floor(Math.random() * 600);\n                let x = (y % 2 === 0) ? 1 : 809;\n                return new Jellyfish(Jellyfish.jell1([x, y], this.player));\n              },\n           },\n        4: {\n              0: () => {\n                let y = Math.floor(Math.random() * 600);\n                let x = (y % 2 === 0) ? 1 : 890;\n                return new Vinehead(Vinehead.vine3([x, y], this.player));\n              },\n              1: () => {\n                let y = Math.floor(Math.random() * 600);\n                let x = y % 2 === 0 ? 1 : 890;\n                return new Vinehead(Vinehead.vine1([x, y], this.player));\n              },\n              2: () => {\n                let y = Math.floor(Math.random() * 600);\n                let x = y % 2 === 0 ? 1 : 890;\n                return new Vinehead(Vinehead.vine2([x, y], this.player));\n              },\n           },\n           \n        },\n        theme: \"./assets/Sound/dk3_boss_boogie.mp3\",\n        levelLayers: {\n          background: \"./assets/Level1/lv1_back.png\",\n          // mid: \"./assets/Level1/lv1_mid.png\",\n          // front: \"./assets/Level1/lv1_front.png\"\n        }\n      }\n    };\n  }\n  static level1() {\n    return {\n      1: {\n        renderMap: [\n        //   9,  0,  0,  0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0, 38, 39,  0,  0,  0,  0,  0,\n        //   0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 42,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //  28,  0,  0,  0,  0, 22, 23, 23, 63,  0,  0,  0,  0,  0,  0,\n        //   1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0, 29, 29, 29, 29,\n        //   9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3, 27, 27, 27,\n        //   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0,  0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          3,  3,  3, 40,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0, 23,  2,  2,  2, 24,  0,  0,  0,\n          1,  2, 34,  0,  0,  0,  0, 17,  0,  0,  0, 18,  0,  0,  0,\n          0,  0,  0, 34,  0,  0,  0, 17,  0,  0,  0, 18,  0,  0,  0,\n          1,  1,  1,  1,  2,  2,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        // physicalMap: [\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,\n        //   6,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n        //   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        // ],\n        enemies: () => {\n          return {\n            // 1: new Spider(Spider.spider2([470, 0], [0, 350])),\n            // 2: new Helicopter(Helicopter.hel1([570, 50], \"left\")),\n            // 1: new Jellyfish(Jellyfish.jell1([300, 300]))\n            // 4: new Flower(Flower.flow1([400, 320])),\n            // 5: new Flower(Flower.flow1([240, 500])),\n          }\n \n        },\n        theme: \"./assets/Sound/ff9_stirring_forest.mp3\",\n        levelLayers: {\n          background: \"./assets/Level1/lv1_back.png\",\n          mid: \"./assets/Level1/lv1_mid.png\",\n          front:  \"./assets/Level1/lv1_front.png\"\n        }\n      },\n      2: {\n        renderMap: [\n          // 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          // 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          // 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          // 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          // 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          // 0,  0,  0,  0,  0,  0, 29, 29, 29,  0,  0,  0,  0,  0,  0,\n          // 0,  0,  0,  0, 53, 54,  1,  1,  2,  0,  0,  0,  0,  0,  0,\n          // 0,  0,  0, 57, 58,  9, 16, 16, 16,  0,  0, 29, 29, 29, 29,\n          // 0, 53, 54,  5,  5,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n          // 1,  5,  5,  5, 11,  0,  0,  0,  0,  0,  0,  5,  5,  5,  5\n        ],\n        physicalMap: [\n        //0       2       4       6       8      10      12\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 17,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 17,  0,\n          0,  0,  0,  0,  0,  0,  0, 12, 39,  0,  0,  0,  0, 17,  0,\n          0,  0,  0,  0,  0,  0,  0,  4, 18,  0,  0,  0,  0, 17,  0,\n          0,  0, 19, 20,  0,  0,  0,  4, 18, 30,  0,  0,  0, 17,  0,\n          0,  0,  4,  5,  0,  0, 37,  4, 40,  0,  0,  0,  0, 31, 16,\n          0,  0,  9,  8,  0,  0,  4,  5,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  4,  5,  0,  0,  0, 31, 15, 15, 15,\n          0,  0,  0,  0,  0, 35,  0,  5,  0,  0,  0,  0,  4,  0,  0,\n          1,  1,  1,  1,  2,  0,  0,  5,  0,  0,  0,  0,  4,  0,  0\n        ],\n        levelLayers: {\n          background: \"./assets/Level1/lvl2_back.png\",\n          mid: \"./assets/Level1/lvl2_mid.png\",\n          front: \"./assets/Level1/lvl2_front.png\"\n        },\n\n        enemies: () => {\n          return {\n            1: new Helicopter(Helicopter.hel2([10, 10], [0, 700])),\n            // 2: new Helicopter(Helicopter.hel2([570, 0], [0, 700], \"left\")),\n            3: new Helicopter(Helicopter.hel2([10, 140], [0, 335], \"left\")),\n            4: new Spider(Spider.spider1([700, 0], [0, 380])),\n            5: new Spider(Spider.spider2([600, 0], [20, 440])),\n            6: new Spider(Spider.spider3([150, 0], [20, 250]))\n\n            // 3: new Flower(Flower.flow2([120, 200])),\n            // 4: new Flower(Flower.flow1([400, 320])),\n            // 5: new Flower(Flower.flow1([240, 500])),\n          }\n        }\n      },\n      3: {\n        renderMap: [\n        //0       2       4       6       8      10      12\n          0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         16, 32,  0,  0,  0, 16,  0,  0,  0, 16,  0,  3,  1,  1,  1,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4, 50,  5,  5,\n         29, 29, 29, 30,  0,  0,  0,  0,  0,  0,  0,  4,  5,  5,  5,\n          0,  0, 40,  0,  0,  0,  0,  0,  0,  0,  0, 55,  5, 40,  5,\n          0,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  5,  5,  5\n        ],\n\n        physicalMap: [\n        //0       2       4       6       8      10      12\n          0, 18, 58,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18, 58,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18, 58,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18, 58,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 37, 15,\n          0, 18,  0,  0,  0,  0, 47, 34,  0,  0,  0, 37, 39,  0,  0,\n         16,  8,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  1,  1,  1,\n          0,  0,  0,  0,  0,  0, 33, 33, 33,  0,  0, 44, 16, 42,  3,\n         15, 36,  0,  0,  0,  0, 16, 16, 45,  0,  0,  0,  0,  0,  0,\n          5,  0,  2, 24,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          5,  5,  0,  0, 15, 15, 15, 15, 15, 20,  0, 33, 33, 33, 33\n        ],\n        enemies: () => {\n          return {\n            // 1: new Helicopter(Helicopter.hel1([100, 25])),\n            // 3: new Flower(Flower.flow2([250, 140])),\n\n            3: new Jellyfish(Jellyfish.jell2([500, 550])),\n            4: new Jellyfish(Jellyfish.jell1([700, 50])),\n            5: new Vinehead(Vinehead.vine1([500, 100], this.player)),\n            6: new Vinehead(Vinehead.vine3([800, 20], this.player)),\n\n            // 4: new Flower(Flower.flow2([450, 140])),\n          }\n        },\n        levelLayers: {\n          background: \"./assets/Level1/lvl3_back.png\",\n          mid: \"./assets/Level1/lvl3_mid.png\",\n          front: \"./assets/Level1/lvl3_front.png\"\n        },\n      },\n      4: {\n        renderMap: [\n        ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         36,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  2,  7,  0,  0,  0, 37, 39,  2, 58,  2,  2,  2, 38, 36,\n          0,  2,  5, 15, 15, 39,  0,  0,  0, 58,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  5,  0,  0,  0, 58,  0,  0,  0,  0,  0,\n          3,  3,  3,  3,  0, 40,  0,  0,  0, 58,  0,  0,  0,  0,  0,\n          0,  0,  0,  5,  5,  0,  0,  0,  0, 58,  0,  0,  0,  0,  0,\n          0,  0,  0,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         33, 33, 33, 33, 33, 33,  6,  2,  2,  2,  2,  2, 34,  0,  0\n        ],\n        enemies: () => {\n          return {\n            1: new Helicopter(Helicopter.hel2([500, 0])),\n            // // 3: new Flower(Flower.flow2([290, 190])),\n            4: new Vinehead(Vinehead.vine3([500, 100], this.player)),\n            5: new Vinehead(Vinehead.vine3([300, 450], this.player)),\n            6: new Vinehead(Vinehead.vine3([850, 500], this.player)),\n            7: new Vinehead(Vinehead.vine1([800, -20], this.player)),\n          }\n          // 4: new Flower(Flower.flow2([530, 190])),\n\n        },\n        levelLayers: {\n          background: \"./assets/Level1/lvl4_back.png\",\n          mid: \"./assets/Level1/lvl4_mid.png\",\n          front: \"./assets/Level1/lvl4_front.png\"\n        }\n      },\n      // 44: {\n      //   renderMap: [\n      //     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n      //     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n      //     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,\n      //     0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  0,  0,  0,  3,  5,\n      //     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4, 28,\n      //     1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n      //     9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 16, 16, 16, 16,\n      //     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n      //     0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  0,  0,  0,  0,  0,\n      //     0,  0,  0,  0,  0,  5,  5,  5,  5,  5,  0,  1,  1,  1,  1\n      //   ],\n      //   physicalMap: [\n      //     0,  0, 38, 39,  0,  0,  0, 42, 41, 39,  0,  0,  0,  0,  0,\n      //     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n      //    38, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,\n      //     0,  0,  0,  0,  0,  3,  1,  1,  1,  8,  0,  0,  0,  2,  0,\n      //     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n      //     1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n      //     9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  7,  7,  7,  7,\n      //     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n      //     0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  0,  0,  0,  0,  0,\n      //     0,  0,  0,  0,  0,  9,  0,  0,  0, 10,  0,  1,  1,  1,  1\n      //   ],\n      //   enemies: () => {\n      //     return {\n      //       1: new Helicopter(Helicopter.hel2([500, 0])),\n      //       // // 3: new Flower(Flower.flow2([290, 190])),\n      //       4: new Vinehead(Vinehead.vine3([500, 100], this.player)),\n      //       5: new Vinehead(Vinehead.vine3([300, 450], this.player)),\n      //       6: new Vinehead(Vinehead.vine3([850, 500], this.player)),\n      //       7: new Vinehead(Vinehead.vine1([800, -20], this.player)),\n      //     }\n      //     // 4: new Flower(Flower.flow2([530, 190])),\n\n      //   }\n      // },\n      5: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         29, 29, 29, 29, 29, 29, 29,  0, 29, 29, 29, 29, 29, 29, 29,\n          1,  1,  1,  1,  1,  1,  2,  0,  3,  1,  1,  1,  1,  1,  1,\n          5,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 13,  5,  5,\n         28,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4, 28,\n          1,  1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n         16, 16, 16,  0,  0,  0,  0,  0,  0,  0,  0,  5,  5,  5,  5,\n          0,  0,  0,  0,  0, 29, 29, 29, 29, 29,  3,  1,  1,  1,  1,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  5,  5,  5,  5,  5,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  0,  1,  1,  1,  1,  1,  1,  1,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,\n          7,  7,  7,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,  1,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  1,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        enemies: () => {\n          return {\n            1: new Vinehead(Vinehead.vine3([10, 530], this.player)),\n            2: new Vinehead(Vinehead.vine3([830, 0], this.player)),\n            3: new Vinehead(Vinehead.vine2([600, 600], this.player)),\n            4: new Vinehead(Vinehead.vine1([500, 100], this.player)),\n            5: new Vinehead(Vinehead.vine2([200, 450], this.player)),\n            6: new Vinehead(Vinehead.vine2([850, 500], this.player)),\n            7: new Vinehead(Vinehead.vine1([800, -20], this.player)),\n          }\n        },\n        levelLayers: {\n          background: \"./assets/Level1/lvl3_back.png\",\n          // mid: \"./assets/Level1/lvl3_mid.png\",\n          // front: \"./assets/Level1/lvl3_front.png\"\n        },\n      },\n      6: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0, 13,  5,  5,  5, 49,  5,  5,  5,\n          0,  0,  0,  0,  0,  0,  0,  0, 16, 16, 16, 16, 16, 16, 16,\n          2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         28,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          3,  1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         28,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          5, 29, 29, 29,  0, 29, 29,  0, 47, 47, 47, 47, 47, 47, 47,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        enemies: () => {\n          return {\n            1: new BossVinehead(BossVinehead.boss1([650, 100], this.player))\n          }\n        },\n        theme: \"./assets/Sound/dk3_boss_boogie.mp3\",\n        levelLayers: {\n          background: \"./assets/Level1/lv1_back.png\",\n          // mid: \"./assets/Level1/lv1_mid.png\",\n          // front: \"./assets/Level1/lv1_front.png\"\n        }\n      },\n\n\n      8: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0, 29, 29, 29,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  3,  1,  2,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0, 29, 29, 29,  0,  0,  0, 29, 29, 29,  0,  0,  0,\n          0,  0,  0,  3,  1,  2,  0,  0,  0,  3,  1,  2,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,        ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  2,  2,  2,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  2,  2,  2,  0,  0,  0,  2,  2,  2,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,  1,  1,  1,  1\n        ],\n        enemies: () => {\n          return {\n            1: new Spider(Spider.spider2([600, 0], [20, 440])),\n\n            // 1: new BossVinehead(BossVinehead.boss1([650, 100], this.player))\n          }\n        },\n        theme: \"./assets/Sound/dk3_boss_boogie.mp3\",\n        levelLayers: {\n          background: \"./assets/Level1/lv1_back.png\",\n          // mid: \"./assets/Level1/lv1_mid.png\",\n          // front: \"./assets/Level1/lv1_front.png\"\n        }\n      }\n    };\n  }\n  // static level2() {\n  //   return {\n  //     1: {\n  //       renderMap: [\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0, 38, 39,  0,  0,  0,  0,  0,\n  //         0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6\n  //       ],\n  //       physicalMap: [\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  1,  1,\n  //         1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n  //       ],\n  //       enemies: {\n  //         1: new Helicopter(Helicopter.hel1([100, 100])),\n  //         2: new Helicopter(Helicopter.hel1([570, 50], \"left\")),\n  //         3: new Flower(Flower.flow1([600, 500])),\n  //         4: new Flower(Flower.flow1([400, 320])),\n  //         5: new Flower(Flower.flow1([240, 500])),\n  //       }\n  //     }\n  //   };\n  // }\n\n}\n\nexport default Level;\n\n\n// [\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0, 38, 39,  0,  0,  0,  0,  0,\n//           0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6\n//         ],","class GameHUD {\n  constructor(options) {\n    // this.health = options.health;\n    // this.name = name;\n    this.fire = this.loadFire();\n    this.blueFire = this.loadBlueFire();\n    \n\n\n    this.drawHealth = this.drawHealth.bind(this);\n    this.drawDamageMeter = this.drawDamageMeter.bind(this);\n    this.loadFire = this.loadFire.bind(this);\n    this.loadBlueFire = this.loadBlueFire.bind(this);\n    this.drawHUD = this.drawHUD.bind(this);\n    this.drawAmmo = this.drawAmmo.bind(this);\n    this.drawPoints = this.drawPoints.bind(this);\n  }\n\n  loadFire() {\n    let img = new Image();\n    img.src = \"./assets/fireball.png\";\n    return img;\n  }\n  loadBlueFire() {\n    let img = new Image();\n    img.src = \"./assets/blue_fireball.png\";\n    return img;\n  }\n\n\n\n  drawHUD(canvas, ctx, player, frameCount, points) {\n    ctx.beginPath();\n    ctx.rect(0, (canvas.height - 55), canvas.width, 55);\n    ctx.fillStyle = \"black\";\n    ctx.fill();\n    ctx.closePath();\n\n    this.drawHealth(canvas, ctx, player);\n    this.drawDamageMeter(canvas, ctx, player);\n    this.drawPoints(ctx, canvas, points)\n    this.drawAmmo(canvas, ctx, player, frameCount);\n  }\n\n\n  drawHealth(canvas, ctx, player) {\n\n    let healthMeter = ((canvas.width / 2) * (player.health / 200));\n\n    ctx.beginPath();\n    ctx.rect(150, (canvas.height - 40), (canvas.width / 2), 20);\n    ctx.fillStyle = \"rgba(255, 255, 255, .1)\";\n    ctx.fill();\n    ctx.closePath();\n\n    ctx.beginPath();\n    ctx.rect(150, (canvas.height - 40), (healthMeter), 20);\n    ctx.fillStyle = \"red\";\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  drawDamageMeter(canvas, ctx, player) {\n\n    let damageMeter = ((canvas.width / 2) * (player.damageMeter / 100));\n\n    ctx.beginPath();\n    ctx.rect(150, (canvas.height - 15), (canvas.width / 2), 7);\n    ctx.fillStyle = \"rgba(255, 255, 255, .1)\";\n    ctx.fill();\n    ctx.closePath();\n\n    ctx.beginPath();\n    ctx.rect(150, (canvas.height - 15), (damageMeter), 7);\n    ctx.fillStyle = \"rgb(0, 157, 255)\";\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  drawAmmo(canvas, ctx, player, frameCount) {\n    if (!player.damageBoost) {\n\n      let fromRight = canvas.width - 50;\n      ctx.beginPath();\n      ctx.arc(fromRight, canvas.height - 24, 5, 0, 2 * Math.PI, false);\n      ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n      ctx.fill();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n      ctx.stroke();\n      ctx.closePath();\n  \n      ctx.beginPath();\n      ctx.arc(canvas.width - 100, canvas.height - 24, 5, 0, 2 * Math.PI, false);\n      ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n      ctx.fill();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n      ctx.stroke();\n      ctx.closePath();\n  \n      ctx.beginPath();\n      ctx.arc(canvas.width - 150, canvas.height - 24, 5, 0, 2 * Math.PI, false);\n      ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n      ctx.fill();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n      ctx.stroke();\n      ctx.closePath();\n  \n  \n      switch (Object.keys(player.fireballs).length) {\n        case 0:\n          ctx.drawImage(\n            this.fire,\n            (frameCount % 8) * 43 + ((frameCount % 8) + 1) * 21,\n            400,\n            22,\n            35,\n            canvas.width - 170,\n            canvas.height - 50,\n            40,\n            40\n          );\n        case 1:\n          ctx.drawImage(\n            this.fire,\n            (frameCount % 8) * 43 + ((frameCount % 8) + 1) * 21,\n            400,\n            22,\n            35,\n            canvas.width - 120,\n            canvas.height - 50,\n            40,\n            40\n          );\n        case 2:\n          ctx.drawImage(\n            this.fire,\n            (frameCount % 8) * 43 + ((frameCount % 8) + 1) * 21,\n            400,\n            22,\n            35,\n            canvas.width - 70,\n            canvas.height - 50,\n            40,\n            40\n          );\n        default:\n          break;\n      }\n    } else {\n      ctx.drawImage(\n        this.blueFire,\n        (frameCount % 8) * 43 + ((frameCount % 8) + 1) * 21,\n        400,\n        22,\n        35,\n        canvas.width - 150,\n        canvas.height - 60,\n        70,\n        60\n      );\n    }\n\n\n  }\n\n  drawPoints(ctx, canvas, points) {\n        ctx.font = \"20px Arial\";\n        // ctx.fillStyle = \"rgb(46, 2, 2)\";\n        ctx.fillStyle = \"white\";\n        ctx.textAlign = \"left\";\n        ctx.fillText(\n          `Score: ${points}`,\n          20,\n          canvas.height - 25\n        );\n\n  }\n\n}\n\nexport default GameHUD;","import Player from \"./Player\";\nimport Level from \"./Levels/Level\";\nimport Tile from \"./Objects/Platforms/Tile\";\nimport Collision from \"./util/Collision\";\nimport Controller from \"./util/Controller\";\nimport Enemy from \"./Objects/Enemies/Enemy\";\nimport Helicopter from \"./Objects/Enemies/Helicopter\";\nimport Flower from \"./Objects/Enemies/Flower\";\nimport GameHUD from \"./GameHUD\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\n\nclass Game {\n  constructor(canvas, ctx, lvl = 1) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.levelCall = {\n      1: Level.level1(),\n      2: Level.level2()\n    }\n    this.player = new Player(this.ctx, this.canvas);\n    this.controller = new Controller(this.player);\n    this.tileSize = canvas.width / 15;\n    this.level = new Level({ \n      ctx: ctx,\n      mapKeys: this.levelCall[lvl],\n      player: this.player,\n      tileSize: this.tileSize\n    });\n    // this.physicalMap = this.level.physicalMap;\n    this.collider = new Collision(this.tileSize);\n    this.HUD = new GameHUD();\n    this.frameCount = 0;\n    this.enemies = this.level.enemies;\n    this.gameOver = false;\n    this.embers = new Image();\n    this.embers.src = \"./assets/embers.jpg\";\n    // this.getPlayerTilePos = this.getPlayerTilePos.bind(this);\n\n    this.highScore = 0;\n\n    this.getTopLeftPos = this.getTopLeftPos.bind(this);\n    this.getTopRightPos = this.getTopRightPos.bind(this);\n    this.getBottomLeftPos = this.getBottomLeftPos.bind(this);\n    this.getBottomRightPos = this.getBottomRightPos.bind(this);\n    this.playerPlatformCheck = this.playerPlatformCheck.bind(this);\n    this.playerUpdate = this.playerUpdate.bind(this);\n    this.projectilePlatformCheck = this.projectilePlatformCheck.bind(this);\n    this.renderFireballs = this.renderFireballs.bind(this);\n    this.renderEnemies = this.renderEnemies.bind(this);\n    this.renderEnemyProjectiles = this.renderEnemyProjectiles.bind(this);\n    this.startFrameCount = this.startFrameCount.bind(this);\n    this.runGame = this.runGame.bind(this);\n    this.isGameOver = this.isGameOver.bind(this);\n    this.win = this.win.bind(this);\n    this.enemiesCleared = this.enemiesCleared.bind(this);\n    this.loadLevel = this.loadLevel.bind(this);\n    this.resizeGame = this.resizeGame.bind(this);\n    this.newLevel = this.newLevel.bind(this);\n\n\n    this.enemyCount = Object.keys(this.enemies).length;\n    this.cleared = false;\n\n    this.survivalMode = this.survivalMode.bind(this);\n\n    this.startFrameCount();\n  }\n\n  startFrameCount() {\n    this.frameInterval = setInterval(() => {\n      this.frameCount++;\n    }, (1000 / 30));\n  }\n\n\n  newLevel() {\n    this.level = new Level({\n      ctx: this.ctx,\n      mapKeys: Level.level2(),\n      player: this.player,\n      tileSize: this.tileSize\n    });\n    this.renderMap = this.level.mapKeys[this.level.screen].renderMap;\n    this.physicalMap = this.level.mapKeys[this.level.screen].physicalMap;\n    this.enemies = this.level.enemies();\n    this.level.enemiesInterval();\n    // this.level.loadLevel(8);\n  }\n\n  resizeGame(canvas) {\n    this.tileSize = canvas.width / 15;\n    this.level.tileSize = this.tileSize;\n  }\n\n  getTopLeftPos() {\n    let x = Math.floor(this.player.leftSide() / this.tileSize);\n    let y = Math.floor(this.player.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getTopRightPos() {\n    let x = Math.floor(this.player.rightSide() / this.tileSize);\n    let y = Math.floor(this.player.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomLeftPos() {\n    let x = Math.floor(this.player.leftSide() / this.tileSize);\n    let y = Math.floor(this.player.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomRightPos() {\n    let x = Math.floor(this.player.rightSide() / this.tileSize);\n    let y = Math.floor(this.player.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n\n\n  enemiesCleared() {\n    if (parseInt(this.level.screen) === 8) return;\n    if (Object.keys(this.enemies).length === 0) {\n      this.cleared = true;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  playerPlatformCheck() {\n    let colVal;\n    let top;\n    let bottom;\n    let right;\n    let left;\n    let cols = 15;\n    let rows = 10;\n    let floorCount = 0;\n    let climbCount = 0;\n\n    let physMap = this.level.physicalMap;\n\n    [left, top] = this.getTopLeftPos();\n    colVal = physMap[top * cols + left];\n    colVal === 58 ? climbCount++ : \"\";\n    this.collider.collidePlatform(\n      this.player,\n      left * this.tileSize,\n      top * this.tileSize,\n      colVal, \n      this.tileSize    \n    );\n\n    [right, top] = this.getTopRightPos();\n    colVal = physMap[top * cols + right];\n    colVal === 58 ? climbCount++ : \"\";\n\n    this.collider.collidePlatform(\n      this.player,\n      right * this.tileSize,\n      top * this.tileSize,\n      colVal,\n      this.tileSize\n    );\n\n    [left, bottom] = this.getBottomLeftPos();\n    colVal = physMap[bottom * cols + left];\n    (colVal === 0) ? floorCount++ : \"\";\n    colVal === 58 ? climbCount++ : \"\";\n    this.collider.collidePlatform(\n      this.player,\n      left * this.tileSize,\n      bottom * this.tileSize,\n      colVal,\n      this.tileSize\n    );\n\n\n    [right, bottom] = this.getBottomRightPos();\n    colVal = physMap[bottom * cols + right];\n    (colVal === 0) ? floorCount++ : \"\";\n    colVal === 58 ? climbCount++ : \"\";\n    if (this.player.canClimb && climbCount === 0) this.player.canClimb = false;\n    if (floorCount === 2) {\n      this.player.onGround = false;\n      // if (this.player.jumpCount === 2) this.player.jumpCount -=;\n    }\n    this.collider.collidePlatform(\n      this.player,\n      right * this.tileSize,\n      bottom * this.tileSize,\n      colVal,\n      this.tileSize\n    );\n  }\n\n\n  projectilePlatformCheck(projectile) {\n    let colVal;\n    let top;\n    let bottom;\n    let right;\n    let left;\n    let cols = 15;\n    let physMap = this.level.physicalMap;\n\n    if (projectile.dir === \"left\") {\n      [left, top] = projectile.getTopLeftPos();\n      colVal = physMap[top * cols + left];\n      this.collider.collidePlatform(\n        projectile,\n        left * this.tileSize,\n        top * this.tileSize,\n        colVal,\n        this.tileSize\n      );\n\n      [left, bottom] = projectile.getBottomLeftPos();\n      colVal = physMap[bottom * cols + left];\n      this.collider.collidePlatform(\n        projectile,\n        left * this.tileSize,\n        bottom * this.tileSize,\n        colVal,\n        this.tileSize\n      );\n    }\n\n    if (projectile.dir === \"right\") {\n      [right, top] = projectile.getTopRightPos();\n      colVal = physMap[top * cols + right];\n      this.collider.collidePlatform(\n        projectile,\n        right * this.tileSize,\n        top * this.tileSize,\n        colVal,\n        this.tileSize\n      );\n\n      [right, bottom] = projectile.getBottomRightPos();\n      colVal = physMap[bottom * cols + right];\n\n      this.collider.collidePlatform(\n        projectile,\n        right * this.tileSize,\n        bottom * this.tileSize,\n        colVal,\n        this.tileSize\n      );\n\n    }\n\n  }\n  \n\n  playerUpdate() {\n    this.player.setRunning();\n    this.player.isIdle();\n    this.player.setOldPos();\n\n    if (!this.player.idle) {\n      // if (this.player.velX > 7 || this.player.velX < -7) {\n      //   if (this.player.keydown)\n      //   this.player.velX += (this.player.velX > 0) ? -1 : 1;\n      // } else {\n      //   this.player.dash = false;\n      // }\n\n      // if (this.player.runningKeyDown && this.player.dashing) {\n      //   if (this.player.velX > 7 || this.player.velX < -7) {\n      //     this.player.velX += (this.player.velX > 0) ? -1 : 1;\n      //   }\n\n      // } else if (this.player.onGround && this.player.dashing && !this.player.runningKeyDown) {\n      //   this.player.velX += (this.player.velX > 0) ? -1 : (this.player.velX < 0) ? 1 : 0;\n      // }\n      // if (this.player.direction === \"right\") {\n      //   if ((this.player.onGround && !this.player.keydown && this.player.velX > 0)) {\n      //     this.player.velX -= 1;\n      //     // this.player.velX < 1 ? (this.player.velX = 0) : (this.player.velX /= CONSTANTS.FRICTION);\n      //   }\n      // } else if (this.player.direction === \"left\") {\n      //   if ((this.player.onGround && !this.player.keydown && this.player.velX > 0)) {\n      //     this.player.velX += 1;\n      //   }\n      // }\n      this.player.x += this.player.velX;\n      // this.player.isDashing();\n    }\n\n    if (this.player.climbing) {\n        this.player.isClimbing();\n    } else {\n        this.player.inAir();\n\n    }\n\n    this.collider.collidePlayer(this.player, this.canvas, this.cleared);\n    this.playerPlatformCheck();\n  }\n\n  renderEnemies() {\n    // if (this.level.screen === 6 || this.level.screen === 8) {\n      this.enemyCount = Object.keys(this.level.enemies).length;\n    // } \n    // else if (this.level.screen = 8) {\n    //   this.enemyCount = 100;\n    // }\n\n    if (!this.cleared) {\n      for (let key in this.enemies) {\n        // if (this.enemies[key].dying && !this.enemies[key].dead) continue;\n        this.projectilePlatformCheck(this.enemies[key]);\n\n        if (!this.enemies[key].dead) {\n          this.enemies[key].drawEnemy(this.ctx, this.frameCount);\n          this.collider.collideEnemy(this.player, this.enemies[key]);\n          this.enemies[key].move(this.canvas, this.player, this.ctx);\n\n        } else {\n          this.player.damageMeter += (this.enemies[key].points / 6);\n          this.highScore += this.enemies[key].points;\n\n          delete this.enemies[key];\n          this.enemyCount -= 1;\n        }\n      }\n      this.enemiesCleared();\n    }\n  }\n\n  renderFireballs() {\n    if (Object.keys(this.player.fireballs).length !== 0) {\n      for (let key in this.player.fireballs) {\n        let fireball = this.player.fireballs[key];\n        \n        if (this.enemyCount !== 0) {\n          for (let key in this.enemies) {\n            this.collider.collideEnemy(fireball, this.enemies[key]);\n          }\n        }\n        \n        this.projectilePlatformCheck(fireball);\n\n        (!fireball.isHit) ? \n          fireball.drawProjectile(this.ctx, this.frameCount) :\n          delete this.player.fireballs[key];\n      }\n    }\n  }\n\n  renderEnemyProjectiles() {\n    ///Check if any enemies\n    Object.values(this.enemies).forEach((enemy) => {\n      if (Object.keys(enemy.projectiles).length !== 0) {\n        for (let key in enemy.projectiles) {\n          this.collider.collideProjectile(this.player, enemy.projectiles[key]);\n\n          this.projectilePlatformCheck(enemy.projectiles[key]);\n\n          (!enemy.projectiles[key].isHit) ?\n            enemy.projectiles[key].drawProjectile(this.ctx, this.frameCount) :\n            delete enemy.projectiles[key];\n        }\n      }\n    });\n  }\n\n  loadLevel() {\n\n    if (((this.player.x + (this.player.width / 2)) >= this.canvas.width)) {\n      this.level.loadLevel(parseInt(this.level.screen) + 1);\n      this.cleared = false;\n      this.enemies = this.level.enemies;\n      this.enemyCount = Object.keys(this.enemies);\n      this.player.x = 0;\n    } else if ((this.player.x + (this.player.width / 2)) <= 0) {\n      this.level.loadLevel(-1);\n      this.player.x = this.canvas.width - this.player.width;\n    }\n  }\n\n  survivalMode() {\n    if (this.level.screen !== \"8\") return;\n\n    if (this.level.rushLevel === 0) {\n      this.level.rushLevel++;\n      this.level.enemyRushInterval(7000, 6);\n    } else if (this.highScore > 30 && this.level.rushLevel === 1) {\n      this.level.rushLevel++;\n      this.level.enemyRushInterval(6000, 7);\n    } else if (this.highScore > 60 && this.level.rushLevel === 2) {\n      this.level.rushLevel++;\n      this.level.enemyRushInterval(5000, 7);\n    } else if (this.highScore > 100 && this.level.rushLevel === 3) {\n      this.level.rushLevel++;\n      this.level.enemyRushInterval(4000, 8);\n    } else if (this.highScore > 150 && this.level.rushLevel === 4) {\n      this.level.rushLevel++;\n      this.level.enemyRushInterval(3000, 8);\n    } else if (this.highScore > 250 && this.level.rushLevel === 4) {\n      this.level.rushLevel++;\n      this.level.enemyRushInterval(2000, 9);\n\n    }\n  }\n\n  isGameOver() {\n    this.win();\n    this.gameOver = (this.player.dead || this.won) ? true : false;\n  }\n\n  //refactor\n  win() {\n    this.won = (this.level.screen === 6 && Object.keys(this.enemies).length === 0) ? true : false;\n  }\n  \n\n  runGame() {\n    this.isGameOver();\n\n    if (!this.gameOver) {\n      this.loadLevel();\n      this.level.renderBackground(this.ctx, this.canvas);\n      if (this.level.screen > 3) this.level.drawLevel(this.ctx);\n      this.player.drawSprite(this.frameCount);\n      // this.player.drawPlayer(this.frameCount);\n      this.playerUpdate();\n      if (this.level.screen < 5) {\n        this.level.renderMid(this.ctx, this.canvas);\n        this.level.renderFront(this.ctx, this.canvas);\n      }\n      this.survivalMode(this.level, this.highScore);\n\n      // this.enemies[1].drawEnemy(this.ctx, this.frameCount);\n      this.renderEnemies();\n      // this.enemies[1].callAttack(this.frameCount);\n      \n      this.renderEnemyProjectiles();\n      this.renderFireballs();\n      \n      this.HUD.drawHUD(this.canvas, this.ctx, this.player, this.frameCount, this.highScore);\n\n    } else {\n      if (!this.won) {\n        this.level.theme.pause();\n        this.highScore = Math.floor(this.highScore + this.player.health);\n \n        this.ctx.drawImage(\n            this.embers,\n            0,\n            0,\n            852,\n            400,\n            0, 0,\n            900, 600\n        );\n  \n        this.ctx.font = \"130px Arial\";\n        this.ctx.fillStyle = \"rgb(46, 2, 2)\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"GAME OVER\", this.canvas.width / 2, this.canvas.height / 2);\n\n\n        this.ctx.font = \"80px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\n          `YOUR SCORE IS ${this.highScore}`,\n          this.canvas.width / 2,\n          450\n        );\n\n        this.ctx.font = \"50px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\n          \"Press Enter to Play Again\",\n          this.canvas.width / 2,\n          550\n        );\n\n      } else {\n        this.level.theme.pause();\n\n        this.ctx.drawImage(\n          this.embers,\n          0,\n          0,\n          852,\n          400,\n          0, 0,\n          900, 600\n        );\n        this.ctx.font = \"80px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"CONGRATS!\", this.canvas.width / 2, 160);\n\n\n        this.ctx.font = \"80px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"YOU BEAT LEVEL 1\", this.canvas.width / 2, this.canvas.height / 2);\n\n        this.ctx.font = \"80px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(`YOUR SCORE IS ${this.highScore}`, this.canvas.width / 2, 450);\n\n\n        this.ctx.font = \"50px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"Press Enter to Play Again\", this.canvas.width / 2, 550);\n      }\n\n    } \n    \n  }\n\n}\n\n\n\n\n\nexport default Game;","import Controller from \"./util/Controller\";\nimport Level from \"./Levels/Level\";\nimport Player from \"./Player\";\nimport Game from \"./Game\";\nimport GameHUD from \"./GameHUD\";\n\n\nclass GameView {\n  constructor (canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    // this.game = new Game(this.canvas, this.ctx);\n    this.game = null;\n    this.splash = new Image();\n    this.splash.src = \"./assets/firegirl.jpg\";\n    this.logo = new Image();\n    this.logo.src = \"./assets/firegirl_logo_dark.png\";\n\n\n    this.renderGame = this.renderGame.bind(this);\n    this.loadImage = this.loadImage.bind(this);\n    this.newGame = this.newGame.bind(this);\n    this.newEnemyRush = this.newEnemyRush.bind(this);\n\n    window.addEventListener(\"keydown\", (event) => {\n      event.preventDefault();\n      switch (event.key) {\n        case \"Enter\": \n          if (!this.game || this.game.gameOver) {\n            this.newGame();\n          }\n          break;\n        case \" \":\n          if (!this.game || this.game.gameOver) {\n            this.newEnemyRush();\n          };\n          break;\n        case \"m\": \n          this.game.level.theme.mute();\n          break;\n        default:\n          return;\n      }\n    });\n\n  }\n\n  loadImage() {\n    let tileMap = new Image();\n    tileMap.src = \"./assets/tileGen.png\";\n    return tileMap;\n  }\n\n  newGame() {\n    if (!this.game || this.game.gameOver) {\n      this.game = new Game(this.canvas, this.ctx);\n      this.game.HUD = new GameHUD();\n      this.game.level.theme.play();\n    }\n  }\n\n  newEnemyRush() {\n    if (!this.game || this.game.gameOver) {\n      this.game = new Game(this.canvas, this.ctx, 2);\n      // this.game.newLevel();\n      // this.game.level = new Level({\n      //   ctx: this.ctx,\n      //   mapKeys: Level.level2(),\n      //   player: this.game.player,\n      //   tileSize: this.game.tileSize\n      // });\n      this.game.HUD = new GameHUD();\n      this.game.level.theme.play();\n    }\n    // if (!this.game || this.game.gameOver) {\n    //   this.game = new Game(this.canvas, this.ctx);\n    //   this.game.level.loadLevel(8);\n    //   this.game.level.enemiesInterval();\n    //   this.game.HUD = new GameHUD();\n    //   this.game.level.theme.play();\n    // }\n  }\n\n\n  renderGame() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    if (!this.game) {\n      this.ctx.drawImage(\n          this.splash,\n          0,\n          0,\n          920,\n          644,\n          0, 0,\n          this.canvas.width, this.canvas.height\n      );\n\n      // this.ctx.font = \"100px Arial\";\n      // this.ctx.fillStyle = \"rgb(46, 2, 2)\";\n      // this.ctx.textAlign = \"center\";\n      // this.ctx.fillText(\"FIRE GIRL\", this.canvas.width / 2, this.canvas.height / 3);\n      // this.ctx.filter = \"brightness(50%)\";\n      this.ctx.drawImage(\n        this.logo,\n        0,\n        0,\n        636,\n        171,\n        this.canvas.width / 6,\n        this.canvas.height / 5,\n        636,\n        171\n      );\n      this.ctx.font = \"1.8em Arial\";\n      this.ctx.fillStyle = \"pink\";\n      this.ctx.textAlign = \"center\";\n      this.ctx.fillText(\"Press Enter to Play Level 1\", this.canvas.width / 2, this.canvas.height * (2/3));\n\n      this.ctx.font = \"1.8em Arial\";\n      this.ctx.fillStyle = \"pink\";\n      this.ctx.textAlign = \"center\";\n      this.ctx.fillText(\"Press Space to Play Survival Mode\", this.canvas.width / 2, this.canvas.height * (7/9));\n    }\n\n    if (this.game) {\n\n      this.game.runGame();\n      \n    }\n\n    window.requestAnimationFrame(this.renderGame);\n  }\n\n\n\n\n} \n\n\n\nexport default GameView;\n\n","import \"./styles/index.scss\";\nimport GameView from \"./GameView\";\n\n// const greeting = testObj?.key2?.key3 || testObj.key1;\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  let canvas = document.getElementById(\"gameCanvas\");\n  let ctx = canvas.getContext(\"2d\");\n  let gameView = new GameView(canvas, ctx);\n\n  gameView.renderGame();\n\n  // ctx.beginPath();\n  // ctx.rect(0, 0, canvas.width, canvas.height);\n  // ctx.fillStyle = \"rgba(255, 255, 255, .1)\";\n  // ctx.fill();\n  // ctx.closePath();\n\n  // ctx.font = \"130px Arial\";\n  // ctx.fillStyle = \"red\";\n  // ctx.textAlign = \"center\";\n  // ctx.fillText(\"GAME OVER\", canvas.width / 2, canvas.height / 2);\n  // let img = new Image();\n  // img.src = \"./assets/firegirl.jpg\";\n  // img.onload = () => {\n  //   // ctx.drawImage(img, 0, 0);\n  //         ctx.drawImage(\n  //         img,\n  //         0,\n  //         0,\n  //         920,\n  //         644,\n  //         0, 0,\n  //         900, 600\n  //   );\n  // };\n  \n\n  // let fromRight = canvas.width - 50;\n  // ctx.beginPath();\n  // ctx.arc(fromRight, canvas.height - 30, 5, 0, 2 * Math.PI, false);\n  // ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.fill();\n  // ctx.lineWidth = 5;\n  // ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.stroke();\n  // ctx.closePath();\n\n  // ctx.beginPath();\n  // ctx.arc(canvas.width - 80, canvas.height - 30, 5, 0, 2 * Math.PI, false);\n  // ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.fill();\n  // ctx.lineWidth = 5;\n  // ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.stroke();\n  // ctx.closePath();\n\n  // ctx.beginPath();\n  // ctx.arc(canvas.width - 110, canvas.height - 30, 5, 0, 2 * Math.PI, false);\n  // ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.fill();\n  // ctx.lineWidth = 5;\n  // ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.stroke();\n  // ctx.closePath();\n  \n  // img.onload = () => {\n  //   ctx.drawImage(\n  //     img,\n  //     22 ,\n  //     400,\n  //     35,\n  //     35,\n  //     0, 0,\n  //     35, 35\n  //   );\n  // };\n\n\n\n});\n"],"sourceRoot":""}