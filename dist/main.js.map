{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/Controller.js","webpack:///./src/Objects/GameObject.js","webpack:///./src/util/Music.js","webpack:///./src/Objects/Characters/Character.js","webpack:///./src/Player.js","webpack:///./src/util/Collision.js","webpack:///./src/util/Sound.js","webpack:///./src/Objects/Projectiles/Projectile.js","webpack:///./src/Objects/Enemies/Enemy.js","webpack:///./src/Objects/Enemies/Helicopter.js","webpack:///./src/Objects/Enemies/Spider.js","webpack:///./src/Objects/Enemies/Vinehead.js","webpack:///./src/Objects/Projectiles/ElectricBall.js","webpack:///./src/Objects/Enemies/Jellyfish.js","webpack:///./src/Objects/Projectiles/Vine.js","webpack:///./src/Objects/Enemies/BossVinehead.js","webpack:///./src/Levels/Level.js","webpack:///./src/GameHUD.js","webpack:///./src/Game.js","webpack:///./src/GameView.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Controller","player","this","keysPressed","keydown","keyup","window","addEventListener","event","preventDefault","idle","KEYS","left","direction","velX","right","up","upPressed","canClimb","console","log","climbing","velY","down","jump","fire","shootFire","onGround","dash","runningKeyDown","GameObject","options","pos","ctx","canvas","width","height","x","y","oldX","oldY","tileSize","rightSide","leftSide","topSide","bottomSide","getTopLeftPos","getTopRightPos","getBottomLeftPos","getBottomRightPos","Math","floor","Music","music","document","createElement","src","id","setAttribute","style","display","play","pause","mute","muted","Character","vel","health","spriteMap","Image","CONSTANTS","Player","character","loadImage","newSprite","loadImage2","fireballs","idleWidth","runWidth","attackWidth","isRunning","jumpCount","frameCount","attacking","attackAnimTimeout","dashing","isHit","dying","dead","drawPlayer","drawAttack","drawRunning","drawIdle","drawSprite","setOldPos","inAir","isIdle","whichDirection","setRunning","setHit","setDying","isClimbing","getDirX","getDirY","drawImage","scale","vert","keys","length","clearTimeout","setTimeout","Projectile","fireballVert","fireball","launchSound","damage","hitCooldown","climb","Collision","collidePlayer","collidePlatform","collidePlatTop","collidePlatBottom","collidePlatLeft","collidePlatRight","collideSlopeFortyFiveRight","collideSlopeFortyFiveRightBottom","collideSlopeFortyFiveLeft","collideSlopeFortyFiveLeftBottom","collideSlopeTwentyLeft","collideSlopeTwentyLeftBottom","collideSlopeTwentyRight","collideSlopeTwentyRightBottom","climbable","collideEnemy","collisionPlatformKeys","1","obj","colVal","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","53","58","63","67","cleared","obj1","obj2","hitBox","bottom","top","dir","points","gameObj","tileLeft","tileBottom","tileY","vlY","tileRight","half","tileTop","gameObject","Sound","sound","idName","volume","proj","image","impacted","impactTimeout","impactSrc","impact","frameStartX","frameStartY","frameWidth","frameHeight","frameNum","impactWidth","impactHeight","impactFrameWidth","impactFrameHeight","impactStartX","impactStartY","hitTimeout","collider","timeOutHit","updateProjectile","drawProjectile","drawImpact","physicalMap","hit","Enemy","enemy","projectiles","getMidX","getMidY","drawEnemy","shootProj","callAttack","helibullet","attackInterval","setInterval","Helicopter","bounds","multiplier","clearInterval","Spider","startFrameCount","enemyInterval","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","closePath","count","Vinehead","active","opening","playerCheckTimeout","checkPlayerPos","homing","playerCheckInterval","ElectricBall","impactSound","shock","Jellyfish","setAttackInterval","Vine","boss","vine","charging","startX","boundsY","frameCountOffset","attack","backUp","charge","drawVines","playerCheck","move","random","int","chargeTimeout","vineTimeout","state","BossVinehead","vineNum","vines","vines1","shuffleVines","renderVines","attackVines","startAttack","bossInterval","attackTimeout","vineInterval","j","forEach","Level","mapKeys","screen","renderMap","cols","rows","tileMap","mapTileSize","enemies","enemyCount","theme","levelLayers","loadImages","spawnTier","rushLevel","spawnTierGroup","rushInterval","enemyRushSpawn","enemyRushInterval","getTile","getLeft","getRight","getTop","getBottom","drawLevel","loadLevel","enemiesInterval","spawnEnemies","enemyRush","renderBackground","renderMid","renderFront","spider1","0","hel2","hel1","jell2","jell1","vine3","vine1","vine2","background","mid","front","spider2","spider3","boss1","images","col","row","parseInt","spawnInterval","num","tierAmount","tile","tileCut","GameHUD","drawHealth","drawHUD","drawAmmo","drawPoints","img","rect","fillStyle","fill","healthMeter","fromRight","arc","PI","font","textAlign","fillText","Game","lvl","levelCall","level1","level2","controller","level","HUD","gameOver","embers","highScore","playerPlatformCheck","playerUpdate","projectilePlatformCheck","renderFireballs","renderEnemies","renderEnemyProjectiles","runGame","isGameOver","win","enemiesCleared","resizeGame","newLevel","survivalMode","frameInterval","floorCount","climbCount","physMap","projectile","values","collideProjectile","won","GameView","game","splash","renderGame","newGame","newEnemyRush","clearRect","requestAnimationFrame","getElementById","getContext"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","class Controller {\n  constructor(player) {\n    // this.gameview = gameview;\n    this.player = player;\n\n    this.keysPressed = {};\n\n    this.keydown = this.keydown.bind(this);\n    this.keyup = this.keyup.bind(this);\n    window.addEventListener(\"keydown\", this.keydown);\n    window.addEventListener(\"keyup\", this.keyup);\n  }\n\n  keydown(event) {\n    event.preventDefault();\n    this.player.idle = false;\n    this.player.keydown = true;\n    \n    switch (Controller.KEYS[event.key]) {\n    // switch (Controller.KEYS[event.keyCode]) {\n      case \"left\":\n        this.keysPressed.left = true;\n        // this.player.runningKeyDown = true;\n        this.player.direction = \"left\";\n        this.player.velX = -7;\n\n        break;\n      case \"right\":\n        this.keysPressed.right = true;\n        // this.player.runningKeyDown = true;\n\n        this.player.direction = \"right\";\n        this.player.velX = 7;\n        break;\n      case \"up\":\n        this.keysPressed.up = true;\n        this.player.upPressed = this.keysPressed.up;\n\n        if (this.player.canClimb) {\n          console.log(this.player.canClimb);\n          console.log(this.player.idle);\n\n          this.player.climbing = true;\n          this.player.velY = -7;\n        }\n        break;\n      case \"down\":\n        this.keysPressed.down = true;\n        if (this.player.canClimb) {\n          console.log(this.player.canClimb);\n          this.player.climbing = true;\n          this.player.velY = 7;\n        }\n        break;\n      case \"jump\":\n        this.keysPressed.jump = true;\n        this.player.jump();\n        break;\n      case \"fire\":\n\n        this.keysPressed.fire = true;\n        if (this.keysPressed.up) {\n          this.player.shootFire(\"up\");\n        } else if (this.keysPressed.down && !this.player.onGround) {\n          this.player.shootFire(\"down\");\n        } else {\n          this.player.shootFire();\n\n        }\n        break;\n      case \"dash\":\n        this.keysPressed.dash = true;\n        // this.player.dash = true;\n        // if (this.keysPressed.left || this.keysPressed.right) {\n        //   this.player.dash();\n        // }\n        // if (this.player.direction === \"right\") {\n        //   this.player.velX = 14;\n        // } else {\n        //   this.player.velX = -14;\n        // }\n      case \"space\":\n        // this.gameview.Ticker.paused = (this.gameview.Ticker.paused) ? false: true;\n        break;\n      default:\n        return;\n    }\n\n  }\n\n  keyup(event) {\n    // if (Controller.KEYS[event.keyCode] === \"left\" ||\n    //   Controller.KEYS[event.keyCode] === \"right\") {\n      // this.player.keydown = false;\n    //   // this.player.velX = 0;\n    //   // this.player.idle =ß true;\n    //   return;\n    // }\n    event.preventDefault();\n\n    switch (Controller.KEYS[event.key]) {\n    // switch (Controller.KEYS[event.keyCode]) {\n\n      case \"left\":\n        this.keysPressed.left = false;\n        // this.player.velX = 0;\n        this.player.runningKeyDown = false;\n\n        if (!this.keysPressed.left && !this.keysPressed.right) this.player.velX = 0;\n\n        break;\n      case \"right\":\n        this.keysPressed.right = false;\n        // this.player.runningKeyDown = false;\n\n        // this.player.velX *= -1;\n        if (!this.keysPressed.left && !this.keysPressed.right) this.player.velX = 0;\n        break;\n      case \"up\":\n        this.keysPressed.up = false;\n        this.player.upPressed = this.keysPressed.up;\n\n        if (this.player.climbing) this.player.climbing = false;\n        break;\n      case \"down\":\n        this.keysPressed.down = false;\n        break;\n      case \"jump\":\n        this.keysPressed.jump = false;\n        break;\n      case \"fire\":\n        this.keysPressed.fire = false;\n        break;\n      case \"dash\":\n        this.keysPressed.dash = false;\n      case \"space\":\n        // this.gameview.Ticker.paused = (this.gameview.Ticker.paused) ? false: true;\n        break;\n      default:\n        return;\n    }\n\n\n    this.player.idle = true;\n    // this.keysPressed = {};\n    // console.log(Controller.KEYS[event.keyCode])\n    // debugger\n\n  }\n}\n\n\n// Controller.KEYS = {\n//   19: 'space',\n//   37: 'left',\n//   38: 'up',\n//   39: 'right',\n//   40: 'down',\n//   65: 'jump',\n//   68: 'fire',\n//   83: 'dash',\n//   13: 'enter'\n// };\n\nController.KEYS = {\n  \"space\": 'space',\n  \"ArrowLeft\": 'left',\n  \"ArrowUp\": 'up',\n  \"ArrowRight\": 'right',\n  \"ArrowDown\": 'down',\n  \"a\": 'jump',\n  \"d\": 'fire',\n  \"s\": 'dash',\n  \"Enter\": 'enter'\n};\n\n\n\nexport default Controller;","\n\nclass GameObject {\n  constructor(options) {\n    this.name = options.name;\n    this.pos = options.pos;\n    this.ctx = options.ctx;\n    this.canvas = options.canvas;\n    this.width = options.width;\n    this.height = options.height;\n    this.x = options.pos[0];\n    this.y = options.pos[1];\n    this.oldX = this.x;\n    this.oldY = this.y;\n    this.tileSize = 60;\n\n\n\n    this.rightSide = this.rightSide.bind(this);\n    this.leftSide = this.leftSide.bind(this);\n    this.topSide = this.topSide.bind(this);\n    this.bottomSide = this.bottomSide.bind(this);\n\n    this.getTopLeftPos = this.getTopLeftPos.bind(this);\n    this.getTopRightPos = this.getTopRightPos.bind(this);\n    this.getBottomLeftPos = this.getBottomLeftPos.bind(this);\n    this.getBottomRightPos = this.getBottomRightPos.bind(this);\n  }\n\n  rightSide() {\n    return this.x + this.width;\n  }\n\n  leftSide() {\n    return this.x;\n  }\n\n  topSide() {\n    return this.y;\n  }\n\n  bottomSide() {\n    return this.y + this.height;\n  }\n\n  getTopLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n\n  getTopRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n}\n\nexport default GameObject;","class Music {\n    constructor(options){\n        this.music = document.createElement(\"audio\");\n        this.music.src = options.src;\n        this.music.id = \"theme\";\n        this.music.setAttribute(\"preload\", \"auto\");\n        this.music.setAttribute(\"controls\", \"none\");\n        this.music.setAttribute(\"loop\", \"true\");\n        this.music.setAttribute(\"muted\", \"false\");\n        this.music.style.display = \"none\";\n\n        this.play = this.play.bind(this);\n        this.pause = this.pause.bind(this);\n        this.mute = this.mute.bind(this);\n    };\n\n    play() {\n        this.music.play();\n    }\n    pause() {\n        this.music.pause();\n    }\n\n    mute() {\n        this.music.muted =!this.music.muted;\n    }\n\n}\n\nexport default Music;","import GameObject from \"../GameObject\";\n\nconst GRAVITY = 0.5;\nconst FRICTION = 0.5;\n\nclass Character extends GameObject {\n  constructor(options) {\n    super({ \n      name: options.name, \n      pos: options.pos, \n      ctx: options.ctx, \n      width: options.width,\n      height: options.height\n    });\n    this.vel = [0, 0];\n    this.health = 200;\n \n  }\n\n  loadImage() {\n    let spriteMap = new Image();\n    spriteMap.src = \"./assets/charSprite.png\";\n    return spriteMap;\n    // this.tileMap.onLoad = this.drawLevel(ctx);\n  }\n  loadImage2() {\n    let spriteMap = new Image();\n    spriteMap.src = \"./assets/SeisaSpriteSheet.png\";\n    return spriteMap;\n    // this.tileMap.onLoad = this.drawLevel(ctx);\n  }\n\n  // drawModel() {\n  //   this.ctx.beginPath();\n  //   this.ctx.rect(20, 40, 40, 70);\n  //   this.ctx.fillStyle = \"#FF000\";\n  //   this.ctx.fill();\n  //   this.ctx.closePath();\n\n  // }\n\n  \n}\n\nexport default Character;","import Character from \"./Objects/Characters/Character\";\nimport Collision from \"./util/Collision\";\nimport Projectile from \"./Objects/Projectiles/Projectile\";\n\n\nconst CONSTANTS = {\n  GRAVITY: 1,\n  FRICTION: 1.5,\n  MAX_VEL: 50,\n};\n\nclass Player {\n  constructor(ctx, canvas) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.character = new Character({\n      name: \"Seisa\",\n      pos: [20, 210],\n      ctx: this.ctx,\n      canvas: this.canvas,\n      // width: 30,\n      // width: 40,\n      width: 42.5,\n      height: 82\n      // height: 45\n      // height: 54\n    });\n    this.health = this.character.health;\n    this.spriteMap = this.character.loadImage();\n    this.newSprite = this.character.loadImage2();\n    this.fireballs = {};\n    \n    this.vel = this.character.vel;\n    this.x = this.character.x;\n    this.y = this.character.y;\n    this.idleWidth = 42.5;\n    this.runWidth = 57;\n    this.attackWidth =\n    this.oldX = this.x;\n    this.oldY = this.y;\n    this.width = this.character.width;\n    this.height = this.character.height;\n    this.velX = this.vel[0];\n    this.velY = this.vel[1];\n    this.onGround = false;\n    this.idle = true;\n    this.keydown = false;\n    this.runningKeyDown = false;\n    this.isRunning = false;\n    this.direction = \"right\";\n    this.jumpCount = 2;\n    this.canClimb = false;\n    this.climbing = false;\n    this.frameCount = 0;\n    this.attacking = false;\n    this.upPressed = false;\n    this.attackAnimTimeout = \"\";\n    this.dashing = false;\n\n    this.isHit = false;\n    this.dying = false;\n    this.dead = false;\n\n\n\n    this.drawPlayer = this.drawPlayer.bind(this);\n    this.jump = this.jump.bind(this);\n    // this.move = this.move.bind(this);\n    this.shootFire = this.shootFire.bind(this);\n    this.drawAttack = this.drawAttack.bind(this);\n    this.drawRunning = this.drawRunning.bind(this);\n    this.drawIdle = this.drawIdle.bind(this);\n    this.drawSprite = this.drawSprite.bind(this);\n\n    this.setOldPos = this.setOldPos.bind(this);\n    this.inAir = this.inAir.bind(this);\n    this.isIdle = this.isIdle.bind(this);\n    this.whichDirection = this.whichDirection.bind(this);\n    this.setRunning = this.setRunning.bind(this);\n    this.setHit = this.setHit.bind(this);\n    this.setDying = this.setDying.bind(this);\n    this.isClimbing = this.isClimbing.bind(this);\n    this.getDirX = this.getDirX.bind(this);\n    this.getDirY = this.getDirY.bind(this);\n  }\n\n  drawPlayer(frameCount) {\n// .74\n// .59\n    this.setDying();\n    // this.isIdle();\n    if (this.isHit && frameCount % 3 === 0 ) return;\n    if (this.velX === 0) {\n      if (this.direction === \"right\") {\n        this.ctx.drawImage(\n          this.newSprite,\n          // this.spriteMap,\n          0,\n          // this.spriteMap,\n          529,\n          89,\n          175,\n          this.x, this.y,\n          this.width, this.height\n          // this.width - 5, this.height\n        );\n      } else {\n        this.ctx.scale(-1, 1);\n        this.ctx.drawImage(\n          // this.spriteMap,\n          // (Math.floor(frameCount / 2) % 10) * 147,\n          // 251,\n          // 147,\n          // 251,\n          this.newSprite,\n          0,\n          529,\n          89,\n          175,\n          -this.x - this.width, this.y,\n          // -this.x - this.width - 5, this.y,\n          this.width, this.height\n          // this.width - 5, this.height\n        );\n        this.ctx.scale(-1, 1);\n      }\n    } else if (this.velX > 0) {\n      this.ctx.drawImage(\n        this.newSprite,\n        // this.spriteMap,\n        (Math.floor(frameCount / 2) % 12) * 126.25 + 1,\n        // this.spriteMap,\n        0,\n        126.25,\n        175,\n        this.x, this.y,\n        this.width + 5, this.height\n      );\n    } else if (this.velX < 0) {\n      this.ctx.scale(-1, 1);\n      this.ctx.drawImage(\n        this.newSprite,\n        // this.spriteMap,\n        (Math.floor(frameCount / 2) % 12) * 126.25 + 1,\n        // this.spriteMap,\n        0,\n        126.25,\n        175,\n        -(this.x) - this.width, this.y,\n        this.width + 5, this.height\n      );\n      this.ctx.scale(-1, 1);\n\n    } \n    ///change this.width and height based on movement\n  }\n\n  drawRunning(frameCount) {\n    if (this.direction === \"right\") {\n      this.ctx.drawImage(\n        this.newSprite,\n        // this.spriteMap,\n        (Math.floor(frameCount / 2) % 12) * 126.4 + 1,\n        // this.spriteMap,\n        0,\n        126.4,\n        175,\n        this.x, this.y,\n        this.width + 5, this.height\n      );\n    } else {\n      this.ctx.scale(-1, 1);\n      this.ctx.drawImage(\n        this.newSprite,\n        // this.spriteMap,\n        (Math.floor(frameCount / 2) % 12) * 126.4 + 1,\n        // this.spriteMap,\n        0,\n        126.4,\n        175,\n        -(this.x) - this.width, this.y,\n        this.width + 5, this.height\n      );\n      this.ctx.scale(-1, 1);\n\n    } \n  }\n\n\n  drawAttack(frameCount, isRunning) {\n    if (isRunning) {\n      if (this.direction === \"right\") {\n        this.ctx.drawImage(\n          this.newSprite,\n          (Math.floor(frameCount / 2) % 4) * 160,\n          176,\n          160,\n          175,\n          this.x, this.y,\n          this.width + (this.width / 3), this.height\n        );\n      } else if (this.direction === \"left\") {\n        this.ctx.scale(-1, 1);\n        this.ctx.drawImage(\n          this.newSprite,\n          (Math.floor(frameCount / 2) % 4) * 160,\n          176,\n          160,\n          175,\n          -this.x - this.width, this.y,\n          this.width + (this.width / 3), this.height\n        );\n        this.ctx.scale(-1, 1);\n      }\n    } else {\n\n      if (this.direction === \"right\") {\n        if (this.upPressed) {\n          this.ctx.drawImage(\n            this.newSprite,\n            (Math.floor(frameCount / 2) % 4) * 89,\n            730,\n            89,\n            195,\n            this.x, this.y - (this.height / 10),\n            this.width, this.height * 1.1\n          );\n        } else {\n          this.ctx.drawImage(\n            this.newSprite,\n            (Math.floor(frameCount / 2) % 4) * 125.1,\n            353,\n            123.25,\n            175,\n            this.x, this.y,\n            this.width + (this.width / 2.5), this.height\n          );\n        }\n      } else if (this.direction === \"left\") {\n        this.ctx.scale(-1, 1);\n        if (this.upPressed) {\n          this.ctx.drawImage(\n            this.newSprite,\n            (Math.floor(frameCount / 2) % 4) * 89,\n            730,\n            89,\n            195,\n            -this.x - this.width, this.y - (this.height / 10),\n            this.width, this.height * 1.1\n          );\n        } else {\n          this.ctx.drawImage(\n            this.newSprite,\n            (Math.floor(frameCount / 2) % 4) * 125.1,\n            353,\n            123.25,\n            175,\n            -this.x - this.width, this.y,\n            this.width + (this.width / 2.5), this.height\n          );\n        }\n        this.ctx.scale(-1, 1);\n    }\n  }\n}\n\n  drawIdle(frameCount) {\n    if (this.direction === \"right\") {\n      this.ctx.drawImage(\n        this.newSprite,\n        0,\n        529,\n        89,\n        175,\n        this.x, this.y,\n        this.width, this.height\n        // this.width - 5, this.height\n      );\n    } else {\n      this.ctx.scale(-1, 1);\n      this.ctx.drawImage(\n        this.newSprite,\n        0,\n        529,\n        89,\n        175,\n        -this.x - this.width, this.y,\n        // -this.x - this.width - 5, this.y,\n        this.width, this.height\n        // this.width - 5, this.height\n      );\n      this.ctx.scale(-1, 1);\n    }\n  }\n\n  drawSprite(frameCount) {\n    this.setDying();\n    // this.isIdle();\n    if (this.isHit && frameCount % 3 === 0) return;\n\n    if (this.isRunning) {\n      (!this.attacking) ? this.drawRunning(frameCount) : this.drawAttack(frameCount, this.isRunning);\n    } else {\n      (!this.attacking) ? this.drawIdle(frameCount) : this.drawAttack(frameCount, this.isRunning);\n    }\n  }\n\n\n\n  shootFire(vert = null) {\n    if (Object.keys(this.fireballs).length === 3) {\n      this.attacking = false;\n      return;\n    }\n\n    console.log(\"------\");\n    console.log(this.upPressed);\n    console.log(this.attacking);\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.fireballs[i]) {\n        key = i;\n        clearTimeout(this.attackAnimTimeout);\n        this.attacking = true;\n        this.attackAnimTimeout = setTimeout(() => {\n          this.attacking = false\n        }, 200)\n        ///////\n        break;\n      }\n    }\n\n    if (this.direction === \"right\") {\n      if (vert === \"up\") {\n        this.fireballs[key] = new Projectile(\n          Projectile.fireballVert(\n            [this.rightSide() - (this.width / 2),\n            this.y + (this.height)],\n            // [this.rightSide() - (this.width / 2),\n            // this.bottomSide() + this.height],\n            0, -20, vert)\n        );\n      } else if (vert === \"down\") {\n        this.fireballs[key] = new Projectile(\n          Projectile.fireballVert(\n            [this.rightSide() - (this.width / 2),\n            this.bottomSide() - this.height],\n            0, 20, vert)\n            );\n          this.velY = -3;\n        \n      } else {\n        this.fireballs[key] = new Projectile(\n          Projectile.fireball(\n            [this.rightSide() - (this.width / 10),\n            this.topSide() + (this.height / 5)],\n            20, 0, \"right\")\n        );\n      }\n\n    } else if (this.direction === \"left\") {\n\n      if (vert === \"up\") {\n        this.fireballs[key] = new Projectile(\n          Projectile.fireballVert(\n            [this.rightSide() - (this.width * .75),\n              this.y + (this.height)],\n            // [this.rightSide() - (this.width / 2),\n            // this.bottomSide() + this.height],\n            0, -20, vert)\n        );\n      } else if (vert === \"down\") {\n        this.fireballs[key] = new Projectile(\n          Projectile.fireballVert(\n            [this.rightSide() - (this.width / 2),\n            this.bottomSide() - this.height],\n            0, 20, vert)\n        );\n        this.velY -= 10;\n        this.jumpCount -= 1;\n      } else {\n        this.fireballs[key] = new Projectile(\n          Projectile.fireball(\n            [\n              this.leftSide() - (this.width + (this.width / 2)),\n              this.topSide() + (this.height / 5)\n            ],\n            -20,\n            0,\n            \"left\"\n          )\n        );\n      }\n\n    }\n    this.fireballs[key].launchSound.play();\n\n  }\n    \n  setHit(damage = 10) {\n    if (!this.isHit) {\n      this.isHit = true;\n      this.hitCooldown = setTimeout(() => {\n        this.isHit = false;\n      }, 2000);\n      this.health -= damage;\n    }\n  }\n\n  setDying() {\n\n    if (this.health <= 0) {\n      this.health = 0;\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      setTimeout(() => {\n        this.dead = true;\n      }, 1000);\n    }\n  }\n\n\n  rightSide() {\n    return this.x + this.width;\n  }\n\n  leftSide() {\n    return this.x;\n  }\n\n  topSide() {\n    return this.y;\n  }\n\n  bottomSide() {\n    return this.y + this.height;\n  }\n\n  \n  setOldPos() {\n    this.oldX = this.x;\n    this.oldY = this.y;\n  }\n\n  getDirX() {\n    return this.x + this.velX;\n  }\n\n  getDirY() {\n    return this.y + this.velY;\n  }\n\n  isIdle() {\n    if (this.velX === 0 && this.velY === 0) {\n      this.idle = true;\n    } else {\n      this.idle = false;\n    }\n  }\n\n  inAir() {\n    if (!this.onGround ) {\n      this.y += this.velY;\n      (this.velY + CONSTANTS.GRAVITY > 25) ? this.velY = 25 : this.velY += CONSTANTS.GRAVITY;\n    } else {\n      this.velY = 0;\n    }\n  }\n\n  isClimbing() {\n    if (this.climbing && this.canClimb && this.keydown) {\n      this.y += this.velY;\n    } else {\n      this.velY = 0;\n    }\n  }\n\n  // isDashing() {\n  //   if (this.dashing && this.runningKeyDown) {\n  //     if (this.velX > 7) {\n  //       this.velX -= .1;\n  //     } else if (this.velX < -7) {\n  //       this.velX += .1;\n  //     }\n        \n  //   } \n  //   // else if (this.dashing && !this.runningKeyDown) {\n  //   //   if (this.velX > 0) {\n  //   //     this.velX -= .5;\n  //   //   } else if (this.velX < 0) {\n  //   //     this.velX += .5;\n  //   //   }\n  //   // }\n\n  // }\n\n  // dash() {\n  //   if (this.dashing) return;\n\n  //   this.dashing = true;\n  //   this.velX = (this.direction === \"right\") ? 15 : -15;\n  //   this.dashTimeout = setTimeout(() => {\n  //     this.dashing = false;\n  //   }, 1000)\n  // }\n\n\n  jump() {\n    if (this.jumpCount === 2) {\n      this.onGround = false;\n      this.velY = 0 - 15;\n      this.jumpCount = 1;\n    } else if (this.jumpCount === 1) {\n      this.velY = 0 - 15;\n      this.jumpCount = 0;\n    }\n  }\n\n  climb() {\n    this.climb = (this.climb) ? false : true;\n  }\n\n\n\n\n  setRunning() {\n    if (this.velX !== 0) {\n      this.isRunning = true;\n      this.width = this.runWidth;\n    } else {\n      this.isRunning = false;\n      this.width = this.idleWidth;\n    }\n  }\n\n\n\n  whichDirection() {\n    this.direction = this.velX >= 0 ? \"right\" : \"left\";\n  }\n\n}\n\nexport default Player;","import Player from \"../Player\";\nimport Projectile from \"../Objects/Projectiles/Projectile\";\n// import ElectricBall from \"../Objects/Projectiles/ElectricBall\";\nimport Enemy from \"../Objects/Enemies/Enemy\";\n// import Helicopter from \"../Objects/Enemies/Helicopter\";\n\nclass Collision {\n  constructor() {\n\n\n    this.collidePlayer = this.collidePlayer.bind(this);\n    this.collidePlatform = this.collidePlatform.bind(this);\n    this.collidePlatTop = this.collidePlatTop.bind(this);\n    this.collidePlatBottom = this.collidePlatBottom.bind(this);\n    this.collidePlatLeft = this.collidePlatLeft.bind(this);\n    this.collidePlatRight = this.collidePlatRight.bind(this);\n    // this.collidePlatformSlopeRight = this.collidePlatformSlopeRight.bind(this);\n    this.collideSlopeFortyFiveRight = this.collideSlopeFortyFiveRight.bind(this);\n    this.collideSlopeFortyFiveRightBottom = this.collideSlopeFortyFiveRightBottom.bind(this);\n    this.collideSlopeFortyFiveLeft = this.collideSlopeFortyFiveLeft.bind(this);\n    this.collideSlopeFortyFiveLeftBottom = this.collideSlopeFortyFiveLeftBottom.bind(this);\n\n    this.collideSlopeTwentyLeft = this.collideSlopeTwentyLeft.bind(this);\n    this.collideSlopeTwentyLeftBottom = this.collideSlopeTwentyLeftBottom.bind(this);\n\n    this.collideSlopeTwentyRight = this.collideSlopeTwentyRight.bind(this);\n    this.collideSlopeTwentyRightBottom = this.collideSlopeTwentyRightBottom.bind(this);\n    \n    this.climbable = this.climbable.bind(this);\n\n    this.collideEnemy = this.collideEnemy.bind(this);\n\n    this.collisionPlatformKeys = {\n      1: (obj, x, y, colVal, tileSize) => {\n        this.collidePlatTop(obj, y);\n      },\n      2: (obj, x, y, colVal, tileSize) => {\n        ////thin platform\n        if (obj.velY > 0) {\n          this.collidePlatTop(obj, y);\n        }\n      },\n      3: (obj, x, y, colVal, tileSize) => {\n        /// bottom\n        this.collidePlatBottom(obj, y + tileSize);\n      },\n      4: (obj, x, y, colVal, tileSize) => {\n        ///left\n        this.collidePlatLeft(obj, x);\n      },\n      5: (obj, x, y, colVal, tileSize) => {\n        ///right\n        this.collidePlatRight(obj, x + tileSize);\n      },\n      6: (obj, x, y, colVal, tileSize) => {\n        ///top / left\n        ///  __\n        /// |\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          // this.collidePlatTop(obj, y)\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      7: (obj, x, y, colVal, tileSize) => {\n        ///top / right\n        ///  __\n        ///    |\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n        }\n      },\n      8: (obj, x, y, colVal, tileSize) => {\n        /// bottom / left\n        ///   __|\n\n        if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      9: (obj, x, y, colVal, tileSize) => {\n        /// bottom / right\n        ///   |__\n        if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x);\n        }\n      },\n      10: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom\n        //// ___\n        //// ___\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          this.collidePlatBottom(obj, y + tileSize);\n        }\n      },\n      11: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom / left\n        ////   ___\n        ////  |___ \n\n        if (obj.velY > 0) {\n          if (this.collidePlatTop(obj, y)) {\n            return;\n          } else if (this.collidePlatBottom(obj, y + tileSize)) {\n            return;\n          } else {\n            this.collidePlatLeft(obj, x);\n          }\n        }\n      },\n      12: (obj, x, y, colVal, tileSize) => {\n        ///top / left / right\n        ////  ___\n        //// |   | \n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else if (this.collidePlatRight(obj, x + tileSize)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      13: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom / right\n        ////  ___\n        ////  ___| \n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n        }\n      },\n      14: (obj, x, y, colVal, tileSize) => {\n        ///bottom / left / right\n        ////  \n        //// |___|\n        if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else if (this.collidePlatRight(obj, x + tileSize)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      15: (obj, x, y, colVal, tileSize) => {\n        //top half in\n        if (obj.velY > 0) {\n\n          this.collidePlatTop(obj, y + tileSize / 2);\n        }\n      },\n      16: (obj, x, y, colVal, tileSize) => {\n        //bottom half in\n        this.collidePlatBottom(obj, y + tileSize / 2);\n      },\n      17: (obj, x, y, colVal, tileSize) => {\n        //left half in\n        this.collidePlatLeft(obj, x + tileSize / 2);\n      },\n      18: (obj, x, y, colVal, tileSize) => {\n        //right half in\n        this.collidePlatRight(obj, x + tileSize / 2);\n      },\n      19: (obj, x, y, colVal, tileSize) => {\n        //top  half in/ left\n        ///\n        ///|---\n        if (this.collidePlatTop(obj, y + tileSize / 2)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      20: (obj, x, y, colVal, tileSize) => {\n        //top  half in/ right\n        /// ---|\n\n        if (this.collidePlatTop(obj, y + tileSize / 2)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n        }\n      },\n      21: (obj, x, y, colVal, tileSize) => {\n        //bottom half in/ left\n        ///\n        ///|---\n        if (this.collidePlatBottom(obj, y + tileSize / 2)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      22: (obj, x, y, colVal, tileSize) => {\n        //bottom half in/ right\n        /// ---|\n\n        if (this.collidePlatBottom(obj, y + tileSize / 2)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n        }\n      },\n      23: (obj, x, y, colVal, tileSize) => {\n        //top / left half in\n        if (this.collidePlatLeft(obj, x + tileSize / 2)) {\n          return;\n        } else if (obj.x + obj.width > x + tileSize / 2) {\n          this.collidePlatTop(obj, y);\n        }\n      },\n      24: (obj, x, y, colVal, tileSize) => {\n        //top / right half in\n        if (this.collidePlatRight(obj, x + tileSize / 2)) {\n          return;\n        } else if (obj.x < x + tileSize / 2 || obj.x + this.width > x) {\n          this.collidePlatTop(obj, y);\n        }\n      },\n      25: (obj, x, y, colVal, tileSize) => {\n        //bottom / left half in\n        if (this.collidePlatLeft(obj, x + tileSize / 2)) {\n          return;\n        } else if (obj.x + obj.width > x + tileSize / 2) {\n          this.collidePlatBottom(obj, y + tileSize);\n        }\n      },\n      26: (obj, x, y, colVal, tileSize) => {\n        //bottom / right half in\n        if (this.collidePlatRight(obj, x + tileSize / 2)) {\n          return;\n        } else if (obj.x < x + tileSize / 2) {\n          this.collidePlatBottom(obj, y + tileSize);\n        }\n      },\n      27: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom / left half in\n        ////   ___\n        ////  |___ \n        if (obj.x + obj.width > x) {\n          if (this.collidePlatLeft(obj, x + tileSize / 2)) {\n            return;\n          } else if (\n            this.collidePlatBottom(obj, y + tileSize)) {\n            return;\n          } else {\n            this.collidePlatTop(obj, y);\n          }\n        }\n      },\n      28: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom / right half in\n        ////   ___\n        ////   ___| \n        if (obj.x < x + tileSize) {\n          if (this.collidePlatRight(obj, x + tileSize / 2)) {\n            return;\n          } else if (this.collidePlatBottom(obj, y + tileSize)) {\n            return;\n          } else {\n            this.collidePlatTop(obj, y);\n          }\n        }\n      },\n\n      29: (obj, x, y, colVal, tileSize) => {\n        //top half in/ left half in\n        ///\n        ///|---\n        if (obj.x + obj.width > x && obj.y + obj.height > y) {\n          if (this.collidePlatTop(obj, y + tileSize / 2)) {\n            return;\n          } else {\n            this.collidePlatLeft(obj, x + tileSize / 2);\n          }\n        }\n      },\n      30: (obj, x, y, colVal, tileSize) => {\n        //top half in/ right half in\n        /// ---|\n        if (obj.x < x + (tileSize / 2) && obj.y + obj.height > y + (tileSize / 2)) {\n\n          if (this.collidePlatTop(obj, y + tileSize / 2)) {\n            return;\n          } else {\n            this.collidePlatRight(obj, x + tileSize / 2);\n        }\n        }\n      },\n      31: (obj, x, y, colVal, tileSize) => {\n        //bottom half in/ left half in\n        ///\n        ///|---\n        if (obj.x > x && obj.y < y + tileSize) {\n\n          if (this.collidePlatBottom(obj, y + tileSize / 2)) {\n            return;\n          } else {\n            this.collidePlatLeft(obj, x + tileSize / 2);\n          }\n        }\n      },\n      32: (obj, x, y, colVal, tileSize) => {\n        //bottom half in/ right half in\n        /// ---|\n        if (obj.x < x + tileSize && obj.y < y + tileSize) {\n\n          if (this.collidePlatBottom(obj, y + tileSize / 2)) {\n            return;\n          } else {\n            this.collidePlatRight(obj, x + tileSize / 2);\n          }\n        }\n      },\n      33: (obj, x, y, colVal, tileSize) => {\n        ////For Bottom of Screen\n          this.collidePlatTop(obj, y + (tileSize * 0.8));\n      },\n\n      34: (obj, x, y, colVal, tileSize) => {\n        //////////SLOPES/////////////\n        //45 deg left\n\n        if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else {\n          (this.collideSlopeFortyFiveLeft(obj, x + tileSize, y + tileSize))\n\n        }\n      },\n      35: (obj, x, y, colVal, tileSize) => {\n        //45 deg right\n        this.collideSlopeFortyFiveRight(obj, x, y + tileSize);\n      },\n      36: (obj, x, y, colVal, tileSize) => {\n        //22 deg left bottom half\n        this.collideSlopeTwentyLeft(obj, x + tileSize, y + tileSize);\n      },\n      37: (obj, x, y, colVal, tileSize) => {\n        //22 deg right bottom half\n        this.collideSlopeTwentyRight(obj, x, y + tileSize);\n      },\n      38: (obj, x, y, colVal, tileSize) => {\n        //22 deg left top half\n        this.collideSlopeTwentyLeft(obj, x, y + tileSize, 30);\n      },\n      39: (obj, x, y, colVal, tileSize) => {\n        //22 deg right top half\n        this.collideSlopeTwentyRight(obj, x, y + tileSize, tileSize / 2);\n      },\n\n\n      40: (obj, x, y, colVal, tileSize) => {\n        //////////////COLLIDE WITH BOTTOM OF SLOPE//////////\n        //45 deg right bottom\n        ///  /\n        this.collideSlopeFortyFiveRightBottom(obj, x, y + tileSize);\n      },\n      41: (obj, x, y, colVal, tileSize) => {\n        //45 deg left bottom\n          ///  \\\n        this.collideSlopeFortyFiveLeftBottom(obj, x + tileSize, y + tileSize);\n      },\n      42: (obj, x, y, colVal, tileSize) => {\n        //22 deg left bottom / bottom half\n        this.collideSlopeTwentyLeftBottom(obj, x + tileSize, y + tileSize);\n      },\n      43: (obj, x, y, colVal, tileSize) => {\n        //22 deg right bottom / bottom half\n        this.collideSlopeTwentyRightBottom(obj, x, y + tileSize );\n      },\n      44: (obj, x, y, colVal, tileSize) => {\n        //22 deg left bottom / top half\n        this.collideSlopeTwentyLeftBottom(obj, x + tileSize, y + tileSize, tileSize / 2);\n      },\n      45: (obj, x, y, colVal, tileSize) => {\n        //22 deg right bottom / top half\n        this.collideSlopeTwentyRightBottom(obj, x, y + tileSize, tileSize / 2);\n      },\n\n      \n      46: (obj, x, y, colVal, tileSize) => {\n        //45 deg left bottom / top\n        ///  \n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          this.collideSlopeFortyFiveLeftBottom(obj, x, y + tileSize);\n        }\n      },\n      47: (obj, x, y, colVal, tileSize) => {\n        //45 deg right bottom / top\n        ///\n        if (obj.velY > 0) {\n          if (this.collidePlatTop(obj, y)) {\n            return;\n          }\n        }\n        this.collideSlopeFortyFiveRightBottom(obj, x, y + tileSize);\n      },\n\n\n      48: (obj, x, y, colVal, tileSize) => {\n        //45 deg left & left\n        ///  |\\\n        if (this.collidePlatLeft(obj, x)) {\n          return;\n        } else {\n          this.collideSlopeFortyFiveLeft(obj, x, y + tileSize);\n        }\n      },\n      49: (obj, x, y, colVal, tileSize) => {\n        //45 deg left  & right\n        /// /| \n        if (this.collidePlatRight(obj, x + tileSize)) {\n          return;\n        } else {\n          this.collideSlopeTwentyRight(obj, x, y + tileSize, tileSize / 2);\n        }\n      },\n      50: (obj, x, y, colVal, tileSize) => {\n        //22 deg left top half & left\n        ///  |\\\n        if (this.collidePlatLeft(obj, x)) {\n          return;\n        } else {\n          this.collideSlopeTwentyLeft(obj, x, y + tileSize, tileSize / 2);\n        }\n      },\n      51: (obj, x, y, colVal, tileSize) => {\n        //22 deg left top half & right\n        /// /| \n        if (this.collidePlatRight(obj, x + tileSize)) {\n          return;\n        } else {\n          this.collideSlopeTwentyRight(obj, x, y + tileSize, tileSize / 2);\n        }\n      },\n\n\n      53: (obj, x, y, colVal, tileSize) => {\n        ///top / bottom / left / right\n        ////   ___\n        ////  |___ |\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else if (this.collidePlatBottom(obj, y + tileSize)) {\n          return;\n        } else if (this.collidePlatRight(obj, x + tileSize)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n\n\n      58: (obj, x, y, colVal, tileSize) => {\n        // climb\n        if (obj.x + obj.width > x + (tileSize / 4) && obj.x < x + (tileSize * (3/4))) {\n\n          this.climbable(obj, x, y, tileSize);\n        }\n      },\n\n\n      63: (obj, x, y, colVal, tileSize) => {\n        ///right / left / bottom thorn\n        if (this.collidePlatLeft(obj, x)) {\n          if (obj instanceof Player) {\n            obj.setHit(5);\n          }\n          return;\n        } else if (this.collidePlatBottom(obj, y + tileSize / 6)) {\n          if (obj instanceof Player) {\n            obj.setHit(5);\n          }\n          return;\n        } else {\n          this.collidePlatRight(obj, x + tileSize);\n          if (obj instanceof Player) {\n            obj.setHit(5);\n          }\n        }\n      },\n      67: (obj, x, y, colVal, tileSize) => {\n        ///thorn bottom\n        this.collidePlatBottom(obj, y + tileSize / 6);\n        if (obj instanceof Player) {\n          obj.setHit(5);\n        }\n      },\n    };\n\n\n  //   this.colsionPlatformKeys = {\n  //     1: (obj, x, y, colVal, tileSize) => {\n  //       this.collidePlatTop(obj, y);\n  //     },\n  //     2: (obj, x, y, colVal, tileSize) => {\n  //       ////thin platform\n  //       if (obj.velY > 0) {\n  //         this.collidePlatTop(obj, y);\n  //       }\n  //     },\n  //     3: (obj, x, y, colVal, tileSize) => {\n  //       ///top / left\n  //       if (this.collidePlatTop(obj, y)) {\n  //         return;\n  //       } else {\n  //         // this.collidePlatTop(obj, y)\n  //         this.collidePlatLeft(obj, x);\n  //       }\n  //     },\n  //     4: (obj, x, y, colVal, tileSize) => {\n  //       ///top / left / right\n  //       if (this.collidePlatTop(obj, y)) {\n  //         return;\n  //       } else if (this.collidePlatRight(obj, x + tileSize)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatLeft(obj, x);\n  //       }\n  //     },\n  //     5: (obj, x, y, colVal, tileSize) => {\n  //       ///top / bottom / right\n  //       if (this.collidePlatTop(obj, y)) {\n  //         return;\n  //       } else if (this.collidePlatBottom(obj, y + tileSize)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatRight(obj, x + tileSize);\n  //       }\n  //     },\n  //     6: (obj, x, y, colVal, tileSize) => {\n  //       ///top / bottom\n  //       if (this.collidePlatTop(obj, y)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatBottom(obj, y + tileSize);\n  //       }\n  //     },\n  //     7: (obj, x, y, colVal, tileSize) => {\n  //       ///thorn bottom\n  //       this.collidePlatBottom(obj, y + tileSize / 6);\n  //       if (obj instanceof Player) {\n  //         obj.setHit(5);\n  //       }\n  //     },\n  //     8: (obj, x, y, colVal, tileSize) => {\n  //       ///top / right\n  //       if (this.collidePlatTop(obj, y)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatRight(obj, x + tileSize);\n  //       }\n  //     },\n  //     9: (obj, x, y, colVal, tileSize) => {\n  //       ///left\n  //       this.collidePlatLeft(obj, x);\n  //     },\n  //     10: (obj, x, y, colVal, tileSize) => {\n  //       ///right\n  //       this.collidePlatRight(obj, x + tileSize);\n  //     },\n  //     11: (obj, x, y, colVal, tileSize) => {\n  //       ///right / left / bottom thorn\n  //       if (this.collidePlatLeft(obj, x)) {\n  //         if (obj instanceof Player) {\n  //           obj.setHit(5);\n  //         }\n  //         return;\n  //       } else if (this.collidePlatBottom(obj, y + tileSize / 6)) {\n  //         if (obj instanceof Player) {\n  //           obj.setHit(5);\n  //         }\n  //         return;\n  //       } else {\n  //         this.collidePlatRight(obj, x + tileSize);\n  //         if (obj instanceof Player) {\n  //           obj.setHit(5);\n  //         }\n  //       }\n  //     },\n  //     12: (obj, x, y, colVal, tileSize) => {\n  //       //top / left half in\n  //       if (this.collidePlatLeft(obj, x + tileSize / 2)) {\n  //         return;\n  //       } else if (obj.x + obj.width > x + tileSize / 2) {\n  //         this.collidePlatTop(obj, y);\n  //       }\n  //     },\n  //     13: (obj, x, y, colVal, tileSize) => {\n  //       //top / right half in\n  //       if (this.collidePlatRight(obj, x + tileSize / 2)) {\n  //         return;\n  //       } else if (obj.x < x + tileSize / 2) {\n  //         this.collidePlatTop(obj, y);\n  //       }\n  //     },\n  //     14: (obj, x, y, colVal, tileSize) => {\n  //       /// bottom / left\n  //       if (this.collidePlatBottom(obj, y + tileSize)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatLeft(obj, x);\n  //       }\n  //     },\n  //     15: (obj, x, y, colVal, tileSize) => {\n  //       /// bottom / right\n  //       if (this.collidePlatBottom(obj, y + tileSize)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatRight(obj, x);\n  //       }\n  //     },\n  //     16: (obj, x, y, colVal, tileSize) => {\n  //       /// bottom\n  //       this.collidePlatBottom(obj, y + tileSize);\n  //     },\n  //     17: (obj, x, y, colVal, tileSize) => {\n  //       ///left\n  //       this.collidePlatLeft(obj, x);\n  //     },\n\n  //     18: (obj, x, y, colVal, tileSize) => {\n  //       //45 deg right\n  //       this.collideSlopeFortyFiveRight(obj, x, y + tileSize);\n  //     },\n  //     19: (obj, x, y, colVal, tileSize) => {\n  //       //45 deg left\n  //       this.collideSlopeFortyFiveLeft(obj, x + tileSize, y + tileSize);\n  //     },\n  //     20: (obj, x, y, colVal, tileSize) => {\n  //       //22 deg right bottom half\n  //       this.collideSlopeTwentyRight(obj, x, y + tileSize);\n  //     },\n  //     21: (obj, x, y, colVal, tileSize) => {\n  //       //22 deg left bootom half\n  //       this.collideSlopeTwentyLeft(obj, x + tileSize, y + tileSize);\n  //     },\n  //     22: (obj, x, y, colVal, tileSize) => {\n  //       //22 deg right top half\n  //       this.collideSlopeTwentyRight(obj, x, y + tileSize, tileSize / 2);\n  //     },\n  //     23: (obj, x, y, colVal, tileSize) => {\n  //       //22 deg left top half\n  //       this.collideSlopeTwentyLeft(obj, x, y + tileSize, tileSize / 2);\n  //     },\n  //     24: (obj, x, y, colVal, tileSize) => {\n  //       //22 deg left top half & left\n  //       ///refactor////\n  //       if (this.collidePlatLeft(obj, x)) {\n  //         return;\n  //       } else {\n  //         this.collideSlopeTwentyLeft(obj, x, y + tileSize, tileSize / 2);\n  //       }\n  //     },\n  //     25: (obj, x, y, colVal, tileSize) => {\n  //       //right half in\n  //       this.collidePlatRight(obj, x + tileSize / 2);\n  //     },\n  //     26: (obj, x, y, colVal, tileSize) => {\n  //       //left half in\n  //       this.collidePlatLeft(obj, x + tileSize / 2);\n  //     },\n  //     27: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ right half in\n  //       if (this.collidePlatRight(obj, x + tileSize / 2)) {\n  //         return;\n  //       } else if (obj.x < x + tileSize / 2) {\n  //         this.collidePlatTop(obj, y + tileSize / 2);\n  //       }\n  //     },\n  //     28: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ right half in / bottom\n  //       if (obj.x < x + tileSize / 2) {\n  //         if (this.collidePlatTop(obj, y + tileSize / 2)) {\n  //           return;\n  //         } else if (this.collidePlatBottom(obj, y + tileSize)) {\n  //           return;\n  //         } else {\n  //           this.collidePlatRight(obj, x + tileSize / 2);\n  //         }\n  //       }\n  //     },\n  //     29: (obj, x, y, colVal, tileSize) => {\n  //       //top half in\n  //       this.collidePlatTop(obj, y + tileSize / 2);\n  //     },\n  //     30: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ left half in / bottom\n  //       if (obj.x + obj.width > x + tileSize / 2) {\n  //         if (this.collidePlatTop(obj, y + tileSize / 2)) {\n  //           return;\n  //         } else if (this.collidePlatBottom(obj, y + tileSize)) {\n  //           return;\n  //         } else {\n  //           this.collidePlatLeft(obj, x + tileSize / 2);\n  //         }\n  //       }\n  //     },\n  //     31: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ right\n  //       if (this.collidePlatTop(obj, y + tileSize / 2)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatRight(obj, x + tileSize);\n  //       }\n  //     },\n  //     32: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ left\n  //       if (this.collidePlatTop(obj, y + tileSize / 2)) {\n  //         return;\n  //       } else {\n  //         this.collidePlatLeft(obj, x);\n  //       }\n  //     },\n  //     33: (obj, x, y, colVal, tileSize) => {\n  //       //top  half in/ left\n  //       if (obj.x > x + (tileSize / 4) && obj.x < x + (tileSize * (3/4))) {\n\n  //         this.climbable(obj, x, y, tileSize);\n  //       }\n  //     }\n  //   };\n  }\n\n  collidePlayer(player, canvas, cleared) {\n    if (player.x < 0) {\n      player.x = 0.01;\n      player.velX = 0;\n    } else if (player.x + player.width > canvas.width && !cleared) {\n      player.x = canvas.width - player.width;\n      player.velX = 0;\n    }\n\n    // if (player.y < 0) {\n    //   player.velY = 0;\n    //   player.y = 0.01;\n    // } else\n    if (player.y > canvas.height) {\n      // player.velY = 0;\n      // player.y = canvas.height - player.height - 0.1;\n      // player.jumpCount = 2;\n      // player.onGround = true;\n      // player.dead = true;\n      player.y = 0;\n      player.setHit(50);\n    }\n  }\n\n  climbable(obj, x, y) {\n    obj.canClimb = true;\n  }\n\n  collideProjectile(obj1, obj2) {\n    // if (!obj1 || !obj2) return false;\n    // if (obj2.dying || obj2.dead) return false;\n    let hitBox = obj2.hitBox();\n \n\n    if (\n      obj1.x < hitBox.right &&\n      obj1.x + obj1.width > hitBox.left &&\n      obj1.y < hitBox.bottom &&\n      obj1.y + obj1.height > hitBox.top\n    ) {\n      obj1.velY = -(obj1.velY / 3);\n      obj1.velX = -(obj1.velX / 3);\n      ///hit\n      obj1.setHit(obj2.damage);\n      obj2.setHit();\n      ///change Hit\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  collideEnemy(obj1, obj2) {\n    // if (!obj1 || !obj2) return false;\n    if (obj2.dying || obj2.dead) return false;\n\n    if (\n      obj1.x < obj2.x + obj2.width &&\n      obj1.x + obj1.width > obj2.x &&\n      obj1.y < obj2.y + obj2.height &&\n      obj1.y + obj1.height > obj2.y\n    ) {\n      // if (this.hitBox(obj1, obj2)) {\n      if (obj1 instanceof Player && !obj1.isHit) {\n        obj1.velY = -(obj1.velY / 3);\n        obj1.velX = -(obj1.velX / 3);\n        ///hit\n        obj1.setHit(obj2.damage);\n        return true;\n      }\n      if (obj1 instanceof Projectile) {\n        obj2.setHit(obj1.damage);\n        \n        if (obj2.health <= 0 && obj1.dir === \"down\") {\n          obj2.points *= 2\n        }\n        \n        setTimeout(() => {\n          obj1.setHit();\n\n        }, 10);\n\n        return true;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  ////////PLATFORM COLLISION\n\n  collideSlopeFortyFiveRight(gameObj, tileLeft, tileBottom) {\n    ///60 x60 120 y 60 120 (60, 120] [ 60, 120])\n    let tileY = tileBottom - (gameObj.rightSide() - tileLeft);\n    if (gameObj instanceof Player) {\n      if (gameObj.onGround) {\n        if (\n          gameObj.bottomSide() > tileBottom &&\n          gameObj.oldY + gameObj.height < tileBottom\n        ) {\n          gameObj.velY = 0;\n          gameObj.y = tileBottom - gameObj.height - 0.2;\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          return;\n        }\n        gameObj.y = tileY - gameObj.height - 0.2;\n      } else if (!gameObj.onGround) {\n        if (\n          gameObj.rightSide() > tileLeft &&\n          gameObj.bottomSide() > tileY &&\n          gameObj.oldY + gameObj.height < tileY\n        ) {\n          gameObj.vlY = 0;\n\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          // gameObj.getDirY() + 60 > tileY) {\n          gameObj.y = tileY - gameObj.height - 0.2;\n        }\n      }\n    }\n    if (gameObj instanceof Projectile) {\n      gameObj.setHit();\n      //set null\n      return true;\n    }\n  }\n\n  collideSlopeFortyFiveRightBottom(gameObj, tileLeft, tileBottom) {\n    ///60 x60 120 y 60 120 (60, 120] [ 60, 120])\n    let tileY = tileBottom - (gameObj.rightSide() - tileLeft);\n    if (\n      gameObj.rightSide() > tileLeft &&\n      gameObj.topSide() < tileY &&\n      gameObj.oldY > tileY\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        //set null\n        return true;\n      }\n      // gameObj.getDirY() + 60 > tileY) {\n      gameObj.y = tileY + 0.05;\n    }\n\n  }\n\n  collideSlopeFortyFiveLeft(gameObj, tileRight, tileBottom) {\n    let tileY = tileBottom - (tileRight - gameObj.leftSide());\n    if (gameObj instanceof Player) {\n      if (gameObj.onGround) {\n        if (\n          gameObj.bottomSide() > tileBottom &&\n          gameObj.oldY + gameObj.height < tileBottom\n        ) {\n          gameObj.velY = 0;\n\n          gameObj.y = tileBottom - gameObj.height - 0.02;\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          return;\n        }\n        gameObj.y = tileY - gameObj.height - 0.02;\n      } else if (!gameObj.onGround) {\n        if (\n          gameObj.leftSide() < tileRight &&\n          gameObj.bottomSide() > tileY &&\n          gameObj.oldY + gameObj.height < tileY\n        ) {\n          gameObj.velY = 0;\n\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          gameObj.y = tileY - gameObj.height - 0.02;\n        }\n      }\n    }\n    if (gameObj instanceof Projectile) {\n      gameObj.setHit();\n      //set null\n      return true;\n    }\n  }\n\n  collideSlopeFortyFiveLeftBottom(gameObj, tileRight, tileBottom) {\n    let tileY = tileBottom - (tileRight - gameObj.leftSide());\n    if (\n      gameObj.leftSide() < tileRight &&\n      gameObj.topSide() < tileY &&\n      gameObj.oldY > tileY\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        //set null\n        return true;\n      }\n      // gameObj.getDirY() + 60 > tileY) {\n      gameObj.y = tileY + 0.05;\n    }\n\n    \n\n  }\n\n \n\n  collideSlopeTwentyRight(gameObj, tileLeft, tileBottom, half = 0) {\n\n    let tileY = tileBottom - (half + (gameObj.rightSide() - tileLeft) / 2);\n    if (gameObj instanceof Player) {\n      if (gameObj.onGround) {\n        if (\n          gameObj.bottomSide() > tileBottom &&\n          gameObj.oldY + gameObj.height < tileBottom\n        ) {\n          gameObj.y = tileBottom - gameObj.height - 0.05;\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          return;\n        }\n        gameObj.y = tileY - gameObj.height - 0.05;\n      } else if (!gameObj.onGround) {\n        if (\n          gameObj.rightSide() > tileLeft &&\n          gameObj.bottomSide() > tileY &&\n          gameObj.oldY + gameObj.height < tileY\n        ) {\n          gameObj.velY = 0;\n\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n\n          gameObj.y = tileY - gameObj.height - 0.05;\n        }\n      }\n    }\n    if (gameObj instanceof Projectile) {\n      gameObj.setHit();\n      //set null\n      return true;\n    }\n  }\n\n  collideSlopeTwentyRightBottom(gameObj, tileLeft, tileBottom, half = 0) {\n\n    let tileY = tileBottom - (half + (gameObj.rightSide() - tileLeft) / 2);\n    if (\n      gameObj.rightSide() > tileLeft &&\n      gameObj.topSide() < tileY &&\n      gameObj.oldY > tileY\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        //set null\n        return true;\n      }\n      gameObj.y = tileY + 0.05;\n    }\n\n  }\n\n\n  collideSlopeTwentyLeft(gameObj, tileRight, tileBottom, half = 0) {\n    let tileY = tileBottom - (half + (tileRight - gameObj.leftSide()) / 2);\n    if (gameObj instanceof Player) {\n      if (gameObj.onGround) {\n        if (\n          gameObj.bottomSide() > tileBottom &&\n          gameObj.oldY + gameObj.height < tileBottom\n        ) {\n          gameObj.velY = 0;\n\n          gameObj.y = tileBottom - gameObj.height - 0.05;\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          return;\n        }\n        gameObj.y = tileY - gameObj.height - 0.05;\n      } else if (!gameObj.onGround) {\n        if (\n          gameObj.leftSide() < tileRight &&\n          gameObj.bottomSide() > tileY &&\n          gameObj.oldY + gameObj.height < tileY\n        ) {\n          gameObj.velY = 0;\n\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          gameObj.y = tileY - gameObj.height - 0.05;\n        }\n      }\n    }\n    if (gameObj instanceof Projectile) {\n      gameObj.setHit();\n      //set null\n      return true;\n    }\n  }\n\n  collideSlopeTwentyLeftBottom(gameObj, tileRight, tileBottom, half = 0) {\n    let tileY = tileBottom - (half + (tileRight - gameObj.leftSide()) / 2);\n    if (\n      gameObj.leftSide() < tileRight &&\n      gameObj.topSide() < tileY &&\n      gameObj.oldY > tileY\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        //set null\n        return true;\n      }\n      gameObj.y = tileY + 0.05;\n    }\n\n  }\n\n  ///////regular collision\n\n\n  collidePlatTop(gameObj, tileTop) {\n    if (\n      gameObj.bottomSide() > tileTop &&\n      gameObj.oldY + gameObj.height < tileTop\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        //set null\n        return true;\n      }\n      gameObj.velY = 0;\n      gameObj.y = tileTop - gameObj.height - 0.1;\n      if (gameObj instanceof Player) {\n        gameObj.onGround = true;\n        gameObj.jumpCount = 2;\n      }\n      return true;\n    } else {\n      if (gameObj instanceof Player) {\n        gameObj.onGround = false;\n      }\n    }\n    return false;\n  }\n\n  collidePlatBottom(gameObj, tileBottom) {\n    if (\n      gameObj.topSide() < tileBottom &&\n      gameObj.oldY + gameObj.height > tileBottom\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        return true;\n      }\n      gameObj.y = tileBottom + 0.1;\n      gameObj.velY = 0;\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatRight(gameObj, tileRight) {\n    if (\n      gameObj.leftSide() < tileRight &&\n      gameObj.oldX + gameObj.width > tileRight\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        return true;\n      }\n      gameObj.x = tileRight + 0.1;\n      // if (gameObj instanceof Enemy) {\n      //   gameObj.x = -gameObj.x;\n      // }\n      // gameObj.velX = 0;\n\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatLeft(gameObj, tileLeft) {\n    if (gameObj.rightSide() > tileLeft && gameObj.oldX < tileLeft) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        return true;\n      }\n      gameObj.x = tileLeft - gameObj.width - 0.1;\n      // if (!gameObj instanceof Enemy) {\n      //   gameObj.x = -gameObj.x;\n      // }\n      // gameObj.velX = 0;\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatform(gameObject, x, y, colVal, tileSize) {\n    if (!colVal || !this.collisionPlatformKeys[colVal]) return;\n    this.collisionPlatformKeys[colVal](gameObject, x, y, colVal, tileSize);\n  }\n}\n\n\n\nexport default Collision;\n","class Sound {\n    constructor(options) {\n        this.sound = document.createElement(\"audio\");\n        this.sound.src = options.src;\n        this.sound.id = options.idName;\n        this.sound.setAttribute(\"preload\", \"auto\");\n        this.sound.setAttribute(\"controls\", \"none\");\n        this.sound.setAttribute(\"muted\", \"false\");\n\n        this.sound.volume = 0.2;\n\n        this.sound.style.display = \"none\";\n\n        this.play = this.play.bind(this);\n        this.pause = this.pause.bind(this);\n        this.mute = this.mute.bind(this);\n    };\n\n    play() {\n        this.sound.play();\n    }\n\n    pause() {\n        this.sound.pause();\n    }\n\n    mute() {\n        this.sound.muted = !this.sound.muted;\n    }\n\n    static fire() {\n        return {\n            src: \"./assets/Sound/fireSound.mp3\",\n            id: \"fire\"\n        }\n    }\n    static shock() {\n        return {\n            src: \"./assets/Sound/shock.mp3\",\n            id: \"shock\"\n        }\n    }\n}\n\n\n\nexport default Sound;","import GameObject from \"../GameObject\";\nimport Collision from \"../../util/Collision\";\nimport Sound from \"../../util/Sound\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\n\nclass Projectile extends GameObject {\n  constructor(options) {\n    super(options);\n    this.proj = this.loadImage(options.image);\n    // this.impact = ;\n    this.velX = options.velX;\n    this.velY = options.velY;\n    this.oldX = this.x;\n    this.oldY = this.y;\n    this.dir = options.dir || \"right\";\n    this.damage = options.damage;\n    this.impacted = false;\n    this.impactTimeout = options.impactTimeout || 0;\n    this.impactSrc = options.impact;\n    \n    this.frameStartX = options.frameStartX;\n    this.frameStartY = options.frameStartY;\n    this.frameWidth = options.frameWidth;\n    this.frameHeight = options.frameHeight;\n    this.frameNum = options.frameNum;\n\n    this.impactWidth = options.impactWidth;\n    this.impactHeight = options.impactHeight;\n    this.impactFrameWidth = options.impactFrameWidth || this.frameStartX;\n    this.impactFrameHeight = options.impactFrameHeight || this.frameStartY;\n    this.impactStartX = options.impactStartX || 145;\n    this.impactStartY = options.impactStartY || 150;\n\n    this.hitTimeout = options.hitTimeout || 2000;\n\n\n\n    this.tileSize = 60;\n    \n    this.collider = new Collision();\n    this.isHit = false;\n\n    this.launchSound = new Sound(Sound.fire());\n    // this.impactSound = new Sound({ src: this.mapKeys[this.screen].theme });\n\n\n\n    this.loadImage = this.loadImage.bind(this);\n    this.getTopLeftPos = this.getTopLeftPos.bind(this);\n    this.getTopRightPos = this.getTopRightPos.bind(this);\n    this.getBottomLeftPos = this.getBottomLeftPos.bind(this);\n    this.getBottomRightPos = this.getBottomRightPos.bind(this);\n    this.setHit = this.setHit.bind(this);\n    this.timeOutHit = this.timeOutHit.bind(this);\n    this.updateProjectile = this.updateProjectile.bind(this);\n    this.drawProjectile = this.drawProjectile.bind(this);\n    this.drawImpact = this.drawImpact.bind(this);\n\n\n    this.timeOutHit();\n  }\n\n  hitBox() {\n    return {\n      left: this.x,\n      right: this.x + (this.width),\n      top: this.y,\n      bottom: this.y + (this.height)\n    }\n  }\n\n  loadImage(image) {\n    let proj = new Image();\n    proj.src = image;\n    return proj;\n  }\n\n  getTopLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n\n  getTopRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n\n  setHit(pos) {\n\n    // setTimeout(() => {\n      this.proj.src = this.impactSrc;\n      this.impacted = true;\n  \n      this.velX = 0;\n      this.velY = 0;\n    \n      // clearInterval(this.hitTimeout);\n      this.hitTimeout = setTimeout(() => {\n        this.isHit = true;\n  \n      }, 100)\n\n\n    // }, this.impactTimeout)\n  }\n\n  timeOutHit() {\n    this.hitTimeout = setTimeout(() => {\n      this.isHit = true;\n    }, 2000);\n  }\n\n\n  platformCheck() {\n    let colVal;\n    let top;\n    let bottom;\n    let right;\n    let left;\n    let cols = 15;\n\n    if (this.dir === \"left\") {\n      [left, top] = this.getTopLeftPos();\n      colVal = this.physicalMap[top * cols + left];\n      this.collider.collidePlatform(\n        this,\n        left * this.tileSize,\n        top * this.tileSize,\n        colVal\n      );\n        \n      [left, bottom] = this.getBottomLeftPos();\n      colVal = this.physicalMap[bottom * cols + left];\n      this.collider.collidePlatform(\n        this,\n        left * this.tileSize,\n        bottom * this.tileSize,\n        colVal\n      );\n    }\n\n    if (this.dir === \"right\") {\n      [right, top] = this.getTopRightPos();\n      colVal = this.physicalMap[top * cols + right];\n      this.collider.collidePlatform(\n        this.player,\n        right * this.tileSize,\n        top * this.tileSize,\n        colVal\n      );\n  \n      [right, bottom] = this.getBottomRightPos();\n      colVal = this.physicalMap[bottom * cols + right];\n\n      this.collider.collidePlatform(\n        this.player,\n        right * this.tileSize,\n        bottom * this.tileSize,\n        colVal\n      );\n\n    }\n\n  }\n\n  updateProjectile() {\n    this.oldX = this.x;\n    this.oldY = this.y;\n\n    this.x += this.velX;\n    this.y += this.velY;\n  }\n\n  drawProjectile(ctx, frameCount) {\n    if (this.hit) return;\n\n    if (this.impacted) {\n      this.drawImpact(ctx, frameCount);\n      return;\n    }\n\n    this.updateProjectile();\n    if (this.dir === \"up\") {\n      ctx.scale(1, -1);\n\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * 43 + (((frameCount % this.frameNum) + 1) * 21),\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, -this.y + this.height,\n        this.width, this.height\n      );\n      ctx.scale(1, -1);\n\n\n    } else if (this.dir === \"down\") {\n\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * 43 + (((frameCount % this.frameNum) + 1) * 21),\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n\n\n    } else if (this.dir === \"right\") {\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x-this.frameWidth, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  drawImpact(ctx, frameCount) {\n    if (this.dir === \"up\") {\n      ctx.drawImage(\n        this.proj,\n        this.impactStartX,\n        this.impactStartY,\n        this.impactFrameWidth,\n        this.impactFrameHeight,\n        this.x - (this.impactFrameWidth / 2), this.y - (this.impactFrameHeight / 2),\n        this.impactWidth, this.impactHeight\n      );\n\n\n    } else if (this.dir === \"down\") {\n\n      ctx.drawImage(\n        this.proj,\n        this.impactStartX,\n        this.impactStartY,\n        this.impactFrameWidth,\n        this.impactFrameHeight,\n        this.x - (this.impactFrameWidth / 2), this.y + this.height - (this.impactFrameHeight / 2),\n        this.impactWidth, this.impactHeight\n      );\n\n\n    } else if (this.dir === \"right\") {\n      ctx.drawImage(\n        this.proj,\n        this.impactStartX,\n        this.impactStartY,\n        this.impactFrameWidth,\n        this.impactFrameHeight,\n        this.x + this.width / 3, this.y - (this.height * 2),\n        this.impactWidth, this.impactHeight\n      );\n    } else {\n      ctx.drawImage(\n        this.proj,\n        this.impactStartX,\n        this.impactStartY,\n        this.impactFrameWidth,\n        this.impactFrameHeight,\n        this.x - this.width / 3, this.y - (this.impactFrameHeight / 3),\n        this.impactWidth, this.impactHeight\n      );\n    }\n  }\n\n  static fireball(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 35,\n      height: 12,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n\n      frameStartX: 10,\n      frameStartY: 277,\n      frameWidth: 65,\n      frameHeight: 16,\n      frameNum: 8,\n      image: \"./assets/fireball.png\",\n      impact: \"./assets/burst.png\",\n      impactWidth: 60,\n      impactHeight: 60,\n      impactStartX: 145,\n      impactStartY: 150,\n      impactFrameWidth: 90,\n      impactFrameHeight: 90,\n      damage: 25\n    };\n  }\n\n  static fireballVert(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 12,\n      height: 35,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n      impact: \"./assets/burst.png\",\n\n      frameStartX: 10,\n      frameStartY: 400,\n      frameWidth: 22,\n      frameHeight: 35,\n      frameNum: 8,\n      image: \"./assets/fireball.png\",\n      impactFrameWidth: 90,\n      impactFrameHeight: 90,\n      impactWidth: 60,\n      impactHeight: 60,\n      impactStartX: 145,\n      impactStartY: 150,\n      damage: 25\n    };\n  }\n\n  static helibullet(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 25,\n      height: 25,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n      frameStartX: 420,\n      frameStartY: 330,\n      frameWidth: 15,\n      frameHeight: 15,\n      frameNum: 1,\n      image: \"./assets/footEn.png\",\n      impact: \"./assets/burst.png\",\n      damage: 10\n    };\n  }\n\n  static electricBall(pos, velX = 0, velY = 1, dir = \"right\") {\n    return {\n      pos: pos,\n      width: 78.5,\n      height: 86,\n      velX: velX,\n      velY: velY,\n      dir: \"up\",\n      frameStartX: 0,\n      frameStartY: 435,\n      frameWidth: 180,\n      frameHeight: 145,\n      frameNum: 4,\n      image: \"./assets/electric_ball.png\",\n      impact: \"./assets/electric_ball.png\",\n      impactTimeout: 6000,\n      impactWidth: 180,\n      impactHeight: 145,\n      impactFrameWidth: 180,\n      impactFrameHeight: 145,\n      hitTimeout: 6000,\n      damage: 20\n    };\n  }\n}\n\nexport default Projectile;\n\n// const fireball = {\n//   name: \"fireball\"\n// }\n\n\n// };","import GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Enemy extends GameObject {\n  constructor(options) {\n    super(options);\n    this.velX = (options.velX) ? options.velX : 0;\n    this.velY = (options.velY) ? options.velY : 0;\n    this.enemy = this.loadImage(options.image);\n    this.frameNum = options.frameNum;\n    this.dir = options.dir || \"right\";\n    this.frameStartX = 68;\n    this.frameStartY = 290;\n    this.frameWidth = 116;\n    this.frameHeight = 80;\n    this.projectiles = {};\n    this.dying = false;\n    this.dead = false;\n    this.health = options.health;\n    this.damage = options.damage;\n    this.isHit = false;\n\n\n    this.setHit = this.setHit.bind(this);\n    this.setDying = this.setDying.bind(this);\n    this.getMidX = this.getMidX.bind(this);\n    this.getMidY = this.getMidY.bind(this);\n\n    this.loadImage = this.loadImage.bind(this);\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n\n    // this.callAttack();\n  }\n\n  getMidX(x = this.x) {\n    return x + (this.width/2);\n  }\n\n  getMidY(y = this.y) {\n    return y + (this.height/2);\n  }\n\n\n\n  loadImage(image) {\n    let enemy = new Image();\n    enemy.src = image;\n    return enemy;\n  }\n\n  setHit(damage = 10) {\n    if (!this.isHit) {\n      this.isHit = true;\n      this.hitCooldown = setTimeout(() => {\n        this.isHit = false;\n      }, 500);\n      this.health -= damage;\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      setTimeout(() => {\n        this.dead = true;\n      }, 1000);\n    }\n  }\n\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    if (this.dir === \"left\") {\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x-this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n    \n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + 30,\n          this.bottomSide() - 23],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - 40,\n          this.bottomSide() - 23],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n\n\n\n  ////////CPU\n  callAttack() {\n    this.attackInterval = setInterval(() => {\n      this.shootProj();\n\n    }, 200);\n  }\n\n\n\n\n\n\n  move(canvas) {\n    this.oldX = this.x;\n    this.x += this.velX;\n\n\n    if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n      this.velX *= -1;\n      this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n    } \n  }\n\n  //////\n  \n\n\n  static helicopter(pos) {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/footEn.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 200,\n      height: 125,\n      velX: 3,\n      dir: \"right\",\n      health: 100,\n      damage: 10\n    };\n  }\n\n  hitBox(obj1, obj2) {\n\n    if (obj1.y < obj2.y + obj2.height && obj1.y > obj2.y + (obj2.height / 2)) {\n      if ((obj2.dir === \"right\" && obj1.x < obj2.x + obj2.width && obj1.x + obj1.width > obj2.x + (obj2.width / 3)) ||\n        (obj2.dir === \"left\" && obj1.x < obj2.x + (obj2.width * (2 / 3)) && obj1.x + obj1.width > obj2.x)){\n        return true;\n      }\n\n    } else if ((obj1.y < (obj2.height / 2) && obj1.y > obj2.y) || obj1.y + obj1.height > obj2.y) {\n      if (obj1.x < obj2.x + obj2.width && obj1.x + obj1.width > obj2.x) {\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nexport default Enemy;\n","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Helicopter extends Enemy {\n  constructor(options) {\n    super(options);\n    this.velX = options.velX || 3;\n    this.velY = 0;\n    this.image = options.image || \"./assets/footEn.png\";\n    this.enemy = this.loadImage(this.image);\n    this.frameNum = options.frameNum || 3;\n    this.frameStartX = options.frameStartX || 68;\n    this.frameStartY = options.frameStartY || 290;\n    this.frameWidth = options.frameWidth || 116;\n    this.frameHeight = options.frameHeight || 80;\n    this.projectiles = {};\n    this.bounds = options.bounds;\n\n    this.points = 6 * options.multiplier;\n\n    this.loadImage = this.loadImage.bind(this);\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n    this.callAttack();\n  }\n\n\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    if (this.dir === \"left\") {\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x - this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n\n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + (this.width * 0.15),\n            this.bottomSide() - (this.height * 0.184)],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - (this.width * 0.2),\n            this.bottomSide() - (this.height * 0.184)],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      setTimeout(() => {\n        this.dead = true;\n      }, 300);\n    }\n  }\n\n  ////////CPU\n  callAttack() {\n    this.attackInterval = setInterval(() => {\n\n      this.shootProj();\n\n    }, 500);\n  }\n\n  move(canvas) {\n    this.oldX = this.x;\n    this.x += this.velX;\n\n    if (this.bounds) {\n      if ((this.x + (this.width / 2)) < this.bounds[0] || this.x + (this.width / 2) > this.bounds[1]) {\n        this.velX *= -1;\n        this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n      }\n    } else {\n      if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n        this.velX *= -1;\n        this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n      }\n\n    }\n\n  }\n\n  //////\n\n\n\n  static hel1(pos, bounds, dir = \"right\", velY, multiplier = 1) {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/footEn.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 200,\n      height: 125,\n      health: 100,\n      velX: (dir === \"left\") ? -3 : 3,\n      velY: velY || 0,\n      dir: dir,\n      damage: 20,\n      bounds: bounds,\n      multiplier: multiplier\n    };\n  }\n  \n  static hel2(pos, bounds, dir = \"right\", multiplier = .5) {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/footEn.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 150,\n      height: 85,\n      health: 100,\n      velX: dir === \"left\" ? -3 : 3,\n      dir: dir,\n      damage: 10,\n      bounds: bounds,\n      multiplier: multiplier\n    };\n  }\n\n}\n\nexport default Helicopter;\n","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Spider extends Enemy {\n  constructor(options) {\n    super(options);\n    this.velX = options.velX || 0;\n    this.velY = options.velY || 1;\n    this.image = options.image;\n    this.enemy = this.loadImage(this.image);\n    this.frameNum = options.frameNum || 4;\n    this.frameStartX = 0;\n    this.frameStartY = 0;\n    this.frameWidth = options.frameWidth || 92.5;\n    this.frameHeight = options.frameHeight || 102;\n    this.frameCount = 0;\n    this.bounds = options.bounds;\n    this.damage = options.damage;\n\n    this.points = 5 * options.multiplier;\n\n\n\n    this.projectiles = {};\n\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n    this.startFrameCount = this.startFrameCount.bind(this);\n\n\n  }\n\n  startFrameCount() {\n    this.enemyInterval = setInterval(() => {\n      this.frameCount++;\n    }, 1000 / 30);\n  }\n\n  drawEnemy(ctx, frameCount = this.frameCount) {\n    this.setDying();\n\n    ctx.beginPath();\n    ctx.moveTo(this.getMidX(this.pos[0]), this.pos[1]);\n    ctx.lineTo(this.getMidX(this.pos[0]), this.getMidY(this.y));\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"rgba(255, 255, 255, 0.5)\";\n    ctx.stroke();\n    ctx.closePath();\n\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n      let count = Math.floor(frameCount / 2.5) % this.frameNum;\n      // let x = (count > 0) ? 20 : this.frameStartX;\n\n\n      ctx.scale(1, -1);\n\n      ctx.drawImage(\n        this.enemy,\n        // (Math.floor(frameCount / 2) % this.frameNum) * this.frameWidth + this.frameStartX,\n        (count % this.frameNum) * this.frameWidth,\n        // (0) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, -this.y - this.height,\n        this.width, this.height\n      );\n      ctx.scale(1, -1);\n  }\n\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      setTimeout(() => {\n        this.dead = true;\n      }, 300);\n    }\n  }\n\n  ////////CPU\n  // callAttack() {\n  //   this.attackInterval = setInterval(() => {\n\n  //     this.shootProj();\n\n  //   }, 500);\n  // }\n\n  // move(canvas) {\n  //   this.oldX = this.x;\n  //   this.x += this.velX;\n\n\n  //   if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n  //     this.velX *= -1;\n  //     this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n  //   }\n  // }\n\n\n\n  move(canvas) {\n    this.oldY = this.y;\n    this.y += this.velY;\n\n    if (this.bounds) {\n      if ((this.y + (this.height)) < this.bounds[0] || this.y + (this.height) > this.bounds[1]) {\n        this.velY *= -1;\n        // this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n      }\n    } else {\n      if ((this.y + (this.height)) < 0 || this.y + (this.height) > canvas.height) {\n        this.velY *= -1;\n        // this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n      }\n\n    }\n\n  }\n  //////\n\n\n\n  static spider1(pos, bounds, multiplier = 1) {\n    return {\n      name: \"spider\",\n      image: \"./assets/spider.png\",\n      frameNum: 15,\n      pos: pos,\n      width: 93,\n      height: 102,\n      health: 110,\n      velX: 0,\n      velY: 3,\n      damage: 25,\n      bounds: bounds,\n      multiplier: multiplier\n    };\n  }\n  static spider2(pos, bounds, multiplier = .6) {\n    return {\n      name: \"spider\",\n      image: \"./assets/spider.png\",\n      frameNum: 15,\n      pos: pos,\n      width: 60.5,\n      height: 76,\n      health: 70,\n      velX: 0,\n      velY: 1.5,\n      damage: 30,\n      bounds: bounds,\n      multiplier: multiplier\n    };\n  }\n  static spider3(pos, bounds, multiplier = 0.2) {\n    return {\n      name: \"spider\",\n      image: \"./assets/spider.png\",\n      frameNum: 15,\n      pos: pos,\n      width: 46.5,\n      height: 56,\n      health: 70,\n      velX: 0,\n      velY: 2.5,\n      bounds: bounds,\n      damage: 50,\n      multiplier: multiplier\n    };\n  }\n\n}\n\nexport default Spider;\n","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Vinehead extends Enemy {\n  constructor(options) {\n    super(options);\n    this.player = options.player;\n    this.velX = options.velX || 0;\n    this.velY = 0;\n    this.image = options.image || \"./assets/vinehead.png\";\n    this.enemy = this.loadImage(this.image);\n    this.frameNum = options.frameNum || 8;\n    this.frameStartX = 0;\n    this.frameStartY = 0;\n    this.frameWidth = options.frameWidth || 57;\n    this.frameHeight = options.frameHeight || 87;\n    this.active = true;\n    this.opening = false;\n    this.projectiles = {};\n    this.playerCheckTimeout = \"\";\n    this.damage = 20;\n\n    this.points = 10 * options.multiplier;\n\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    // this.setPlayerCheckInterval = this.setPlayerCheckInterval.bind();\n    this.checkPlayerPos = this.checkPlayerPos.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n\n\n  }\n\n  checkPlayerPos(x, y, homing) {\n    if (y > this.y) {\n      this.velY = 1;\n    } else {\n      this.velY = -1;\n    }\n\n    if ((y > this.y && y < this.y + this.height) && (x > this.x || x < this.x) ) {\n      this.velX = (this.dir === \"left\") ? -5 : 5;\n    } else {\n      this.velX = (this.dir === \"left\") ? -1 : 1;\n    }\n\n    if (x > this.x && this.dir === \"left\") {\n      // clearTimeout(this.playerCheckTimeout);\n      this.playerCheckTimeout = setTimeout(() => {\n        this.velX = 1;\n        this.dir = \"right\";\n      }, 1000);\n    } else if (x < this.x && this.dir === \"right\") {\n      // clearTimeout(this.playerCheckTimeout);\n      this.playerCheckTimeout = setTimeout(() => {\n        this.velX = -1;\n        this.dir = \"left\";\n\n      }, 1000);\n      \n    } else if ((x > this.x && this.dir === \"right\") || (x < this.x && this.dir === \"left\")) {\n      clearTimeout(this.playerCheckTimeout);\n    }\n  }\n\n  setPlayerCheckInterval(player) {\n    // debugger\n    this.playerCheckInterval = setInterval(() => {\n      this.checkPlayerPos(player);\n    }, 2);\n  }\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    if (this.dir === \"right\") {\n      let count = Math.floor(frameCount / 2.5) % this.frameNum;\n\n\n      ctx.drawImage(\n        this.enemy,\n        (Math.floor(frameCount / 1.5) % this.frameNum) * this.frameWidth,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x - this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n\n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + 30,\n          this.bottomSide() - 23],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - 40,\n          this.bottomSide() - 23],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      setTimeout(() => {\n        this.dead = true;\n      }, 300);\n    }\n  }\n\n  ////////CPU\n  // callAttack() {\n  //   this.attackInterval = setInterval(() => {\n\n  //     this.shootProj();\n\n  //   }, 500);\n  // }\n\n  move(canvas, player) {\n    this.oldY = this.y;\n    this.oldX = this.x;\n    this.x += this.velX;\n    this.y += this.velY;\n    this.checkPlayerPos(player.x, player.y);\n\n    // if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n    //   this.velX *= -1;\n    //   this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n    // }\n  }\n\n  //////\n\n\n\n  static vine1(pos, player, dir = \"right\", multiplier = .6) {\n    \n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 65,\n      height: 95,\n      health: 75,\n      velX: 1,\n      dir: dir,\n      player: player,\n      multiplier: multiplier\n    };\n  }\n  static vine2(pos, player, dir = \"right\", multiplier = 1) {\n    \n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 100,\n      height: 145,\n      health: 120,\n      velX: 1,\n      dir: dir,\n      player: player,\n      multiplier: multiplier\n    };\n  }\n  static vine3(pos, player, dir = \"right\", multiplier = .2) {\n    \n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 35,\n      height: 45,\n      health: 50,\n      velX: 1,\n      dir: dir,\n      player: player,\n      multiplier: multiplier\n    };\n  }\n  \n\n}\n\nexport default Vinehead;\n","import GameObject from \"../GameObject\";\nimport Collision from \"../../util/Collision\";\nimport Sound from \"../../util/Sound\";\nimport Projectile from \"./Projectile\";\n\nconst CONSTANTS = {\n    GRAVITY: 0.8,\n    FRICTION: 2.5,\n    MAX_VEL: 50\n};\n\n\nclass ElectricBall extends Projectile {\n    constructor(options) {\n        super(options);\n        this.proj = this.loadImage();\n        this.width = 90;\n        this.height = 72.5;\n        this.velX = 0;\n        this.velY = 1;\n        this.oldX = this.x;\n        this.oldY = this.y;\n        this.damage = options.damage;\n        this.impacted = false;\n        this.impactTimeout = 6000;\n        this.impactSrc = \"./assets/electric_ball.png\";\n\n\n        this.frameStartX = 0;\n        this.frameStartY = 435;\n        this.frameWidth = 180;\n        this.frameHeight = 145;\n        this.frameNum = 4;\n\n        this.impactWidth = 180;\n        this.impactHeight = 145;\n        this.impactStartX = 145;\n        this.impactStartY =  150;\n\n        this.hitTimeout = 6000;\n\n        this.tileSize = 60;\n\n        this.collider = new Collision();\n        this.isHit = false;\n\n        // this.impactSound = new Sound({ src: this.mapKeys[this.screen].theme });\n\n\n        this.loadImage = this.loadImage.bind(this);\n        this.getTopLeftPos = this.getTopLeftPos.bind(this);\n        this.getTopRightPos = this.getTopRightPos.bind(this);\n        this.getBottomLeftPos = this.getBottomLeftPos.bind(this);\n        this.getBottomRightPos = this.getBottomRightPos.bind(this);\n        this.setHit = this.setHit.bind(this);\n        this.timeOutHit = this.timeOutHit.bind(this);\n        this.updateProjectile = this.updateProjectile.bind(this);\n        this.drawProjectile = this.drawProjectile.bind(this);\n        this.drawImpact = this.drawImpact.bind(this);\n        this.hitBox = this.hitBox.bind(this);\n\n        this.impactSound = new Sound(Sound.shock());\n\n        this.timeOutHit();\n    }\n\n    hitBox() {\n        return {\n            left: this.x + (this.width / 5),\n            right: this.x + (this.width * .8),\n            top: this.y + (this.height / 5),\n            bottom: this.y + (this.height * .8)\n        }\n    }\n\n    loadImage() {\n        let proj = new Image();\n        proj.src = \"./assets/electric_ball.png\";\n        return proj;\n    }\n\n    getTopLeftPos() {\n        let x = Math.floor((this.leftSide() + this.width / 5) / this.tileSize);\n        let y = Math.floor((this.topSide() + this.height / 5) / this.tileSize);\n        return [x, y];\n    }\n\n    getTopRightPos() {\n        let x = Math.floor((this.rightSide() - this.width / 5) / this.tileSize);\n        let y = Math.floor((this.topSide() + this.height / 5) / this.tileSize);\n        return [x, y];\n    }\n    getBottomLeftPos() {\n        let x = Math.floor((this.leftSide() + this.width / 5) / this.tileSize);\n        let y = Math.floor((this.bottomSide() - this.height / 5) / this.tileSize);\n        return [x, y];\n    }\n    getBottomRightPos() {\n        let x = Math.floor(this.rightSide() / this.tileSize);\n        let y = Math.floor((this.bottomSide() - this.height / 5) / this.tileSize);\n        return [x, y];\n    }\n\n    setHit() {\n\n        // setTimeout(() => {\n            this.impacted = true;\n            this.impactSound.play();\n            this.proj.src = this.impactSrc;\n            this.width *= 1.7;\n            this.height *= 1.7;\n            this.velX = 0;\n            this.velY = 0;\n\n            setTimeout(() => {\n                this.impactSound.pause();\n                this.isHit = true;\n            }, 3000)\n\n\n        // }, 6000)\n    }\n\n    timeOutHit() {\n        this.hitTimeout = setTimeout(() => {\n            this.isHit = true;\n        }, 7000);\n    }\n\n\n    platformCheck() {\n        let colVal;\n        let top;\n        let bottom;\n        let right;\n        let left;\n        let cols = 15;\n\n        if (this.dir === \"left\") {\n            [left, top] = this.getTopLeftPos();\n            colVal = this.physicalMap[top * cols + left];\n            this.collider.collidePlatform(\n                this,\n                left * this.tileSize,\n                top * this.tileSize,\n                colVal\n            );\n\n            [left, bottom] = this.getBottomLeftPos();\n            colVal = this.physicalMap[bottom * cols + left];\n            this.collider.collidePlatform(\n                this,\n                left * this.tileSize,\n                bottom * this.tileSize,\n                colVal\n            );\n        }\n\n        if (this.dir === \"right\") {\n            [right, top] = this.getTopRightPos();\n            colVal = this.physicalMap[top * cols + right];\n            this.collider.collidePlatform(\n                this.player,\n                right * this.tileSize,\n                top * this.tileSize,\n                colVal\n            );\n\n            [right, bottom] = this.getBottomRightPos();\n            colVal = this.physicalMap[bottom * cols + right];\n\n            this.collider.collidePlatform(\n                this.player,\n                right * this.tileSize,\n                bottom * this.tileSize,\n                colVal\n            );\n\n        }\n\n    }\n\n    updateProjectile() {\n        this.oldX = this.x;\n        this.oldY = this.y;\n\n        this.x += this.velX;\n        this.y += this.velY;\n    }\n\n    drawProjectile(ctx, frameCount) {\n        if (this.isHit) return;\n\n        if (this.impacted) {\n            this.drawImpact(ctx, frameCount);\n            return;\n        }\n        this.updateProjectile();\n\n        ctx.drawImage(\n            this.proj,\n            (frameCount % this.frameNum) * this.frameWidth,\n            // (0) * this.frameWidth,\n            // (frameCount % this.frameNum) * this.frameWidth + (((frameCount % this.frameNum) + 1) * 21),\n            this.frameStartY,\n            this.frameWidth,\n            this.frameHeight,\n            this.x, this.y,\n            this.width, this.height\n        );\n\n\n    }\n\n    drawImpact(ctx, frameCount) {\n        ctx.drawImage(\n            this.proj,\n            (frameCount % this.frameNum) * this.frameWidth,\n            this.frameStartY,\n            180,\n            145,\n            this.x - (180 / 4), this.y - (145 / 4),\n            180, 145\n        );\n\n    }\n\n\n    static electricBall(pos, velX = 0, velY = 1, dir = \"right\") {\n        return {\n            pos: pos,\n            width: 78.5,\n            height: 86,\n            velX: velX,\n            velY: velY,\n            dir: \"up\",\n            frameStartX: 0,\n            frameStartY: 435,\n            frameWidth: 180,\n            frameHeight: 145,\n            frameNum: 4,\n            image: \"./assets/electric_ball.png\",\n            impact: \"./assets/electric_ball.png\",\n            impactTimeout: 6000,\n            impactWidth: 180,\n            impactHeight: 145,\n            impactFrameWidth: 180,\n            impactFrameHeight: 145,\n            hitTimeout: 6000,\n            damage: 20\n        };\n    }\n}\n\nexport default ElectricBall;\n\n// const fireball = {\n//   name: \"fireball\"\n// }\n\n\n// };","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport ElectricBall from \"../Projectiles/ElectricBall\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n    GRAVITY: 0.8,\n    FRICTION: 2.5,\n    MAX_VEL: 50\n};\n\nclass Jellyfish extends Enemy {\n    constructor(options) {\n        super(options);\n        this.player = options.player;\n        this.velX = options.velX || 0;\n        this.velY = 0;\n        this.image = options.image || \"./assets/jellyfish.png\";\n        this.enemy = this.loadImage(this.image);\n        this.frameNum = options.frameNum || 8;\n        this.frameStartX = 4;\n        this.frameStartY = 130;\n        this.frameWidth = options.frameWidth || 58;\n        this.frameHeight = options.frameHeight || 64;\n        this.active = true;\n        this.opening = false;\n        this.projectiles = {};\n        this.playerCheckTimeout = \"\";\n        this.damage = options.damage;\n\n        this.points = 10 * options.multiplier;\n\n        this.drawEnemy = this.drawEnemy.bind(this);\n        this.shootProj = this.shootProj.bind(this);\n        // this.setPlayerCheckInterval = this.setPlayerCheckInterval.bind();\n        this.checkPlayerPos = this.checkPlayerPos.bind(this);\n        this.setAttackInterval = this.setAttackInterval.bind(this);\n\n        this.setAttackInterval();\n    }\n\n    setAttackInterval() {\n        setTimeout(() => {\n            this.attackInterval = setInterval(() => {\n                this.shootProj();\n            }, 4000)\n        }, 2000)\n    }\n\n    checkPlayerPos(x, y, homing) {\n        if (y > this.y) {\n            this.velY = 2;\n        } else {\n            this.velY = -2;\n        }\n\n        // if ((y > this.y && y < this.y + this.height) && (x > this.x || x < this.x)) {\n        //     this.velX = (this.dir === \"left\") ? -5 : 5;\n        // } else {\n        //     this.velX = (this.dir === \"left\") ? -2 : 2;\n        // }\n\n        if (x > this.x && this.dir === \"left\") {\n            // clearTimeout(this.playerCheckTimeout);\n            this.playerCheckTimeout = setTimeout(() => {\n                this.velX = 2;\n                this.dir = \"right\";\n            }, 1000);\n        } else if (x < this.x && this.dir === \"right\") {\n            // clearTimeout(this.playerCheckTimeout);\n            this.playerCheckTimeout = setTimeout(() => {\n                this.velX = -2;\n                this.dir = \"left\";\n\n            }, 1000);\n\n        } else if ((x > this.x && this.dir === \"right\") || (x < this.x && this.dir === \"left\")) {\n            clearTimeout(this.playerCheckTimeout);\n        }\n    }\n\n    setPlayerCheckInterval(player) {\n        // debugger\n        this.playerCheckInterval = setInterval(() => {\n            this.checkPlayerPos(player);\n        }, 2000);\n    }\n\n    drawEnemy(ctx, frameCount) {\n        this.setDying();\n        if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n        let count = Math.floor(frameCount / 2.5) % this.frameNum;\n        if (this.dir === \"left\") {\n\n            ctx.drawImage(\n                this.enemy,\n                (count) * this.frameWidth + (this.frameStartX * count + (count * 2)),\n                this.frameStartY,\n                this.frameWidth,\n                this.frameHeight,\n                this.x, this.y,\n                this.width, this.height\n            );\n        } else {\n            ctx.scale(-1, 1);\n            ctx.drawImage(\n                this.enemy,\n                (count) * this.frameWidth + (this.frameStartX * count + (count * 2)),\n                this.frameStartY,\n                this.frameWidth,\n                this.frameHeight,\n                -this.x - this.width, this.y,\n                this.width, this.height\n            );\n            ctx.scale(-1, 1);\n\n        }\n    }\n\n    shootProj() {\n        if (Object.keys(this.projectiles).length === 10) return;\n\n        let key;\n        for (let i = 1; i <= 10; i++) {\n            if (!this.projectiles[i]) {\n                key = i;\n                break;\n            }\n        }\n        this.projectiles[key] = new ElectricBall({\n                pos: [this.leftSide() + (this.width / 2),\n                this.bottomSide() - (this.height / 2)]\n            });\n    }\n\n    setDying() {\n        if (this.health <= 0) {\n            this.dying = true;\n            this.damage = 0;\n            this.velX = 0;\n            this.velY = 0;\n            clearInterval(this.attackInterval);\n            setTimeout(() => {\n                this.dead = true;\n            }, 300);\n        }\n    }\n\n    ////////CPU\n\n    move(canvas, player) {\n        this.oldY = this.y;\n        this.oldX = this.x;\n        this.x += this.velX;\n        this.y += this.velY;\n        this.checkPlayerPos(player.x, player.y - (player.height * 2));\n\n        // if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n        //   this.velX *= -1;\n        //   this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n        // }\n    }\n\n    //////\n\n\n\n    static jell1(pos, player, dir = \"right\", damage = 20) {\n\n        return {\n            name: \"Jellyfish\",\n            image: \"./assets/jellyfish.png\",\n            frameNum: 8,\n            pos: pos,\n            width: 90,\n            height: 100,\n            health: 130,\n            velX: 1,\n            dir: dir,\n            player: player,\n            multiplier: 1\n\n        };\n    }\n    static jell2(pos, player, dir = \"right\", damage = 15) {\n\n        return {\n            name: \"Jellyfish\",\n            image: \"./assets/jellyfish.png\",\n            frameNum: 8,\n            pos: pos,\n            width: 60,\n            height: 66,\n            health: 90,\n            velX: 1,\n            dir: dir,\n            player: player,\n            multiplier: .5\n        };\n    }\n    static jell3(pos, player, dir = \"right\", damage = 10) {\n\n        return {\n            name: \"Jellyfish\",\n            image: \"./assets/jellyfish.png\",\n            frameNum: 8,\n            pos: pos,\n            width: 35,\n            height: 45,\n            health: 50,\n            velX: 1,\n            dir: dir,\n            player: player,\n            multiplier: .5\n\n        };\n    }\n\n\n}\n\nexport default Jellyfish;\n","\n\nclass Vine {\n    constructor(options) {\n        this.boss = options.boss;\n        this.vine = this.loadImage(\"../assets/vines.png\");\n        this.attacking = false;\n        this.charging = false;\n        this.frameNum = 7;\n        this.velX = 0;\n        this.velY = options.velY;\n        this.x = options.pos[0];\n        this.y = options.pos[1];\n        this.startX = this.x;\n\n        this.boundsY = options.boundsY;\n        this.damage = options.damage || 10;\n        this.frameCountOffset = options.frameCountOffset;\n\n        this.attack = this.attack.bind(this);\n        this.loadImage = this.loadImage.bind(this);\n        this.backUp = this.backUp.bind(this);\n        this.charge = this.charge.bind(this);\n        this.drawVines = this.drawVines.bind(this);\n        this.playerCheck = this.playerCheck.bind(this);\n        this.move = this.move.bind(this);\n\n    }\n\n    loadImage(image) {\n        let vine = new Image();\n        vine.src = image;\n        return vine;\n    }\n\n    attack(int) {\n\n        this.attacking = true;\n        this.chargeTimeout = setTimeout(() => {\n            this.charge();\n        }, int);\n    }\n\n    backUp() {\n        this.vineTimeout = setTimeout(() => {\n            this.charging = false;\n            this.velX = 10;\n        }, 300)\n    }\n\n    charge() {\n        this.charging = true;\n        this.velX = -20;\n    }\n\n\n    drawVines(ctx, frameCount) {\n        if (this.boss.dying && frameCount % 3 === 0) return;\n\n        let state = (this.charging) ? 0 :\n            (this.attacking) ? (frameCount + this.frameCountOffset) % this.frameNum :\n                ((Math.floor(frameCount / 2.5) + this.frameCountOffset) % this.frameNum)\n        let width = (this.attacking) ? 1000 : 400\n\n        // let count = Math.floor(frameCount / 2.5) + this.frameCountOffset % this.frameNum;\n        if (this.boss.dir === \"left\") {\n            ctx.drawImage(\n                this.vine,\n                2,\n                state * 95,\n                width,\n                95,\n                this.x, this.y,\n                width, 60\n            );\n        } else {\n            ctx.scale(-1, 1);\n            ctx.drawImage(\n                this.vine,\n                2,\n                state * 95,\n                width,\n                95,\n                -this.x - width, this.y,\n                width, 60\n            );\n            ctx.scale(-1, 1);\n\n        }\n    }\n\n    playerCheck(player) {\n        if (this.boss.dying) return;\n        if (player.x > this.x &&\n            (player.y + player.height > (this.y + 10)) &&\n            player.y < (this.y + 50)) {\n            player.setHit(this.damage);\n        }\n    }\n\n    move(ctx, frameCount, player) {\n        this.oldX = this.x;\n        this.x += this.velX;\n        if (!this.attacking) {\n            this.y += this.velY;\n        }\n\n        this.playerCheck(player);\n        if (this.x < -20) {\n            this.x = -20;\n            // this.attacking = false;\n            this.backUp();\n        } else if (this.x > this.startX) {\n            this.velX = 0;\n            this.attacking = false;\n            this.x = this.startX;\n\n\n            // this.attackTimeout = setTimeout(() => {\n            //   this.attack();\n            // }, 10000);\n        }\n        if (this.y < this.boundsY[0] || this.y > this.boundsY[1]) {\n            this.velY *= -1;\n        }\n        this.drawVines(ctx, frameCount);\n    }\n\n    static vines1(boss, pos) {\n        let round = Math.floor(Math.random() * 10);\n        return {\n            boss: boss,\n            pos: pos,\n            velY: (round <= 5) ? -1 : 1,\n            boundsY: [pos[1] - 75, pos[1] + 75],\n            frameCountOffset: Math.floor(Math.random() * 7)\n        }\n    }\n}\n\nexport default Vine;","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\nimport Vinehead from \"./Vinehead\";\nimport Vine from '../Projectiles/Vine';\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass BossVinehead extends Enemy {\n  constructor(options) {\n    super(options);\n    this.player = options.player;\n    this.velX = options.velX || 0;\n    this.velY = 0;\n    this.image = options.image || \"./assets/vinehead.png\";\n    this.enemy = this.loadImage(this.image);\n    this.vineNum = 5;\n\n    // this.vines = this.loadImage(\"../assets/vine.png\");\n    this.frameNum = options.frameNum || 8;\n    this.frameStartX = 0;\n    this.frameStartY = 0;\n    this.frameWidth = options.frameWidth || 57;\n    this.frameHeight = options.frameHeight || 87;\n    this.active = true;\n    this.opening = false;\n    this.projectiles = {};\n    this.playerCheckTimeout = \"\";\n    this.damage = 50;\n    this.attacking = false;\n    this.charging = false;\n    this.frameCount = 0;\n\n    this.points = 50;\n\n    this.vines = [\n      new Vine(Vine.vines1(this, [600, 60])),\n      new Vine(Vine.vines1(this, [600, 150])),\n      new Vine(Vine.vines1(this, [600, 500])),\n      new Vine(Vine.vines1(this, [700, 100])),\n      new Vine(Vine.vines1(this, [600, 300])),\n      new Vine(Vine.vines1(this, [700, 400])),\n    ]\n\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    // this.setPlayerCheckInterval = this.setPlayerCheckInterval.bind();\n    // this.checkPlayerPos = this.checkPlayerPos.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n    this.charge = this.charge.bind(this);\n    this.startFrameCount = this.startFrameCount.bind(this);\n    this.shuffleVines = this.shuffleVines.bind(this);\n    this.renderVines = this.renderVines.bind(this);\n    this.attackVines = this.attackVines.bind(this);\n    this.startAttack = this.startAttack.bind(this);\n    this.startFrameCount();\n    this.startAttack();\n  }\n\n  startFrameCount() {\n    this.bossInterval = setInterval(() => {\n      this.frameCount++;\n    }, 1000 / 30);\n    // }, 5000)\n  }\n\n  startAttack() {\n    this.attackTimeout = setTimeout(() => {\n      this.attack();\n    }, 1000);\n\n    // setTimeout(() => {\n    this.vineInterval = setInterval(() => {\n\n      this.attackVines();\n    }, 10000);\n  }\n\n  spawnEnemies() {\n    // if (this.enemies.length < 8) {\n    //   this.enemiesnew Vinehead(Vinehead.vine3([500, 100], this.player));\n    // }\n  }\n\n  attack() {\n    this.attacking = true;\n    this.chargeTimeout = setTimeout(() => {\n      this.charge();\n    }, 2500);\n  }\n\n  charge() {\n    this.charging = true;\n    this.velX = -10;\n  }\n\n  // checkPlayerPos(x, y, homing) {\n\n  // }\n\n  // setPlayerCheckInterval(player) {\n  //   this.playerCheckInterval = setInterval(() => {\n  //     this.checkPlayerPos(player);\n  //   }, 2);\n  // }\n\n  shuffleVines(vines) {\n    for (let i = vines.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [vines[i], vines[j]] = [vines[j], vines[i]];\n    }\n    return vines;\n  }\n\n  renderVines(ctx, player) {\n    this.vines.forEach((vine, i) => {\n      vine.move(ctx, this.frameCount, player);\n    });\n  }\n\n  attackVines() {\n\n    this.vines.forEach((vine, i) => {\n      vine.attack((1500) + i * 300);\n    })\n    setTimeout(() => {\n      this.vines = this.shuffleVines(this.vines);\n    }, 5000);\n  }\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    \n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    let y = ((this.attacking && \n      (this.frameCount % 3 === 0 || this.frameCount % 3 === 1)) ||\n      this.charging) ? 87 : this.frameStartY;\n    if (this.dir === \"right\") {\n      let count = Math.floor(frameCount / 2.5) % this.frameNum;\n      ctx.drawImage(\n        this.enemy,\n        (Math.floor(this.frameCount / 1.5) % this.frameNum) * this.frameWidth,\n        y,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (this.frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        y,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x - this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n\n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + 30,\n          this.bottomSide() - 23],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - 40,\n          this.bottomSide() - 23],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.vines.forEach((vine) => {\n        clearTimeout(vine.chargeTimeout);\n        clearTimeout(vine.vineTimeout);\n      })\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      clearInterval(this.vineInterval);\n      setTimeout(() => {\n        this.dead = true;\n        clearInterval(this.startFrameCount);\n      }, 3000);\n    }\n  }\n\n  ////////CPU\n\n  \n  backUp() {\n    this.charging = false;\n    this.velX = 2;\n  }\n\n  move(canvas, player, ctx) {\n    this.oldX = this.x;\n    this.x += this.velX;\n    if (this.x < 160) {\n      this.x = 160;\n      // this.attacking = false;\n      this.backUp();\n    } else if (this.x > 650) {\n      this.velX = 0;\n      this.attacking = false;\n      this.x = 650;\n\n      this.attackTimeout = setTimeout(() => {\n        this.attack();\n      }, 7000);\n    }\n\n    this.renderVines(ctx, player)\n\n  }\n\n  //////\n\n\n\n  static boss1(pos, player, dir = \"right\") {\n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 260,\n      height: 370,\n      health: 1200,\n      velX: 0,\n      dir: \"left\",\n      player: player\n    };\n  }\n\n}\n\n\n\n\nexport default BossVinehead;\n","import Tile from \"../Objects/Platforms/Tile\";\nimport Music from \"../util/Music\";\nimport Enemy from \"../Objects/Enemies/Enemy\";\nimport Helicopter from \"../Objects/Enemies/Helicopter\";\nimport Flower from \"../Objects/Enemies/Flower\";\nimport Spider from \"../Objects/Enemies/Spider\";\nimport Vinehead from \"../Objects/Enemies/Vinehead\";\nimport Jellyfish from \"../Objects/Enemies/Jellyfish\";\nimport BossVinehead from \"../Objects/Enemies/BossVinehead\";\n\nclass Level {\n  constructor(options) {\n    this.ctx = options.ctx;\n    this.player = options.player;\n    this.mapKeys = options.mapKeys;\n    this.screen = Object.keys(this.mapKeys)[0];\n    this.renderMap = options.renderMap || this.mapKeys[this.screen].renderMap;\n    this.physicalMap = options.physicalMap || this.mapKeys[this.screen].physicalMap;\n    this.cols = 15;\n    this.rows = 10;\n    this.tileSize = options.tileSize;\n    this.tileMap = this.loadImage();\n    this.mapTileSize = this.tileMap.width / this.rows;\n    this.enemies = this.mapKeys[this.screen].enemies();\n    this.enemyCount = 1;\n    this.theme = new Music({src: this.mapKeys[this.screen].theme});\n    \n    this.levelLayers = this.loadImages(this.mapKeys[this.screen].levelLayers);\n        \n////Enemy Rush////\n    this.spawnTier = this.mapKeys[this.screen].spawnTier || null;\n    this.rushLevel = 0;\n    this.spawnTierGroup = 2;\n    this.rushInterval = \"\";\n\n    this.enemyRushSpawn = this.enemyRushSpawn.bind(this);\n    this.enemyRushInterval = this.enemyRushInterval.bind(this);\n\n//////\n\n    this.getTile = this.getTile.bind(this);\n    this.getLeft = this.getLeft.bind(this);\n    this.getRight = this.getRight.bind(this);\n    this.getTop = this.getTop.bind(this);\n    this.getBottom = this.getBottom.bind(this);\n    this.drawLevel = this.drawLevel.bind(this);\n    this.loadImage = this.loadImage.bind(this);\n    this.loadLevel = this.loadLevel.bind(this);\n    this.enemiesInterval = this.enemiesInterval.bind(this);\n    this.spawnEnemies = this.spawnEnemies.bind(this);\n    this.enemyRush = this.enemyRush.bind(this);\n\n    this.loadImages = this.loadImages.bind(this);\n    this.renderBackground = this.renderBackground.bind(this);\n    this.renderMid = this.renderMid.bind(this);\n    this.renderFront = this.renderFront.bind(this);\n    // this.loadImage(this.ctx);\n\n    this.enemiesInterval();\n    // this.enemyRushInterval();\n  }\n\n//15 x 10\n\n  loadImage() {\n    let tileMap = new Image();\n    tileMap.src = \"./assets/tileGen.png\";\n    return tileMap;\n  }\n\n  loadImages(images) {\n    let background = new Image();\n    background.src = images.background;\n\n    let mid = (images.mid) ? new Image() : null;\n    (mid) ? mid.src = images.mid : \"\";\n\n    let front = (images.front) ? new Image() : null;\n    (front) ? front.src = images.front : \"\";\n\n    return {\n      background,\n      mid,\n      front\n    };\n  }\n\n  renderBackground(ctx, canvas) {\n\n      ctx.drawImage(\n        this.levelLayers.background,\n        0,\n        0,\n        900,\n        600,\n        0,\n        0,\n        canvas.width,\n        canvas.height\n      );\n  }\n\n  renderMid(ctx, canvas) {\n    if (!this.levelLayers.mid) return;\n    ctx.drawImage(\n      this.levelLayers.mid,\n      0,\n      0,\n      900,\n      600,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n  }\n\n  renderFront(ctx, canvas) {\n    if (!this.levelLayers.front) return;\n\n    ctx.drawImage(\n      this.levelLayers.front,\n      0,\n      0,\n      900,\n      600,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n  }\n\n  getTile(col, row) {\n    return this.renderMap[row * this.cols + col];\n  }\n\n  getLeft(col, row) {\n    return Math.floor(col * this.tileSize);\n  }\n  getRight(col, row) {\n    return Math.floor((col * this.tileSize) + this.tileSize);\n  }\n  getTop(col, row) {\n    return Math.floor(row * this.tileSize - this.tileSize);\n  }\n  getBottom(col, row) {\n    return Math.floor(row * this.tileSize);\n  }\n\n  enemiesInterval() {\n    if (parseInt(this.screen) < 6 || parseInt(this.screen) === 8) return;\n\n    // if (parseInt(this.screen) === 8) {\n    //   this.enemyRush();\n    //   this.spawnInterval = setInterval(() => {\n    //     this.enemyRush();\n    //   }, 12000);\n    // } else {\n      \n      this.spawnInterval = setInterval(() => {\n        if (!this.enemies[1]) {\n          clearInterval(this.spawnInterval);\n        }\n        this.spawnEnemies();\n      }, 7000);\n    // }\n  }\n\n  spawnEnemies() {\n    if (Object.keys(this.enemies).length >= 8) return;\n    this.enemyCount++;\n    let key = this.enemyCount;\n    let y = Math.random() * 600;\n    this.enemies[key] = new Vinehead(Vinehead.vine2([890, y], this.player, \"left\"));\n  }\n\n  enemyRush() {\n    if (Object.keys(this.enemies).length >= 6) return;\n    this.enemyCount++;\n    let key = this.enemyCount + (Math.floor(Math.random() * 100));\n    let y = Math.random() * 600;\n    let x = (Object.keys(this.enemies).length % 2 === 0) ? 10 : 890\n    this.enemies[key] = new Vinehead(Vinehead.vine2([x, y], this.player, \"left\"));\n  }\n\n  enemyRushSpawn(num) {\n    if (Object.keys(this.enemies).length >= num) return;\n    let key = this.enemyCount + Math.floor(Math.random() * 100);\n    let tierAmount = Object.keys(this.spawnTier[this.spawnTierGroup]).length\n    let enemy = Math.floor(Math.random() * tierAmount);\n\n    this.enemies[key] = this.spawnTier[this.spawnTierGroup][enemy]();\n\n    this.spawnTierGroup = (this.spawnTierGroup === 4) ? 1 : this.spawnTierGroup + 1;\n  }\n\n  enemyRushInterval(int = 12000, enemyCount = 6) {\n    if (this.screen !== \"8\") return;\n\n    clearInterval(this.rushInterval);\n    \n    this.rushInterval = setInterval(() => {\n      this.enemyRushSpawn(enemyCount);\n    }, int);\n  }\n\n\n\n  loadLevel(num) {\n    // if (this.screen + num === 0) return;\n    this.screen = num;\n    this.renderMap = this.mapKeys[this.screen].renderMap;\n    this.physicalMap = this.mapKeys[this.screen].physicalMap;\n    this.enemies = this.mapKeys[this.screen].enemies();\n    if (this.mapKeys[this.screen].levelLayers) {\n\n      this.levelLayers = this.loadImages(this.mapKeys[this.screen].levelLayers);\n    }\n    if (this.mapKeys[this.screen].theme) {\n      let muted = this.theme.music.muted;\n      this.theme.pause();\n      this.theme = new Music({ src: this.mapKeys[this.screen].theme });\n      this.theme.play();\n      this.theme.music.muted = muted;\n    }\n    this.enemiesInterval();\n\n  }\n\n  drawLevel(ctx) {\n\n    for (let c = 0; c < this.cols; c++) {\n      for (let r = 0; r < this.rows; r++) {\n        let tile = this.getTile(c, r);\n        let tileCut = (tile % 8 === 0) ? 8 : (tile % 8);\n\n        if (tile > 0) {\n\n          ctx.drawImage(\n            this.tileMap,\n            (tileCut - 1) * (this.tileMap.width/ 8),\n            (Math.floor(tile / 8) * (this.tileMap.width / 8)),\n            64,\n            64,\n            c * this.tileSize,\n            r * this.tileSize,\n            this.tileSize,\n            this.tileSize\n          );\n        }\n      }\n    }\n  }\n\n\n  static level2() {\n    return {\n      8: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0, 29, 29, 29,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  3,  1,  2,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0, 29, 29, 29,  0,  0,  0, 29, 29, 29,  0,  0,  0,\n          0,  0,  0,  3,  1,  2,  0,  0,  0,  3,  1,  2,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,        ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  2,  2,  2,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  2,  2,  2,  0,  0,  0,  2,  2,  2,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,  1,  1,  1,  1\n        ],\n        enemies: () => {\n          return {\n            1: new Spider(Spider.spider1([600, 0], [20, 359])),\n            2: new Spider(Spider.spider1([420, 0], [20, 179])),\n            3: new Spider(Spider.spider1([240, 0], [20, 359])),\n            4: new Spider(Spider.spider1([780, 0], [20, 479])),\n            5: new Spider(Spider.spider1([60, 0], [20, 479])),\n            // 5: new Helicopter(Helicopter.hel1([0, 15], [-50, 950], \"right\"))\n            // 1: new BossVinehead(BossVinehead.boss1([650, 100], this.player))\n          };\n        },\n        spawnTier: {\n          1: {\n              // 0: () => {\n              //   return new Spider(Spider.spider2([600, 0], [20, 359]));\n              // },\n              // 1: () => {\n              //   return new Spider(Spider.spider2([420, 0], [20, 179]));\n              // },\n              // 2: () => {\n              //   return new Spider(Spider.spider2([240, 0], [20, 359]));\n              // },\n              // 3: () => {\n              //   return new Spider(Spider.spider2([780, 0], [20, 479]));\n              // },\n              // 4: () => {\n              //   return new Spider(Spider.spider2([60, 0], [20, 479]));\n              // },\n              0: () => {\n                return new Spider(Spider.spider1([600, 0], [20, 359]));\n              },\n              1: () => {\n                return new Spider(Spider.spider1([420, 0], [20, 179]));\n              },\n              2: () => {\n                return new Spider(Spider.spider1([240, 0], [20, 359]));\n              }\n            },\n            \n        2: {\n              0: () => {\n                return new Helicopter(Helicopter.hel2([800, 50], [-50, 950], \"left\"));\n              },\n              1: () => {\n                return new Helicopter(Helicopter.hel2([0, 50], [-50, 950], \"right\"));\n              },\n              2: () => {\n                return new Helicopter(Helicopter.hel1([800, 15], [-50, 950], \"left\"));\n              },\n              3: () => {\n                return new Helicopter(Helicopter.hel1([0, 15], [-50, 950], \"right\"));\n              },\n           },\n        3: {\n              0: () => {\n                let y = Math.random() * 600;\n                let x = (y % 2 === 0) ? 1 : 839;\n                return new Jellyfish(Jellyfish.jell2([x, y], this.player));\n              },\n              1: () => {\n                let y = Math.random() * 600;\n                let x = (y % 2 === 0) ? 1 : 809;\n                return new Jellyfish(Jellyfish.jell1([x, y], this.player));\n              },\n           },\n        4: {\n              0: () => {\n                let y = Math.random() * 600;\n                let x = (y % 2 === 0) ? 1 : 890;\n                return new Vinehead(Vinehead.vine3([x, y], this.player));\n              },\n              1: () => {\n                let y = Math.random() * 600;\n                let x = y % 2 === 0 ? 1 : 890;\n                return new Vinehead(Vinehead.vine1([x, y], this.player));\n              },\n              2: () => {\n                let y = Math.random() * 600;\n                let x = y % 2 === 0 ? 1 : 890;\n                return new Vinehead(Vinehead.vine2([x, y], this.player));\n              },\n           },\n           \n        },\n        theme: \"./assets/Sound/dk3_boss_boogie.mp3\",\n        levelLayers: {\n          background: \"./assets/Level1/lv1_back.png\",\n          // mid: \"./assets/Level1/lv1_mid.png\",\n          // front: \"./assets/Level1/lv1_front.png\"\n        }\n      }\n    };\n  }\n  static level1() {\n    return {\n      1: {\n        renderMap: [\n          9,  0,  0,  0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0, 38, 39,  0,  0,  0,  0,  0,\n          0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 42,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         28,  0,  0,  0,  0, 22, 23, 23, 63,  0,  0,  0,  0,  0,  0,\n          1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0, 29, 29, 29, 29,\n          9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3, 27, 27, 27,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0,  0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          3,  3,  3, 40,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0, 23,  2,  2,  2, 24,  0,  0,  0,\n          1,  2, 34,  0,  0,  0,  0, 17,  0,  0,  0, 18,  0,  0,  0,\n          0,  0,  0, 34,  0,  0,  0, 17,  0,  0,  0, 18,  0,  0,  0,\n          1,  1,  1,  1,  2,  2,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        // physicalMap: [\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,\n        //   6,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n        //   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        // ],\n        enemies: () => {\n          return {\n            // 1: new Spider(Spider.spider2([470, 0], [0, 350])),\n            // 2: new Helicopter(Helicopter.hel1([570, 50], \"left\")),\n            1: new Jellyfish(Jellyfish.jell1([300, 300]))\n            // 4: new Flower(Flower.flow1([400, 320])),\n            // 5: new Flower(Flower.flow1([240, 500])),\n          }\n \n        },\n        theme: \"./assets/Sound/ff9_stirring_forest.mp3\",\n        levelLayers: {\n          background: \"./assets/Level1/lv1_back.png\",\n          mid: \"./assets/Level1/lv1_mid.png\",\n          front:  \"./assets/Level1/lv1_front.png\"\n        }\n      },\n      2: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0, 29, 29, 29,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0, 53, 54,  1,  1,  2,  0,  0,  0,  0,  0,  0,\n          0,  0,  0, 57, 58,  9, 16, 16, 16,  0,  0, 29, 29, 29, 29,\n          0, 53, 54,  5,  5,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n          1,  5,  5,  5, 11,  0,  0,  0,  0,  0,  0,  5,  5,  5,  5\n        ],\n        physicalMap: [\n        //0       2       4       6       8      10      12\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 17,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 17,  0,\n          0,  0,  0,  0,  0,  0,  0, 12, 39,  0,  0,  0,  0, 17,  0,\n          0,  0,  0,  0,  0,  0,  0,  4, 18,  0,  0,  0,  0, 17,  0,\n          0,  0, 19, 20,  0,  0,  0,  4, 18, 30,  0,  0,  0, 17,  0,\n          0,  0,  4,  5,  0,  0, 37,  4, 40,  0,  0,  0,  0, 31, 16,\n          0,  0,  9,  8,  0,  0,  4,  5,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  4,  5,  0,  0,  0, 31, 15, 15, 15,\n          0,  0,  0,  0,  0, 35,  0,  5,  0,  0,  0,  0,  4,  0,  0,\n          1,  1,  1,  1,  2,  0,  0,  5,  0,  0,  0,  0,  4,  0,  0\n        ],\n        levelLayers: {\n          background: \"./assets/Level1/lvl2_back.png\",\n          mid: \"./assets/Level1/lvl2_mid.png\",\n          front: \"./assets/Level1/lvl2_front.png\"\n        },\n\n        enemies: () => {\n          return {\n            1: new Helicopter(Helicopter.hel2([10, 10], [0, 700])),\n            // 2: new Helicopter(Helicopter.hel2([570, 0], [0, 700], \"left\")),\n            3: new Helicopter(Helicopter.hel2([10, 140], [0, 335], \"left\")),\n            4: new Spider(Spider.spider1([700, 0], [0, 380])),\n            5: new Spider(Spider.spider2([600, 0], [20, 440])),\n            6: new Spider(Spider.spider3([150, 0], [20, 250]))\n\n            // 3: new Flower(Flower.flow2([120, 200])),\n            // 4: new Flower(Flower.flow1([400, 320])),\n            // 5: new Flower(Flower.flow1([240, 500])),\n          }\n        }\n      },\n      3: {\n        renderMap: [\n        //0       2       4       6       8      10      12\n          0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         16, 32,  0,  0,  0, 16,  0,  0,  0, 16,  0,  3,  1,  1,  1,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4, 50,  5,  5,\n         29, 29, 29, 30,  0,  0,  0,  0,  0,  0,  0,  4,  5,  5,  5,\n          0,  0, 40,  0,  0,  0,  0,  0,  0,  0,  0, 55,  5, 40,  5,\n          0,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  5,  5,  5\n        ],\n\n        physicalMap: [\n        //0       2       4       6       8      10      12\n          0, 18, 58,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18, 58,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18, 58,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0, 18, 58,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 37, 39,\n          0, 18,  0,  0,  0,  0, 47, 34,  0,  0,  0, 37, 39,  0,  0,\n         16,  8,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  1,  1,  1,\n          0,  0,  0,  0,  0,  0, 33, 33, 33,  0,  0, 44, 16, 42,  3,\n         15, 36,  0,  0,  0,  0, 16, 16, 45,  0,  0,  0,  0,  0,  0,\n          5,  0, 2, 24,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          5,  5,  0,  0, 15, 15, 15, 15, 15, 20,  0, 33, 33, 33, 33\n        ],\n        enemies: () => {\n          return {\n            // 1: new Helicopter(Helicopter.hel1([100, 25])),\n            // 3: new Flower(Flower.flow2([250, 140])),\n            3: new Jellyfish(Jellyfish.jell2([500, 550])),\n            4: new Jellyfish(Jellyfish.jell1([700, 50])),\n            5: new Vinehead(Vinehead.vine1([500, 100], this.player)),\n            6: new Vinehead(Vinehead.vine3([800, 20], this.player)),\n\n            // 4: new Flower(Flower.flow2([450, 140])),\n          }\n        },\n        levelLayers: {\n          background: \"./assets/Level1/lvl3_back.png\",\n          mid: \"./assets/Level1/lvl3_mid.png\",\n          front: \"./assets/Level1/lvl3_front.png\"\n        },\n      },\n      4: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  0,  0,  0,  3,  5,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4, 28,\n          1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n          9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 16, 16, 16, 16,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  5,  5,  5,  5,  5,  0,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0, 38, 39,  0,  0,  0, 42, 41, 39,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         38, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  8,  0,  0,  0,  2,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n          9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  7,  7,  7,  7,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  9,  0,  0,  0, 10,  0,  1,  1,  1,  1\n        ],\n        enemies: () => {\n          return {\n            1: new Helicopter(Helicopter.hel2([500, 0])),\n            // // 3: new Flower(Flower.flow2([290, 190])),\n            4: new Vinehead(Vinehead.vine3([500, 100], this.player)),\n            5: new Vinehead(Vinehead.vine3([300, 450], this.player)),\n            6: new Vinehead(Vinehead.vine3([850, 500], this.player)),\n            7: new Vinehead(Vinehead.vine1([800, -20], this.player)),\n          }\n          // 4: new Flower(Flower.flow2([530, 190])),\n\n        }\n      },\n      5: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         29, 29, 29, 29, 29, 29, 29,  0, 29, 29, 29, 29, 29, 29, 29,\n          1,  1,  1,  1,  1,  1,  2,  0,  3,  1,  1,  1,  1,  1,  1,\n          5,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 13,  5,  5,\n         28,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4, 28,\n          1,  1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n         16, 16, 16,  0,  0,  0,  0,  0,  0,  0,  0,  5,  5,  5,  5,\n          0,  0,  0,  0,  0, 29, 29, 29, 29, 29,  3,  1,  1,  1,  1,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  5,  5,  5,  5,  5,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  0,  1,  1,  1,  1,  1,  1,  1,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,\n          7,  7,  7,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,  1,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  1,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        enemies: () => {\n          return {\n            1: new Vinehead(Vinehead.vine3([10, 530], this.player)),\n            2: new Vinehead(Vinehead.vine3([830, 0], this.player)),\n            3: new Vinehead(Vinehead.vine2([600, 600], this.player)),\n            4: new Vinehead(Vinehead.vine1([500, 100], this.player)),\n            5: new Vinehead(Vinehead.vine2([200, 450], this.player)),\n            6: new Vinehead(Vinehead.vine2([850, 500], this.player)),\n            7: new Vinehead(Vinehead.vine1([800, -20], this.player)),\n          }\n        }\n      },\n      6: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0, 13,  5,  5,  5, 49,  5,  5,  5,\n          0,  0,  0,  0,  0,  0,  0,  0, 16, 16, 16, 16, 16, 16, 16,\n          2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         28,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          3,  1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         28,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          5, 29, 29, 29,  0, 29, 29,  0, 47, 47, 47, 47, 47, 47, 47,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        enemies: () => {\n          return {\n            1: new BossVinehead(BossVinehead.boss1([650, 100], this.player))\n          }\n        },\n        theme: \"./assets/Sound/dk3_boss_boogie.mp3\",\n        levelLayers: {\n          background: \"./assets/Level1/lv1_back.png\",\n          // mid: \"./assets/Level1/lv1_mid.png\",\n          // front: \"./assets/Level1/lv1_front.png\"\n        }\n      },\n\n\n      8: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0, 29, 29, 29,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  3,  1,  2,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0, 29, 29, 29,  0,  0,  0, 29, 29, 29,  0,  0,  0,\n          0,  0,  0,  3,  1,  2,  0,  0,  0,  3,  1,  2,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,        ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  2,  2,  2,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  2,  2,  2,  0,  0,  0,  2,  2,  2,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,  1,  1,  1,  1\n        ],\n        enemies: () => {\n          return {\n            1: new Spider(Spider.spider2([600, 0], [20, 440])),\n\n            // 1: new BossVinehead(BossVinehead.boss1([650, 100], this.player))\n          }\n        },\n        theme: \"./assets/Sound/dk3_boss_boogie.mp3\",\n        levelLayers: {\n          background: \"./assets/Level1/lv1_back.png\",\n          // mid: \"./assets/Level1/lv1_mid.png\",\n          // front: \"./assets/Level1/lv1_front.png\"\n        }\n      }\n    };\n  }\n  // static level2() {\n  //   return {\n  //     1: {\n  //       renderMap: [\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0, 38, 39,  0,  0,  0,  0,  0,\n  //         0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6\n  //       ],\n  //       physicalMap: [\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  1,  1,\n  //         1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n  //       ],\n  //       enemies: {\n  //         1: new Helicopter(Helicopter.hel1([100, 100])),\n  //         2: new Helicopter(Helicopter.hel1([570, 50], \"left\")),\n  //         3: new Flower(Flower.flow1([600, 500])),\n  //         4: new Flower(Flower.flow1([400, 320])),\n  //         5: new Flower(Flower.flow1([240, 500])),\n  //       }\n  //     }\n  //   };\n  // }\n\n}\n\nexport default Level;\n\n\n// [\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0, 38, 39,  0,  0,  0,  0,  0,\n//           0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6\n//         ],","class GameHUD {\n  constructor(options) {\n    // this.health = options.health;\n    // this.name = name;\n    this.fire = this.loadImage();\n    \n\n\n    this.drawHealth = this.drawHealth.bind(this);\n    this.loadImage = this.loadImage.bind(this);\n    this.drawHUD = this.drawHUD.bind(this);\n    this.drawAmmo = this.drawAmmo.bind(this);\n    this.drawPoints = this.drawPoints.bind(this);\n  }\n\n  loadImage() {\n    let img = new Image();\n    img.src = \"./assets/fireball.png\";\n    return img;\n  }\n\n  drawHUD(canvas, ctx, player, frameCount, points) {\n    ctx.beginPath();\n    ctx.rect(0, (canvas.height - 55), canvas.width, 55);\n    ctx.fillStyle = \"black\";\n    ctx.fill();\n    ctx.closePath();\n\n    this.drawHealth(canvas, ctx, player);\n    this.drawPoints(ctx, canvas, points)\n    this.drawAmmo(canvas, ctx, player, frameCount);\n  }\n\n\n  drawHealth(canvas, ctx, player) {\n\n    let healthMeter = ((canvas.width / 2) * (player.health / 200));\n\n    ctx.beginPath();\n    ctx.rect(150, (canvas.height - 40), (canvas.width / 2), 20);\n    ctx.fillStyle = \"rgba(255, 255, 255, .1)\";\n    ctx.fill();\n    ctx.closePath();\n\n    ctx.beginPath();\n    ctx.rect(150, (canvas.height - 40), (healthMeter), 20);\n    ctx.fillStyle = \"red\";\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  drawAmmo(canvas, ctx, player, frameCount) {\n    // let healthMeter = ((canvas.width - ) * (player.health / 200));\n    let fromRight = canvas.width - 50;\n    ctx.beginPath();\n    ctx.arc(fromRight, canvas.height - 24, 5, 0, 2 * Math.PI, false);\n    ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n    ctx.fill();\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n    ctx.stroke();\n    ctx.closePath();\n\n    ctx.beginPath();\n    ctx.arc(canvas.width - 100, canvas.height - 24, 5, 0, 2 * Math.PI, false);\n    ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n    ctx.fill();\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n    ctx.stroke();\n    ctx.closePath();\n\n    ctx.beginPath();\n    ctx.arc(canvas.width - 150, canvas.height - 24, 5, 0, 2 * Math.PI, false);\n    ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n    ctx.fill();\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n    ctx.stroke();\n    ctx.closePath();\n\n\n    switch (Object.keys(player.fireballs).length) {\n      case 0:\n        ctx.drawImage(\n          this.fire,\n          (frameCount % 8) * 43 + ((frameCount % 8) + 1) * 21,\n          400,\n          22,\n          35,\n          canvas.width - 170,\n          canvas.height - 50,\n          40,\n          40\n        );\n      case 1:\n        ctx.drawImage(\n          this.fire,\n          (frameCount % 8) * 43 + ((frameCount % 8) + 1) * 21,\n          400,\n          22,\n          35,\n          canvas.width - 120,\n          canvas.height - 50,\n          40,\n          40\n        );\n      case 2:\n        ctx.drawImage(\n          this.fire,\n          (frameCount % 8) * 43 + ((frameCount % 8) + 1) * 21,\n          400,\n          22,\n          35,\n          canvas.width - 70,\n          canvas.height - 50,\n          40,\n          40\n        );\n      default:\n        break;\n    }\n\n\n  }\n\n  drawPoints(ctx, canvas, points) {\n        ctx.font = \"20px Arial\";\n        // ctx.fillStyle = \"rgb(46, 2, 2)\";\n        ctx.fillStyle = \"white\";\n        ctx.textAlign = \"left\";\n        ctx.fillText(\n          `Score: ${points}`,\n          20,\n          canvas.height - 25\n        );\n\n  }\n\n}\n\nexport default GameHUD;","import Player from \"./Player\";\nimport Level from \"./Levels/Level\";\nimport Tile from \"./Objects/Platforms/Tile\";\nimport Collision from \"./util/Collision\";\nimport Controller from \"./util/Controller\";\nimport Enemy from \"./Objects/Enemies/Enemy\";\nimport Helicopter from \"./Objects/Enemies/Helicopter\";\nimport Flower from \"./Objects/Enemies/Flower\";\nimport GameHUD from \"./GameHUD\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\n\nclass Game {\n  constructor(canvas, ctx, lvl = 1) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.levelCall = {\n      1: Level.level1(),\n      2: Level.level2()\n    }\n    this.player = new Player(this.ctx, this.canvas);\n    this.controller = new Controller(this.player);\n    this.tileSize = canvas.width / 15;\n    this.level = new Level({ \n      ctx: ctx,\n      mapKeys: this.levelCall[lvl],\n      player: this.player,\n      tileSize: this.tileSize\n    });\n    // this.physicalMap = this.level.physicalMap;\n    this.collider = new Collision(this.tileSize);\n    this.HUD = new GameHUD();\n    this.frameCount = 0;\n    this.enemies = this.level.enemies;\n    this.gameOver = false;\n    this.embers = new Image();\n    this.embers.src = \"./assets/embers.jpg\";\n    // this.getPlayerTilePos = this.getPlayerTilePos.bind(this);\n\n    this.highScore = 0;\n\n    this.getTopLeftPos = this.getTopLeftPos.bind(this);\n    this.getTopRightPos = this.getTopRightPos.bind(this);\n    this.getBottomLeftPos = this.getBottomLeftPos.bind(this);\n    this.getBottomRightPos = this.getBottomRightPos.bind(this);\n    this.playerPlatformCheck = this.playerPlatformCheck.bind(this);\n    this.playerUpdate = this.playerUpdate.bind(this);\n    this.projectilePlatformCheck = this.projectilePlatformCheck.bind(this);\n    this.renderFireballs = this.renderFireballs.bind(this);\n    this.renderEnemies = this.renderEnemies.bind(this);\n    this.renderEnemyProjectiles = this.renderEnemyProjectiles.bind(this);\n    this.startFrameCount = this.startFrameCount.bind(this);\n    this.runGame = this.runGame.bind(this);\n    this.isGameOver = this.isGameOver.bind(this);\n    this.win = this.win.bind(this);\n    this.enemiesCleared = this.enemiesCleared.bind(this);\n    this.loadLevel = this.loadLevel.bind(this);\n    this.resizeGame = this.resizeGame.bind(this);\n    this.newLevel = this.newLevel.bind(this);\n\n\n    this.enemyCount = Object.keys(this.enemies).length;\n    this.cleared = false;\n\n    this.survivalMode = this.survivalMode.bind(this);\n\n    this.startFrameCount();\n  }\n\n  startFrameCount() {\n    this.frameInterval = setInterval(() => {\n      this.frameCount++;\n    }, (1000 / 30));\n  }\n\n\n  newLevel() {\n    this.level = new Level({\n      ctx: this.ctx,\n      mapKeys: Level.level2(),\n      player: this.player,\n      tileSize: this.tileSize\n    });\n    this.renderMap = this.level.mapKeys[this.level.screen].renderMap;\n    this.physicalMap = this.level.mapKeys[this.level.screen].physicalMap;\n    this.enemies = this.level.enemies();\n    this.level.enemiesInterval();\n    // this.level.loadLevel(8);\n  }\n\n  resizeGame(canvas) {\n    this.tileSize = canvas.width / 15;\n    this.level.tileSize = this.tileSize;\n  }\n\n  getTopLeftPos() {\n    let x = Math.floor(this.player.leftSide() / this.tileSize);\n    let y = Math.floor(this.player.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getTopRightPos() {\n    let x = Math.floor(this.player.rightSide() / this.tileSize);\n    let y = Math.floor(this.player.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomLeftPos() {\n    let x = Math.floor(this.player.leftSide() / this.tileSize);\n    let y = Math.floor(this.player.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomRightPos() {\n    let x = Math.floor(this.player.rightSide() / this.tileSize);\n    let y = Math.floor(this.player.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n\n\n  enemiesCleared() {\n    if (parseInt(this.level.screen) === 8) return;\n    if (Object.keys(this.enemies).length === 0) {\n      this.cleared = true;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  playerPlatformCheck() {\n    let colVal;\n    let top;\n    let bottom;\n    let right;\n    let left;\n    let cols = 15;\n    let rows = 10;\n    let floorCount = 0;\n    let climbCount = 0;\n\n    let physMap = this.level.physicalMap;\n\n    [left, top] = this.getTopLeftPos();\n    colVal = physMap[top * cols + left];\n    colVal === 58 ? climbCount++ : \"\";\n    this.collider.collidePlatform(\n      this.player,\n      left * this.tileSize,\n      top * this.tileSize,\n      colVal, \n      this.tileSize    \n    );\n\n    [right, top] = this.getTopRightPos();\n    colVal = physMap[top * cols + right];\n    colVal === 58 ? climbCount++ : \"\";\n\n    this.collider.collidePlatform(\n      this.player,\n      right * this.tileSize,\n      top * this.tileSize,\n      colVal,\n      this.tileSize\n    );\n\n    [left, bottom] = this.getBottomLeftPos();\n    colVal = physMap[bottom * cols + left];\n    (colVal === 0) ? floorCount++ : \"\";\n    colVal === 58 ? climbCount++ : \"\";\n    this.collider.collidePlatform(\n      this.player,\n      left * this.tileSize,\n      bottom * this.tileSize,\n      colVal,\n      this.tileSize\n    );\n\n\n    [right, bottom] = this.getBottomRightPos();\n    colVal = physMap[bottom * cols + right];\n    (colVal === 0) ? floorCount++ : \"\";\n    colVal === 58 ? climbCount++ : \"\";\n    if (this.player.canClimb && climbCount === 0) this.player.canClimb = false;\n    if (floorCount === 2) {\n      this.player.onGround = false;\n      // if (this.player.jumpCount === 2) this.player.jumpCount -=;\n    }\n    this.collider.collidePlatform(\n      this.player,\n      right * this.tileSize,\n      bottom * this.tileSize,\n      colVal,\n      this.tileSize\n    );\n  }\n\n\n  projectilePlatformCheck(projectile) {\n    let colVal;\n    let top;\n    let bottom;\n    let right;\n    let left;\n    let cols = 15;\n    let physMap = this.level.physicalMap;\n\n    if (projectile.dir === \"left\") {\n      [left, top] = projectile.getTopLeftPos();\n      colVal = physMap[top * cols + left];\n      this.collider.collidePlatform(\n        projectile,\n        left * this.tileSize,\n        top * this.tileSize,\n        colVal,\n        this.tileSize\n      );\n\n      [left, bottom] = projectile.getBottomLeftPos();\n      colVal = physMap[bottom * cols + left];\n      this.collider.collidePlatform(\n        projectile,\n        left * this.tileSize,\n        bottom * this.tileSize,\n        colVal,\n        this.tileSize\n      );\n    }\n\n    if (projectile.dir === \"right\") {\n      [right, top] = projectile.getTopRightPos();\n      colVal = physMap[top * cols + right];\n      this.collider.collidePlatform(\n        projectile,\n        right * this.tileSize,\n        top * this.tileSize,\n        colVal,\n        this.tileSize\n      );\n\n      [right, bottom] = projectile.getBottomRightPos();\n      colVal = physMap[bottom * cols + right];\n\n      this.collider.collidePlatform(\n        projectile,\n        right * this.tileSize,\n        bottom * this.tileSize,\n        colVal,\n        this.tileSize\n      );\n\n    }\n\n  }\n  \n\n  playerUpdate() {\n    this.player.setRunning();\n    this.player.isIdle();\n    this.player.setOldPos();\n\n    if (!this.player.idle) {\n      // if (this.player.velX > 7 || this.player.velX < -7) {\n      //   if (this.player.keydown)\n      //   this.player.velX += (this.player.velX > 0) ? -1 : 1;\n      // } else {\n      //   this.player.dash = false;\n      // }\n\n      // if (this.player.runningKeyDown && this.player.dashing) {\n      //   if (this.player.velX > 7 || this.player.velX < -7) {\n      //     this.player.velX += (this.player.velX > 0) ? -1 : 1;\n      //   }\n\n      // } else if (this.player.onGround && this.player.dashing && !this.player.runningKeyDown) {\n      //   this.player.velX += (this.player.velX > 0) ? -1 : (this.player.velX < 0) ? 1 : 0;\n      // }\n      // if (this.player.direction === \"right\") {\n      //   if ((this.player.onGround && !this.player.keydown && this.player.velX > 0)) {\n      //     this.player.velX -= 1;\n      //     // this.player.velX < 1 ? (this.player.velX = 0) : (this.player.velX /= CONSTANTS.FRICTION);\n      //   }\n      // } else if (this.player.direction === \"left\") {\n      //   if ((this.player.onGround && !this.player.keydown && this.player.velX > 0)) {\n      //     this.player.velX += 1;\n      //   }\n      // }\n      this.player.x += this.player.velX;\n      // this.player.isDashing();\n    }\n\n    if (this.player.climbing) {\n        this.player.isClimbing();\n    } else {\n        this.player.inAir();\n\n    }\n\n    this.collider.collidePlayer(this.player, this.canvas, this.cleared);\n    this.playerPlatformCheck();\n  }\n\n  renderEnemies() {\n    // if (this.level.screen === 6 || this.level.screen === 8) {\n      this.enemyCount = Object.keys(this.level.enemies).length;\n    // } \n    // else if (this.level.screen = 8) {\n    //   this.enemyCount = 100;\n    // }\n\n    if (!this.cleared) {\n      for (let key in this.enemies) {\n        // if (this.enemies[key].dying && !this.enemies[key].dead) continue;\n        this.projectilePlatformCheck(this.enemies[key]);\n\n        if (!this.enemies[key].dead) {\n          this.enemies[key].drawEnemy(this.ctx, this.frameCount);\n          this.collider.collideEnemy(this.player, this.enemies[key]);\n          this.enemies[key].move(this.canvas, this.player, this.ctx);\n\n        } else {\n          this.highScore += this.enemies[key].points;\n          delete this.enemies[key];\n          this.enemyCount -= 1;\n        }\n      }\n      this.enemiesCleared();\n    }\n  }\n\n  renderFireballs() {\n    if (Object.keys(this.player.fireballs).length !== 0) {\n      for (let key in this.player.fireballs) {\n        let fireball = this.player.fireballs[key];\n        \n        if (this.enemyCount !== 0) {\n          for (let key in this.enemies) {\n            this.collider.collideEnemy(fireball, this.enemies[key]);\n          }\n        }\n        \n        this.projectilePlatformCheck(fireball);\n\n        (!fireball.isHit) ? \n          fireball.drawProjectile(this.ctx, this.frameCount) :\n          delete this.player.fireballs[key];\n      }\n    }\n  }\n\n  renderEnemyProjectiles() {\n    ///Check if any enemies\n    Object.values(this.enemies).forEach((enemy) => {\n      if (Object.keys(enemy.projectiles).length !== 0) {\n        for (let key in enemy.projectiles) {\n          this.collider.collideProjectile(this.player, enemy.projectiles[key]);\n\n          this.projectilePlatformCheck(enemy.projectiles[key]);\n\n          (!enemy.projectiles[key].isHit) ?\n            enemy.projectiles[key].drawProjectile(this.ctx, this.frameCount) :\n            delete enemy.projectiles[key];\n        }\n      }\n    });\n  }\n\n  loadLevel() {\n\n    if (((this.player.x + (this.player.width / 2)) >= this.canvas.width)) {\n      this.level.loadLevel(parseInt(this.level.screen) + 1);\n      this.cleared = false;\n      this.enemies = this.level.enemies;\n      this.enemyCount = Object.keys(this.enemies);\n      this.player.x = 0;\n    } else if ((this.player.x + (this.player.width / 2)) <= 0) {\n      this.level.loadLevel(-1);\n      this.player.x = this.canvas.width - this.player.width;\n    }\n  }\n\n  survivalMode() {\n    if (this.level.screen !== \"8\") return;\n\n    if (this.level.rushLevel === 0) {\n      this.level.rushLevel++;\n      this.level.enemyRushInterval(7000, 6);\n    } else if (this.highScore > 30 && this.level.rushLevel === 1) {\n      this.level.rushLevel++;\n      this.level.enemyRushInterval(6000, 7);\n    } else if (this.highScore > 60 && this.level.rushLevel === 2) {\n      this.level.rushLevel++;\n      this.level.enemyRushInterval(5000, 7);\n    } else if (this.highScore > 100 && this.level.rushLevel === 3) {\n      this.level.rushLevel++;\n      this.level.enemyRushInterval(4000, 8);\n    } else if (this.highScore > 150 && this.level.rushLevel === 4) {\n      this.level.rushLevel++;\n      this.level.enemyRushInterval(3000, 8);\n    } else if (this.highScore > 250 && this.level.rushLevel === 4) {\n      this.level.rushLevel++;\n      this.level.enemyRushInterval(2000, 9);\n\n    }\n  }\n\n  isGameOver() {\n    this.win();\n    this.gameOver = (this.player.dead || this.won) ? true : false;\n  }\n\n  //refactor\n  win() {\n    this.won = (this.level.screen === 6 && Object.keys(this.enemies).length === 0) ? true : false;\n  }\n  \n\n  runGame() {\n    this.isGameOver();\n\n    if (!this.gameOver) {\n      this.loadLevel();\n      this.level.renderBackground(this.ctx, this.canvas);\n      if (this.level.screen > 3) this.level.drawLevel(this.ctx);\n      this.player.drawSprite(this.frameCount);\n      // this.player.drawPlayer(this.frameCount);\n      this.playerUpdate();\n      if (this.level.screen < 4) {\n        this.level.renderMid(this.ctx, this.canvas);\n        this.level.renderFront(this.ctx, this.canvas);\n      }\n      debugger\n      this.survivalMode(this.level, this.highScore);\n\n      // this.enemies[1].drawEnemy(this.ctx, this.frameCount);\n      this.renderEnemies();\n      // this.enemies[1].callAttack(this.frameCount);\n      \n      this.renderEnemyProjectiles();\n      this.renderFireballs();\n      \n      this.HUD.drawHUD(this.canvas, this.ctx, this.player, this.frameCount, this.highScore);\n\n    } else {\n      if (!this.won) {\n        this.level.theme.pause();\n        this.highScore = Math.floor(this.highScore + this.player.health);\n        // this.ctx.beginPath();\n        // this.ctx.rect(0, 0, this.canvas.width, this.canvas.height);\n        // this.ctx.fillStyle = \"rgba(255, 255, 255, .1)\";\n        // this.ctx.fill();\n        // this.ctx.closePath();\n\n        // // let img = new Image();\n        // // img.src = \"./assets/embers.jpg\";\n        // // img.onload = () => {\n        //   // ctx.drawImage(img, 0, 0);\n            this.ctx.drawImage(\n                this.embers,\n                0,\n                0,\n                852,\n                400,\n                0, 0,\n                900, 600\n          );\n        // };\n  \n        this.ctx.font = \"130px Arial\";\n        this.ctx.fillStyle = \"rgb(46, 2, 2)\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"GAME OVER\", this.canvas.width / 2, this.canvas.height / 2);\n\n\n        this.ctx.font = \"50px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"Press Enter to Play Again\", this.canvas.width / 2, 400);\n\n      } else {\n        this.level.theme.pause();\n\n        this.ctx.drawImage(\n          this.embers,\n          0,\n          0,\n          852,\n          400,\n          0, 0,\n          900, 600\n        );\n        this.ctx.font = \"80px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"CONGRATS!\", this.canvas.width / 2, 160);\n\n\n        this.ctx.font = \"80px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"YOU BEAT LEVEL 1\", this.canvas.width / 2, this.canvas.height / 2);\n\n        this.ctx.font = \"80px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(`YOUR SCORE IS ${this.highScore}`, this.canvas.width / 2, 450);\n\n\n        this.ctx.font = \"50px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"Press Enter to Play Again\", this.canvas.width / 2, 550);\n      }\n\n    } \n    \n  }\n\n}\n\n\n\n\n\nexport default Game;","import Controller from \"./util/Controller\";\nimport Level from \"./Levels/Level\";\nimport Player from \"./Player\";\nimport Game from \"./Game\";\nimport GameHUD from \"./GameHUD\";\n\n\nclass GameView {\n  constructor (canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    // this.game = new Game(this.canvas, this.ctx);\n    this.game = null;\n    this.splash = new Image();\n    this.splash.src = \"./assets/firegirl.jpg\";\n    // this.HUD = new GameHUD();\n    // this.tileMap = this.loadImage();\n\n\n    this.renderGame = this.renderGame.bind(this);\n    this.loadImage = this.loadImage.bind(this);\n    this.newGame = this.newGame.bind(this);\n    this.newEnemyRush = this.newEnemyRush.bind(this);\n\n    window.addEventListener(\"keydown\", (event) => {\n      event.preventDefault();\n      switch (event.key) {\n        case \"Enter\": \n          if (!this.game || this.game.gameOver) {\n            this.newGame();\n          }\n          break;\n        case \" \":\n          if (!this.game || this.game.gameOver) {\n            this.newEnemyRush();\n          };\n          break;\n        case \"m\": \n          this.game.level.theme.mute();\n          break;\n        default:\n          return;\n      }\n    });\n\n  }\n\n  loadImage() {\n    let tileMap = new Image();\n    tileMap.src = \"./assets/tileGen.png\";\n    return tileMap;\n  }\n\n  newGame() {\n    if (!this.game || this.game.gameOver) {\n      this.game = new Game(this.canvas, this.ctx);\n      this.game.HUD = new GameHUD();\n      this.game.level.theme.play();\n    }\n  }\n\n  newEnemyRush() {\n    if (!this.game || this.game.gameOver) {\n      this.game = new Game(this.canvas, this.ctx, 2);\n      // this.game.newLevel();\n      // this.game.level = new Level({\n      //   ctx: this.ctx,\n      //   mapKeys: Level.level2(),\n      //   player: this.game.player,\n      //   tileSize: this.game.tileSize\n      // });\n      this.game.HUD = new GameHUD();\n      this.game.level.theme.play();\n    }\n    // if (!this.game || this.game.gameOver) {\n    //   this.game = new Game(this.canvas, this.ctx);\n    //   this.game.level.loadLevel(8);\n    //   this.game.level.enemiesInterval();\n    //   this.game.HUD = new GameHUD();\n    //   this.game.level.theme.play();\n    // }\n  }\n\n\n  renderGame() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    if (!this.game) {\n        this.ctx.drawImage(\n            this.splash,\n            0,\n            0,\n            920,\n            644,\n            0, 0,\n            this.canvas.width, this.canvas.height\n        );\n\n      this.ctx.font = \"100px Arial\";\n      this.ctx.fillStyle = \"rgb(46, 2, 2)\";\n      this.ctx.textAlign = \"center\";\n      this.ctx.fillText(\"FIRE GIRL\", this.canvas.width / 2, this.canvas.height / 3);\n\n      this.ctx.font = \"1.8em Arial\";\n      this.ctx.fillStyle = \"pink\";\n      this.ctx.textAlign = \"center\";\n      this.ctx.fillText(\"Press Enter to Play Level 1\", this.canvas.width / 2, this.canvas.height * (2/3));\n\n      this.ctx.font = \"1.8em Arial\";\n      this.ctx.fillStyle = \"pink\";\n      this.ctx.textAlign = \"center\";\n      this.ctx.fillText(\"Press Space to Play Survival Mode\", this.canvas.width / 2, this.canvas.height * (7/9));\n    }\n\n    if (this.game) {\n\n      this.game.runGame();\n      \n    }\n\n    window.requestAnimationFrame(this.renderGame);\n  }\n\n\n\n\n} \n\n\n\nexport default GameView;\n\n","import \"./styles/index.scss\";\nimport GameView from \"./GameView\";\n\n// const greeting = testObj?.key2?.key3 || testObj.key1;\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  let canvas = document.getElementById(\"gameCanvas\");\n  let ctx = canvas.getContext(\"2d\");\n  let gameView = new GameView(canvas, ctx);\n\n  gameView.renderGame();\n\n  // ctx.beginPath();\n  // ctx.rect(0, 0, canvas.width, canvas.height);\n  // ctx.fillStyle = \"rgba(255, 255, 255, .1)\";\n  // ctx.fill();\n  // ctx.closePath();\n\n  // ctx.font = \"130px Arial\";\n  // ctx.fillStyle = \"red\";\n  // ctx.textAlign = \"center\";\n  // ctx.fillText(\"GAME OVER\", canvas.width / 2, canvas.height / 2);\n  // let img = new Image();\n  // img.src = \"./assets/firegirl.jpg\";\n  // img.onload = () => {\n  //   // ctx.drawImage(img, 0, 0);\n  //         ctx.drawImage(\n  //         img,\n  //         0,\n  //         0,\n  //         920,\n  //         644,\n  //         0, 0,\n  //         900, 600\n  //   );\n  // };\n  \n\n  // let fromRight = canvas.width - 50;\n  // ctx.beginPath();\n  // ctx.arc(fromRight, canvas.height - 30, 5, 0, 2 * Math.PI, false);\n  // ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.fill();\n  // ctx.lineWidth = 5;\n  // ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.stroke();\n  // ctx.closePath();\n\n  // ctx.beginPath();\n  // ctx.arc(canvas.width - 80, canvas.height - 30, 5, 0, 2 * Math.PI, false);\n  // ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.fill();\n  // ctx.lineWidth = 5;\n  // ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.stroke();\n  // ctx.closePath();\n\n  // ctx.beginPath();\n  // ctx.arc(canvas.width - 110, canvas.height - 30, 5, 0, 2 * Math.PI, false);\n  // ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.fill();\n  // ctx.lineWidth = 5;\n  // ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.stroke();\n  // ctx.closePath();\n  \n  // img.onload = () => {\n  //   ctx.drawImage(\n  //     img,\n  //     22 ,\n  //     400,\n  //     35,\n  //     35,\n  //     0, 0,\n  //     35, 35\n  //   );\n  // };\n\n\n\n});\n"],"sourceRoot":""}