{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/Controller.js","webpack:///./src/Objects/GameObject.js","webpack:///./src/util/Music.js","webpack:///./src/Objects/Characters/Character.js","webpack:///./src/Player.js","webpack:///./src/util/Collision.js","webpack:///./src/Objects/Projectiles/Projectile.js","webpack:///./src/Objects/Enemies/Enemy.js","webpack:///./src/Objects/Enemies/Helicopter.js","webpack:///./src/Objects/Enemies/Flower.js","webpack:///./src/Objects/Enemies/Vinehead.js","webpack:///./src/Objects/Enemies/BossVinehead.js","webpack:///./src/Levels/Level.js","webpack:///./src/GameHUD.js","webpack:///./src/Game.js","webpack:///./src/GameView.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Controller","player","this","keysPressed","keydown","keyup","window","addEventListener","event","idle","KEYS","keyCode","left","direction","velX","right","up","down","jump","fire","shootFire","onGround","19","37","38","39","40","65","68","13","GameObject","options","pos","ctx","canvas","width","height","x","y","oldX","oldY","tileSize","rightSide","leftSide","topSide","bottomSide","getTopLeftPos","getTopRightPos","getBottomLeftPos","getBottomRightPos","Math","floor","Music","music","document","createElement","src","id","setAttribute","style","display","play","pause","mute","muted","Character","vel","health","spriteMap","Image","CONSTANTS","Player","character","loadImage","fireballs","idleWidth","runWidth","velY","isRunning","jumpCount","frameCount","isHit","dying","dead","drawPlayer","setOldPos","inAir","isIdle","whichDirection","setRunning","setHit","setDying","getDirX","getDirY","drawImage","scale","vert","keys","length","Projectile","fireballVert","fireball","damage","hitCooldown","setTimeout","Collision","collidePlayer","collidePlatform","collidePlatTop","collidePlatBottom","collidePlatLeft","collidePlatRight","collideSlopeFortyFiveRight","collideSlopeFortyFiveLeft","collideSlopeTwentyLeft","collideSlopeTwentyRight","collideEnemy","collisionPlatformKeys","1","obj","colVal","2","3","4","5","6","7","8","9","10","11","12","14","15","16","17","18","20","21","22","23","24","25","26","27","28","29","30","31","32","cleared","obj1","obj2","gameObj","tileLeft","tileBottom","tileY","tileRight","half","tileTop","gameObject","proj","image","dir","frameStartX","frameStartY","frameWidth","frameHeight","frameNum","collider","timeOutHit","updateProjectile","drawProjectile","hitTimeout","top","bottom","physicalMap","hit","Enemy","enemy","projectiles","drawEnemy","shootProj","callAttack","console","log","helibullet","attackInterval","setInterval","Helicopter","bounds","clearInterval","Flower","active","opening","count","Vinehead","playerCheckTimeout","checkPlayerPos","homing","clearTimeout","playerCheckInterval","BossVinehead","attacking","charging","charge","startFrameCount","bossInterval","attackTimeout","attack","chargeTimeout","backUp","Level","mapKeys","screen","renderMap","cols","rows","tileMap","mapTileSize","enemies","enemyCount","theme","levelLayers","loadImages","getTile","getLeft","getRight","getTop","getBottom","drawLevel","loadLevel","enemiesInterval","spawnEnemies","renderBackground","renderMid","renderFront","background","mid","front","hel2","hel1","flow2","vine1","vine3","vine2","boss1","images","col","row","spawnInterval","random","num","tile","tileCut","GameHUD","drawHealth","drawHUD","drawAmmo","img","beginPath","rect","fillStyle","fill","closePath","healthMeter","fromRight","arc","PI","lineWidth","strokeStyle","stroke","Game","controller","level","level1","HUD","gameOver","embers","playerPlatformCheck","playerUpdate","projectilePlatformCheck","renderFireballs","renderEnemies","renderEnemyProjectiles","runGame","isGameOver","win","enemiesCleared","frameInterval","floorCount","physMap","projectile","move","values","forEach","collideProjectile","won","font","textAlign","fillText","GameView","game","splash","renderGame","newGame","clearRect","requestAnimationFrame","getElementById","getContext"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","class Controller {\n  constructor(player) {\n    // this.gameview = gameview;\n    this.player = player;\n\n    this.keysPressed = {};\n\n    this.keydown = this.keydown.bind(this);\n    this.keyup = this.keyup.bind(this);\n    window.addEventListener(\"keydown\", this.keydown);\n    window.addEventListener(\"keyup\", this.keyup);\n  }\n\n  keydown(event) {\n    this.player.idle = false;\n    this.player.keydown = true;\n\n    switch (Controller.KEYS[event.keyCode]) {\n      case \"left\":\n        this.keysPressed.left = true;\n        this.player.direction = \"left\";\n        this.player.velX = -6;\n\n        break;\n      case \"right\":\n        this.keysPressed.right = true;\n        this.player.direction = \"right\";\n        this.player.velX = 7;\n        break;\n      case \"up\":\n        this.keysPressed.up = true;\n        break;\n      case \"down\":\n        this.keysPressed.down = true;\n        break;\n      case \"jump\":\n        this.keysPressed.jump = true;\n        this.player.jump();\n        break;\n      case \"fire\":\n\n        this.keysPressed.fire = true;\n        if (this.keysPressed.up) {\n          this.player.shootFire(\"up\");\n        } else if (this.keysPressed.down && !this.player.onGround) {\n          this.player.shootFire(\"down\");\n        } else {\n          this.player.shootFire();\n\n        }\n        break;\n      case \"space\":\n        // this.gameview.Ticker.paused = (this.gameview.Ticker.paused) ? false: true;\n        break;\n      default:\n        return;\n    }\n\n  }\n\n  keyup(event) {\n    // if (Controller.KEYS[event.keyCode] === \"left\" ||\n    //   Controller.KEYS[event.keyCode] === \"right\") {\n    //   this.player.keydown = false;\n    //   // this.player.velX = 0;\n    //   // this.player.idle =ß true;\n    //   return;\n    // }\n    switch (Controller.KEYS[event.keyCode]) {\n      case \"left\":\n        this.keysPressed.left = false;\n        // this.player.velX = 0;\n\n        if (!this.keysPressed.left && !this.keysPressed.right) this.player.velX = 0;\n\n        break;\n      case \"right\":\n        this.keysPressed.right = false;\n        // this.player.velX *= -1;\n        if (!this.keysPressed.left && !this.keysPressed.right) this.player.velX = 0;\n        break;\n      case \"up\":\n        this.keysPressed.up = false;\n        break;\n      case \"down\":\n        this.keysPressed.down = false;\n        break;\n      case \"jump\":\n        this.keysPressed.jump = false;\n        break;\n      case \"fire\":\n        this.keysPressed.fire = false;\n        break;\n      case \"space\":\n        // this.gameview.Ticker.paused = (this.gameview.Ticker.paused) ? false: true;\n        break;\n      default:\n        return;\n    }\n\n\n    this.player.idle = true;\n    // this.keysPressed = {};\n    // console.log(Controller.KEYS[event.keyCode])\n    // debugger\n\n  }\n}\n\n\nController.KEYS = {\n  19: 'space',\n  37: 'left',\n  38: 'up',\n  39: 'right',\n  40: 'down',\n  65: 'jump',\n  68: 'fire',\n  13: 'enter'\n};\n\n\n\nexport default Controller;","\n\nclass GameObject {\n  constructor(options) {\n    this.name = options.name;\n    this.pos = options.pos;\n    this.ctx = options.ctx;\n    this.canvas = options.canvas;\n    this.width = options.width;\n    this.height = options.height;\n    this.x = options.pos[0];\n    this.y = options.pos[1];\n    this.oldX = this.x;\n    this.oldY = this.y;\n    this.tileSize = 60;\n\n\n\n    this.rightSide = this.rightSide.bind(this);\n    this.leftSide = this.leftSide.bind(this);\n    this.topSide = this.topSide.bind(this);\n    this.bottomSide = this.bottomSide.bind(this);\n\n    this.getTopLeftPos = this.getTopLeftPos.bind(this);\n    this.getTopRightPos = this.getTopRightPos.bind(this);\n    this.getBottomLeftPos = this.getBottomLeftPos.bind(this);\n    this.getBottomRightPos = this.getBottomRightPos.bind(this);\n  }\n\n  rightSide() {\n    return this.x + this.width;\n  }\n\n  leftSide() {\n    return this.x;\n  }\n\n  topSide() {\n    return this.y;\n  }\n\n  bottomSide() {\n    return this.y + this.height;\n  }\n\n  getTopLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n\n  getTopRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n}\n\nexport default GameObject;","class Music {\n    constructor(options){\n        this.music = document.createElement(\"audio\");\n        this.music.src = options.src;\n        this.music.id = \"theme\";\n        this.music.setAttribute(\"preload\", \"auto\");\n        this.music.setAttribute(\"controls\", \"none\");\n        this.music.setAttribute(\"loop\", \"true\");\n        this.music.setAttribute(\"muted\", \"false\");\n        this.music.style.display = \"none\";\n\n        this.play = this.play.bind(this);\n        this.pause = this.pause.bind(this);\n        this.mute = this.mute.bind(this);\n    };\n\n    play() {\n        debugger\n        this.music.play();\n    }\n    pause() {\n        this.music.pause();\n    }\n\n    mute() {\n        this.music.muted =!this.music.muted;\n    }\n\n}\n\nexport default Music;","import GameObject from \"../GameObject\";\n\nconst GRAVITY = 0.5;\nconst FRICTION = 0.5;\n\nclass Character extends GameObject {\n  constructor(options) {\n    super({ \n      name: options.name, \n      pos: options.pos, \n      ctx: options.ctx, \n      width: options.width,\n      height: options.height\n    });\n    this.vel = [0, 0];\n    this.health = 200;\n \n    \n  }\n\n  loadImage() {\n    let spriteMap = new Image();\n    spriteMap.src = \"./assets/charSprite.png\";\n    return spriteMap;\n    // this.tileMap.onLoad = this.drawLevel(ctx);\n  }\n\n  // drawModel() {\n  //   this.ctx.beginPath();\n  //   this.ctx.rect(20, 40, 40, 70);\n  //   this.ctx.fillStyle = \"#FF000\";\n  //   this.ctx.fill();\n  //   this.ctx.closePath();\n\n  // }\n\n  \n}\n\nexport default Character;","import Character from \"./Objects/Characters/Character\";\nimport Collision from \"./util/Collision\";\nimport Projectile from \"./Objects/Projectiles/Projectile\";\n\n\nconst CONSTANTS = {\n  GRAVITY: 1,\n  FRICTION: 1.5,\n  MAX_VEL: 50,\n};\n\nclass Player {\n  constructor(ctx, canvas) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.character = new Character({\n      name: \"Seisa\",\n      pos: [20, 350],\n      ctx: this.ctx,\n      canvas: this.canvas,\n      width: 40,\n      height: 54\n    });\n    this.health = this.character.health;\n    this.spriteMap = this.character.loadImage();\n    this.fireballs = {};\n    \n    this.vel = this.character.vel;\n    this.x = this.character.x;\n    this.y = this.character.y;\n    this.idleWidth = 35;\n    this.runWidth = 40;\n    this.oldX = this.x;\n    this.oldY = this.y;\n    this.width = this.character.width;\n    this.height = this.character.height;\n    this.velX = this.vel[0];\n    this.velY = this.vel[1];\n    this.onGround = false;\n    this.idle = true;\n    this.keydown = false;\n    this.isRunning = false;\n    this.direction = \"right\";\n    this.jumpCount = 2;\n    this.frameCount = 0;\n    this.isHit = false;\n    this.dying = false;\n    this.dead = false;\n\n\n\n    this.drawPlayer = this.drawPlayer.bind(this);\n    this.jump = this.jump.bind(this);\n    // this.move = this.move.bind(this);\n    this.shootFire = this.shootFire.bind(this);\n\n\n    this.setOldPos = this.setOldPos.bind(this);\n    this.inAir = this.inAir.bind(this);\n    this.isIdle = this.isIdle.bind(this);\n    this.whichDirection = this.whichDirection.bind(this);\n    this.setRunning = this.setRunning.bind(this);\n    this.setHit = this.setHit.bind(this);\n    this.setDying = this.setDying.bind(this);\n\n    this.getDirX = this.getDirX.bind(this);\n    this.getDirY = this.getDirY.bind(this);\n  }\n\n  drawPlayer(frameCount) {\n// .74\n// .59\n    this.setDying();\n    // this.isIdle();\n    if (this.isHit && frameCount % 3 === 0 ) return;\n    if (this.velX === 0) {\n      if (this.direction === \"right\") {\n        this.ctx.drawImage(\n          this.spriteMap,\n          (Math.floor(frameCount / 2) % 10) * 147,\n          251,\n          147,\n          251,\n          this.x, this.y,\n          this.width, this.height\n          // this.width - 5, this.height\n        );\n      } else {\n        this.ctx.scale(-1, 1);\n        this.ctx.drawImage(\n          this.spriteMap,\n          (Math.floor(frameCount / 2) % 10) * 147,\n          251,\n          147,\n          251,\n          -this.x - this.width, this.y,\n          // -this.x - this.width - 5, this.y,\n          this.width, this.height\n          // this.width - 5, this.height\n        );\n        this.ctx.scale(-1, 1);\n      }\n    } else if (this.velX > 0) {\n      this.ctx.drawImage(\n        this.spriteMap,\n        (frameCount % 10) * 186,\n        0,\n        186,\n        251,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else if (this.velX < 0) {\n      this.ctx.scale(-1, 1);\n      this.ctx.drawImage(\n        this.spriteMap,\n        (frameCount % 10) * 186,\n        0,\n        186,\n        251,\n        -(this.x) - this.width, this.y,\n        this.width, this.height\n      );\n      this.ctx.scale(-1, 1);\n\n    } \n    ///change this.width and height based on movement\n  }\n\n  shootFire(vert = null) {\n    if (Object.keys(this.fireballs).length === 3) return;\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.fireballs[i]) {\n        key = i;\n        break;\n      }\n    }\n    if (vert === \"up\") {\n      this.fireballs[key] = new Projectile(\n        Projectile.fireballVert(\n          [this.rightSide() - (this.width / 2),\n          this.bottomSide() + this.height],\n          0, -20, vert)\n      );\n    } else if (vert === \"down\") {\n      this.fireballs[key] = new Projectile(\n        Projectile.fireballVert(\n          [this.rightSide() - (this.width / 2),\n          this.bottomSide() - this.height],\n          0, 20, vert)\n      );\n      this.velY -= 10;\n      this.jumpCount -= 1;\n    } else if (this.direction === \"right\") {\n      this.fireballs[key] = new Projectile(\n        Projectile.fireball(\n          [this.rightSide() - this.width,\n          this.bottomSide() - (this.height / 1.8)],\n          20, 0, \"right\")\n        );\n    } else if (this.direction === \"left\"){\n      this.fireballs[key] = new Projectile(\n        Projectile.fireball(\n          [this.leftSide(),\n          this.bottomSide() - (this.height / 1.8)],\n          -20, 0, \"left\")\n        );\n        \n    }\n\n  }\n    \n  setHit(damage = 10) {\n    if (!this.isHit) {\n      this.isHit = true;\n      this.hitCooldown = setTimeout(() => {\n        this.isHit = false;\n      }, 2000);\n      this.health -= damage;\n    }\n  }\n\n  setDying() {\n\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      setTimeout(() => {\n        this.dead = true;\n      }, 1000);\n    }\n  }\n\n\n  rightSide() {\n    return this.x + this.width;\n  }\n\n  leftSide() {\n    return this.x;\n  }\n\n  topSide() {\n    return this.y;\n  }\n\n  bottomSide() {\n    return this.y + this.height;\n  }\n\n  \n  setOldPos() {\n    this.oldX = this.x;\n    this.oldY = this.y;\n  }\n\n  getDirX() {\n    return this.x + this.velX;\n  }\n\n  getDirY() {\n    return this.y + this.velY;\n  }\n\n  isIdle() {\n    if (this.velX === 0 && this.velY === 0) {\n      this.idle = true;\n    } else {\n      this.idle = false;\n    }\n  }\n\n  inAir() {\n    if (!this.onGround ) {\n      this.y += this.velY;\n      (this.velY + CONSTANTS.GRAVITY > 25) ? this.velY = 25 : this.velY += CONSTANTS.GRAVITY;\n    } else {\n      this.velY = 0;\n    }\n  }\n\n  jump() {\n    if (this.jumpCount === 2) {\n      this.onGround = false;\n      this.velY = 0 - 15;\n      this.jumpCount = 1;\n    } else if (this.jumpCount === 1) {\n      this.velY = 0 - 15;\n      this.jumpCount = 0;\n    }\n  }\n\n\n\n  setRunning() {\n    if (this.velX !== 0) {\n      this.isRunning = true;\n      this.width = this.runWidth;\n    } else {\n      this.isRunning = false;\n      this.width = this.idleWidth;\n    }\n  }\n\n\n\n  whichDirection() {\n    this.direction = this.velX >= 0 ? \"right\" : \"left\";\n  }\n\n}\n\nexport default Player;","import Player from \"../Player\";\nimport Projectile from \"../Objects/Projectiles/Projectile\";\nimport Enemy from \"../Objects/Enemies/Enemy\";\n// import Helicopter from \"../Objects/Enemies/Helicopter\";\n\nclass Collision {\n  constructor() {\n    this.collidePlayer = this.collidePlayer.bind(this);\n    this.collidePlatform = this.collidePlatform.bind(this);\n    this.collidePlatTop = this.collidePlatTop.bind(this);\n    this.collidePlatBottom = this.collidePlatBottom.bind(this);\n    this.collidePlatLeft = this.collidePlatLeft.bind(this);\n    this.collidePlatRight = this.collidePlatRight.bind(this);\n    // this.collidePlatformSlopeRight = this.collidePlatformSlopeRight.bind(this);\n    this.collideSlopeFortyFiveRight = this.collideSlopeFortyFiveRight.bind(\n      this\n    );\n    this.collideSlopeFortyFiveLeft = this.collideSlopeFortyFiveLeft.bind(this);\n    this.collideSlopeTwentyLeft = this.collideSlopeTwentyLeft.bind(this);\n    this.collideSlopeTwentyRight = this.collideSlopeTwentyRight.bind(this);\n    this.collideEnemy = this.collideEnemy.bind(this);\n\n    this.collisionPlatformKeys = {\n      1: (obj, x, y, colVal) => {\n        this.collidePlatTop(obj, y);\n      },\n      2: (obj, x, y, colVal) => {\n        ////thin platform\n        if (obj.velY > 0) {\n          this.collidePlatTop(obj, y);\n        }\n      },\n      3: (obj, x, y, colVal) => {\n        ///top / left\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          // this.collidePlatTop(obj, y)\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      4: (obj, x, y, colVal) => {\n        ///top / left / right\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else if (this.collidePlatRight(obj, x + 60)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      5: (obj, x, y, colVal) => {\n        ///top / bottom / right\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else if (this.collidePlatBottom(obj, y + 60)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + 60);\n        }\n      },\n      6: (obj, x, y, colVal) => {\n        ///top / bottom\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          this.collidePlatBottom(obj, y + 60);\n        }\n      },\n      7: (obj, x, y, colVal) => {\n        ///thorn bottom\n        this.collidePlatBottom(obj, y + 10);\n        if (obj instanceof Player) {\n          obj.setHit(5);\n        }\n      },\n      8: (obj, x, y, colVal) => {\n        ///top / right\n        if (this.collidePlatTop(obj, y)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + 60);\n        }\n      },\n      9: (obj, x, y, colVal) => {\n        ///left\n        this.collidePlatLeft(obj, x);\n      },\n      10: (obj, x, y, colVal) => {\n        ///right\n        this.collidePlatRight(obj, x + 60);\n      },\n      11: (obj, x, y, colVal) => {\n        ///right / left / bottom thorn\n        if (this.collidePlatLeft(obj, x)) {\n          if (obj instanceof Player) {\n            obj.setHit(5);\n          }\n          return;\n        } else if (this.collidePlatBottom(obj, y + 10)) {\n          if (obj instanceof Player) {\n            obj.setHit(5);\n          }\n          return;\n        } else {\n          this.collidePlatRight(obj, x + 60);\n          if (obj instanceof Player) {\n            obj.setHit(5);\n          }\n        }\n      },\n      12: (obj, x, y, colVal) => {\n        //top / left half in\n        if (this.collidePlatLeft(obj, x + 30)) {\n          return;\n        } else if (obj.x + obj.width > x + 30) {\n          this.collidePlatTop(obj, y);\n        }\n      },\n      13: (obj, x, y, colVal) => {\n        //top / right half in\n        if (this.collidePlatRight(obj, x + 30)) {\n          return;\n        } else if (obj.x < x + 30) {\n          this.collidePlatTop(obj, y);\n        }\n      },\n      14: (obj, x, y, colVal) => {\n        /// bottom / left\n        if (this.collidePlatBottom(obj, y + 60)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x);\n        }\n      },\n      15: (obj, x, y, colVal) => {\n        /// bottom / right\n        if (this.collidePlatBottom(obj, y + 60)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x);\n        }\n      },\n      16: (obj, x, y, colVal) => {\n        /// bottom\n        this.collidePlatBottom(obj, y + 60);\n      },\n      17: (obj, x, y, colVal) => {\n        ///left\n        this.collidePlatLeft(obj, x);\n      },\n\n      18: (obj, x, y, colVal) => {\n        //45 deg right\n        this.collideSlopeFortyFiveRight(obj, x, y + 60);\n      },\n      19: (obj, x, y, colVal) => {\n        //45 deg left\n        this.collideSlopeFortyFiveLeft(obj, x + 60, y + 60);\n      },\n      20: (obj, x, y, colVal) => {\n        //22 deg right bottom half\n        this.collideSlopeTwentyRight(obj, x, y + 60);\n      },\n      21: (obj, x, y, colVal) => {\n        //22 deg left bootom half\n        this.collideSlopeTwentyLeft(obj, x + 60, y + 60);\n      },\n      22: (obj, x, y, colVal) => {\n        //22 deg right top half\n        this.collideSlopeTwentyRight(obj, x, y + 60, 30);\n      },\n      23: (obj, x, y, colVal) => {\n        //22 deg left top half\n        this.collideSlopeTwentyLeft(obj, x, y + 60, 30);\n      },\n      24: (obj, x, y, colVal) => {\n        //22 deg left top half & left\n        ///refactor////\n        if (this.collideSlopeTwentyLeft(obj, x, y + 60, 30)) {\n        return;\n        } else {\n          this.collidePlatLeft(obj, x)\n          ;\n        }\n      },\n      25: (obj, x, y, colVal) => {\n        //right half in\n        this.collidePlatRight(obj, x + 30)\n      },\n      26: (obj, x, y, colVal) => {\n        //left half in\n        this.collidePlatLeft(obj, x + 30);\n      },\n      27: (obj, x, y, colVal) => {\n        //top  half in/ right half in\n        if (this.collidePlatRight(obj, x + 30)) {\n          return;\n        } else if (obj.x < x + 30) {\n          this.collidePlatTop(obj, y + 30);\n        }\n      },\n      28: (obj, x, y, colVal) => {\n        //top  half in/ right half in / bottom\n        if (obj.x < x + 30) {\n          if (this.collidePlatTop(obj, y + 30)) {\n            return;\n          } else if (this.collidePlatBottom(obj, y + 60)){\n            return;\n          } else {\n            this.collidePlatRight(obj, x + 30)\n          }\n        };  \n      },\n      29: (obj, x, y, colVal) => {\n        //top half in\n        this.collidePlatTop(obj, y + 30);\n      },\n      30: (obj, x, y, colVal) => {\n        //top  half in/ left half in / bottom\n        if (obj.x + obj.width > x + 30) {\n          if (this.collidePlatTop(obj, y + 30)) {\n            return;\n          } else if (this.collidePlatBottom(obj, y + 60)) {\n            return;\n          } else {\n            this.collidePlatLeft(obj, x + 30)\n          }\n        };\n      },\n      31: (obj, x, y, colVal) => {\n        //top  half in/ right\n        if (this.collidePlatTop(obj, y + 30)) {\n          return;\n        } else {\n          this.collidePlatRight(obj, x + 60)\n        }\n      },\n      32: (obj, x, y, colVal) => {\n        //top  half in/ left\n        if (this.collidePlatTop(obj, y + 30)) {\n          return;\n        } else {\n          this.collidePlatLeft(obj, x)\n        }\n      },\n    };\n  }\n\n  collidePlayer(player, canvas, cleared) {\n    // debugger\n    if (player.x < 0) {\n      player.x = 0.01;\n      player.velX = 0;\n    } else if (player.x + player.width > canvas.width && !cleared) {\n      player.x = canvas.width - player.width;\n      player.velX = 0;\n    }\n\n    // if (player.y < 0) {\n    //   player.velY = 0;\n    //   player.y = 0.01;\n    // } else\n    if (player.y > canvas.height) {\n      // player.velY = 0;\n      // player.y = canvas.height - player.height - 0.1;\n      // player.jumpCount = 2;\n      // player.onGround = true;\n      // player.dead = true;\n      player.y = 0;\n      player.setHit(50);\n    }\n  }\n\n  collideProjectile(obj1, obj2) {\n    // if (!obj1 || !obj2) return false;\n    // if (obj2.dying || obj2.dead) return false;\n\n    if (\n      obj1.x < obj2.x + obj2.width &&\n      obj1.x + obj1.width > obj2.x &&\n      obj1.y < obj2.y + obj2.height &&\n      obj1.y + obj1.height > obj2.y\n    ) {\n      obj1.velY = -(obj1.velY / 3);\n      obj1.velX = -(obj1.velX / 3);\n      ///hit\n      obj1.setHit(obj2.damage);\n      obj2.setHit();\n      ///change Hit\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  collideEnemy(obj1, obj2) {\n    // if (!obj1 || !obj2) return false;\n    if (obj2.dying || obj2.dead) return false;\n\n    if (\n      obj1.x < obj2.x + obj2.width &&\n      obj1.x + obj1.width > obj2.x &&\n      obj1.y < obj2.y + obj2.height &&\n      obj1.y + obj1.height > obj2.y\n    ) {\n      // if (this.hitBox(obj1, obj2)) {\n      if (obj1 instanceof Player && !obj1.isHit) {\n        obj1.velY = -(obj1.velY / 3);\n        obj1.velX = -(obj1.velX / 3);\n        ///hit\n        obj1.setHit(this.damage);\n        return true;\n      }\n      if (obj1 instanceof Projectile) {\n        obj2.setHit(obj1.damage);\n        setTimeout(() => {\n          obj1.setHit();\n        }, 10);\n\n        return true;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  ////////PLATFORM COLLISION\n\n  collideSlopeFortyFiveRight(gameObj, tileLeft, tileBottom) {\n    ///60 x60 120 y 60 120 (60, 120] [ 60, 120])\n    // debugger\n    let tileY = tileBottom - (gameObj.rightSide() - tileLeft);\n    if (gameObj instanceof Player) {\n      if (gameObj.onGround) {\n        if (\n          gameObj.bottomSide() > tileBottom &&\n          gameObj.oldY + gameObj.height < tileBottom\n        ) {\n          gameObj.y = tileBottom - gameObj.height - 0.05;\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          return;\n        }\n        gameObj.y = tileY - gameObj.height - 0.05;\n      } else if (!gameObj.onGround) {\n        if (\n          gameObj.rightSide() > tileLeft &&\n          gameObj.bottomSide() > tileY &&\n          gameObj.oldY + gameObj.height < tileY\n        ) {\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          // gameObj.getDirY() + 60 > tileY) {\n          gameObj.y = tileY - gameObj.height - 0.05;\n        }\n      }\n    }\n\n    // if (gameObj.x + gameObj.width > tileLeft && (gameObj.getDirY() + 60) > tileY) {\n    //   gameObj.y = (tileY - 60) - 0.05;\n    //   gameObj.onGround = true;\n    // }\n    // console.log(gameObj.bottomSide());\n    // console.log(gameObj.rightSide());\n    // let midX = gameObj.leftSide() + (gameObj.width / 2);\n    // let slopeY = ((Math.tan(45 * Math.PI / 180) / gameObj.rightSide()));\n    // let oldSlopeY = ((Math.tan(45 * Math.PI / 180) / gameObj.oldX + gameObj.width))\n    // console.log(slopeY);\n    // if (gameObj.oldY >= tileBottom - oldSlopeY &&\n    //   gameObj.getDirY() + gameObj.height >= tileBottom - slopeY\n    //   // gameObj.oldY + gameObj.height < tileBottom - slopeY\n    // ) {\n    //   // debugger\n    //   gameObj.onGround = true;\n    //   gameObj.y = tileBottom - gameObj.height -\n    //     ((Math.tan(45 * Math.PI / 180) / gameObj.rightSide())) - 0.01;\n    //   // gameObj.y--;\n    //   console.log(gameObj.y);\n    // }\n  }\n\n  collideSlopeFortyFiveLeft(gameObj, tileRight, tileBottom) {\n    let tileY = tileBottom - (tileRight - gameObj.leftSide());\n    if (gameObj instanceof Player) {\n      if (gameObj.onGround) {\n        if (\n          gameObj.bottomSide() > tileBottom &&\n          gameObj.oldY + gameObj.height < tileBottom\n        ) {\n          gameObj.y = tileBottom - gameObj.height - 0.05;\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          return;\n        }\n        gameObj.y = tileY - gameObj.height - 0.05;\n      } else if (!gameObj.onGround) {\n        if (\n          gameObj.leftSide() < tileRight &&\n          gameObj.bottomSide() > tileY &&\n          gameObj.oldY + gameObj.height < tileY\n        ) {\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          gameObj.y = tileY - gameObj.height - 0.05;\n        }\n      }\n    }\n  }\n\n  collideSlopeTwentyRight(gameObj, tileLeft, tileBottom, half = 0) {\n    ///60 x60 120 y 60 120 (60, 120] [ 60, 120])\n    // debugger\n    let tileY = tileBottom - (half + (gameObj.rightSide() - tileLeft) / 2);\n    if (gameObj instanceof Player) {\n      if (gameObj.onGround) {\n        if (\n          gameObj.bottomSide() > tileBottom &&\n          gameObj.oldY + gameObj.height < tileBottom\n        ) {\n          gameObj.y = tileBottom - gameObj.height - 0.05;\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          return;\n        }\n        gameObj.y = tileY - gameObj.height - 0.05;\n      } else if (!gameObj.onGround) {\n        if (\n          gameObj.rightSide() > tileLeft &&\n          gameObj.bottomSide() > tileY &&\n          gameObj.oldY + gameObj.height < tileY\n        ) {\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          // gameObj.getDirY() + 60 > tileY) {\n          gameObj.y = tileY - gameObj.height - 0.05;\n        }\n      }\n    }\n  }\n\n  collideSlopeTwentyLeft(gameObj, tileRight, tileBottom, half = 30) {\n    let tileY = tileBottom - (half + tileRight - gameObj.leftSide()) / 2;\n    if (gameObj instanceof Player) {\n      if (gameObj.onGround) {\n        if (\n          gameObj.bottomSide() > tileBottom &&\n          gameObj.oldY + gameObj.height < tileBottom\n        ) {\n          gameObj.y = tileBottom - gameObj.height - 0.05;\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          return;\n        }\n        gameObj.y = tileY - gameObj.height - 0.05;\n      } else if (!gameObj.onGround) {\n        if (\n          gameObj.leftSide() < tileRight &&\n          gameObj.bottomSide() > tileY &&\n          gameObj.oldY + gameObj.height < tileY\n        ) {\n          gameObj.onGround = true;\n          gameObj.jumpCount = 2;\n          gameObj.y = tileY - gameObj.height - 0.05;\n        }\n      }\n    }\n  }\n\n  collidePlatTop(gameObj, tileTop) {\n    if (\n      gameObj.bottomSide() > tileTop &&\n      gameObj.oldY + gameObj.height < tileTop\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n        //set null\n        return true;\n      }\n      gameObj.velY = 0;\n      gameObj.y = tileTop - gameObj.height - 0.1;\n      if (gameObj instanceof Player) {\n        gameObj.onGround = true;\n        gameObj.jumpCount = 2;\n      }\n      return true;\n    } else {\n      if (gameObj instanceof Player) {\n        gameObj.onGround = false;\n      }\n    }\n    return false;\n  }\n\n  collidePlatBottom(gameObj, tileBottom) {\n    if (\n      gameObj.topSide() < tileBottom &&\n      gameObj.oldY + gameObj.height > tileBottom\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n      }\n      gameObj.y = tileBottom + 0.1;\n      gameObj.velY = 0;\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatRight(gameObj, tileRight) {\n    if (\n      gameObj.leftSide() < tileRight &&\n      gameObj.oldX + gameObj.width > tileRight\n    ) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n      }\n      gameObj.x = tileRight + 0.1;\n      // if (gameObj instanceof Enemy) {\n      //   gameObj.x = -gameObj.x;\n      // }\n      // gameObj.velX = 0;\n\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatLeft(gameObj, tileLeft) {\n    if (gameObj.rightSide() > tileLeft && gameObj.oldX < tileLeft) {\n      if (gameObj instanceof Projectile) {\n        gameObj.setHit();\n      }\n      gameObj.x = tileLeft - gameObj.width - 0.1;\n      // if (!gameObj instanceof Enemy) {\n      //   gameObj.x = -gameObj.x;\n      // }\n      // gameObj.velX = 0;\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatform(gameObject, x, y, colVal) {\n    if (!colVal || !this.collisionPlatformKeys[colVal]) return;\n    this.collisionPlatformKeys[colVal](gameObject, x, y);\n    // switch (colVal) {\n    //   case 1:\n    //     this.collidePlatTop(gameObject, y);\n    //     break;\n    //   case 2:\n    //     if (gameObject.velY > 0) {\n    //       this.collidePlatTop(gameObject, y);\n    //     }\n    //     break;\n    //   case 3:\n    //     if (this.collidePlatTop(gameObject, y)) {\n    //       return;\n    //     } else if (this.collidePlatLeft(gameObject, x)) {\n    //       return;\n    //     } else {\n    //       this.collidePlatRight(gameObject, x + 60);\n    //     }\n    //     break;\n    //   case 4:\n    //     if (this.collidePlatTop(gameObject, y)) {\n    //       return;\n    //     } else if (this.collidePlatRight(gameObject, x + 60)) {\n    //       return;\n    //     } else {\n    //       this.collidePlatLeft(gameObject, x);\n    //       break;\n    //     };\n    //   case 5:\n    //     if (this.collidePlatTop(gameObject, y)) {\n    //       return;\n    //     } else if (this.collidePlatBottom(gameObject, y + 60)) {\n    //       return;\n    //     } else {\n    //       this.collidePlatRight(gameObject, x + 60);\n    //     }\n    //     break;\n    //   case 6:\n    //     if (this.collidePlatTop(gameObject, y)) {\n    //       return;\n    //     } else {\n    //       this.collidePlatBottom(gameObject, y + 60);\n    //     }\n    //     break;\n    //   case 7:\n    //     //thorn\n    //     this.collidePlatBottom(gameObject, y + 10);\n    //     if (gameObject instanceof Player) {\n    //       gameObject.setHit(5);\n    //     }\n\n    //     break;\n    //   case 8:\n    //     if (this.collidePlatTop(gameObject, y)) {\n    //       return;\n    //     } else {\n    //       this.collidePlatRight(gameObject, x + 60);\n    //     }\n    //     break;\n    //   case 9:\n    //     this.collidePlatLeft(gameObject, x);\n    //     break;\n    //   case 10:\n    //     this.collidePlatRight(gameObject, x + 60);\n    //     break;\n    //   case 11:\n    //     //thorn\n    //     if (this.collidePlatLeft(gameObject, x)) {\n    //       if (gameObject instanceof Player) {\n    //         gameObject.setHit(5);\n    //       }\n    //       return;\n    //     } else if (this.collidePlatBottom(gameObject, y + 10)) {\n    //       if (gameObject instanceof Player) {\n    //         gameObject.setHit(5);\n    //       }\n    //       return;\n    //     } else {\n    //       this.collidePlatRight(gameObject, x + 60);\n    //       if (gameObject instanceof Player) {\n    //         gameObject.setHit(5);\n    //       }\n    //     }\n    //     break;\n    // }\n  }\n}\n\n\n\nexport default Collision;\n","import GameObject from \"../GameObject\";\nimport Collision from \"../../util/Collision\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\n\nclass Projectile extends GameObject {\n  constructor(options) {\n    super(options);\n    this.proj = this.loadImage(options.image);\n    this.velX = options.velX;\n    this.velY = options.velY;\n    this.oldX = this.x;\n    this.oldY = this.y;\n    this.dir = options.dir || \"right\";\n    this.damage = options.damage;\n\n    this.frameStartX = options.frameStartX;\n    this.frameStartY = options.frameStartY;\n    this.frameWidth = options.frameWidth;\n    this.frameHeight = options.frameHeight;\n    this.frameNum = options.frameNum;\n\n\n    this.tileSize = 60;\n    \n    this.collider = new Collision();\n    this.isHit = false;\n\n\n\n    this.loadImage = this.loadImage.bind(this);\n    this.getTopLeftPos = this.getTopLeftPos.bind(this);\n    this.getTopRightPos = this.getTopRightPos.bind(this);\n    this.getBottomLeftPos = this.getBottomLeftPos.bind(this);\n    this.getBottomRightPos = this.getBottomRightPos.bind(this);\n    this.setHit = this.setHit.bind(this);\n    this.timeOutHit = this.timeOutHit.bind(this);\n    this.updateProjectile = this.updateProjectile.bind(this);\n    this.drawProjectile = this.drawProjectile.bind(this);\n\n    this.timeOutHit();\n  }\n\n  loadImage(image) {\n    let proj = new Image();\n    proj.src = image;\n    return proj;\n  }\n\n  getTopLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n\n  getTopRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomLeftPos() {\n    let x = Math.floor(this.leftSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomRightPos() {\n    let x = Math.floor(this.rightSide() / this.tileSize);\n    let y = Math.floor(this.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n\n  setHit() {\n    this.isHit = !this.isHit;\n  }\n\n  timeOutHit() {\n    this.hitTimeout = setTimeout(() => {\n      this.setHit();\n    }, 2000);\n  }\n\n\n  platformCheck() {\n    let colVal;\n    let top;\n    let bottom;\n    let right;\n    let left;\n    let cols = 15;\n\n    if (this.dir === \"left\") {\n      [left, top] = this.getTopLeftPos();\n      colVal = this.physicalMap[top * cols + left];\n      this.collider.collidePlatform(\n        this,\n        left * this.tileSize,\n        top * this.tileSize,\n        colVal\n      );\n        \n      [left, bottom] = this.getBottomLeftPos();\n      colVal = this.physicalMap[bottom * cols + left];\n      this.collider.collidePlatform(\n        this,\n        left * this.tileSize,\n        bottom * this.tileSize,\n        colVal\n      );\n    }\n\n    if (this.dir === \"right\") {\n      [right, top] = this.getTopRightPos();\n      colVal = this.physicalMap[top * cols + right];\n      this.collider.collidePlatform(\n        this.player,\n        right * this.tileSize,\n        top * this.tileSize,\n        colVal\n      );\n  \n      [right, bottom] = this.getBottomRightPos();\n      colVal = this.physicalMap[bottom * cols + right];\n\n      this.collider.collidePlatform(\n        this.player,\n        right * this.tileSize,\n        bottom * this.tileSize,\n        colVal\n      );\n\n    }\n\n  }\n\n  updateProjectile() {\n    this.oldX = this.x;\n    this.oldY = this.y;\n\n    this.x += this.velX;\n    this.y += this.velY;\n  }\n\n  drawProjectile(ctx, frameCount) {\n    if (this.hit) return;\n\n    this.updateProjectile();\n    if (this.dir === \"up\") {\n      ctx.scale(1, -1);\n\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * 43 + (((frameCount % this.frameNum) + 1) * 21),\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, -this.y + this.height,\n        this.width, this.height\n      );\n      ctx.scale(1, -1);\n\n\n    } else if (this.dir === \"down\") {\n\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * 43 + (((frameCount % this.frameNum) + 1) * 21),\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n\n\n    } else if (this.dir === \"right\") {\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n\n      ctx.drawImage(\n        this.proj,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x-this.frameWidth, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  static fireball(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 55,\n      height: 16,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n\n      frameStartX: 10,\n      frameStartY: 277,\n      frameWidth: 65,\n      frameHeight: 16,\n      frameNum: 8,\n      image: \"./assets/fireball.png\",\n      damage: 25\n    };\n  }\n\n  static fireballVert(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 16,\n      height: 55,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n\n      frameStartX: 10,\n      frameStartY: 400,\n      frameWidth: 22,\n      frameHeight: 35,\n      frameNum: 8,\n      image: \"./assets/fireball.png\",\n      damage: 25\n    };\n  }\n\n  static helibullet(pos, velX, velY, dir) {\n    return {\n      pos: pos,\n      width: 25,\n      height: 25,\n      velX: velX,\n      velY: velY,\n      dir: dir,\n      frameStartX: 420,\n      frameStartY: 330,\n      frameWidth: 15,\n      frameHeight: 15,\n      frameNum: 1,\n      image: \"./assets/footEn.png\",\n      damage: 10\n    };\n  }\n}\n\nexport default Projectile;\n\n// const fireball = {\n//   name: \"fireball\"\n// }\n\n\n// };","import GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Enemy extends GameObject {\n  constructor(options) {\n    super(options);\n    this.velX = (options.velX) ? options.velX : 0;\n    this.velY = (options.velY) ? options.velY : 0;\n    this.enemy = this.loadImage(options.image);\n    this.frameNum = options.frameNum;\n    this.dir = options.dir || \"right\";\n    this.frameStartX = 68;\n    this.frameStartY = 290;\n    this.frameWidth = 116;\n    this.frameHeight = 80;\n    this.projectiles = {};\n    this.dying = false;\n    this.dead = false;\n    this.health = options.health;\n    this.damage = options.damage;\n    this.isHit = false;\n\n\n    this.setHit = this.setHit.bind(this);\n    this.setDying = this.setDying.bind(this);\n\n    this.loadImage = this.loadImage.bind(this);\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n\n    // this.callAttack();\n  }\n\n  loadImage(image) {\n    let enemy = new Image();\n    enemy.src = image;\n    return enemy;\n  }\n\n  setHit(damage = 10) {\n    console.log(this.health);\n    if (!this.isHit) {\n      this.isHit = true;\n      this.hitCooldown = setTimeout(() => {\n        this.isHit = false;\n      }, 500);\n      this.health -= damage;\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      setTimeout(() => {\n        this.dead = true;\n      }, 1000);\n    }\n  }\n\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    if (this.dir === \"left\") {\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x-this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n    \n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + 30,\n          this.bottomSide() - 23],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - 40,\n          this.bottomSide() - 23],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n\n\n\n  ////////CPU\n  callAttack() {\n    this.attackInterval = setInterval(() => {\n      this.shootProj();\n\n    }, 200);\n  }\n\n\n\n\n\n\n  move(canvas) {\n    this.oldX = this.x;\n    this.x += this.velX;\n\n\n    if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n      this.velX *= -1;\n      this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n    } \n  }\n\n  //////\n  \n\n\n  static helicopter(pos) {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/footEn.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 200,\n      height: 125,\n      velX: 3,\n      dir: \"right\",\n      health: 100,\n      damage: 10\n    };\n  }\n\n  hitBox(obj1, obj2) {\n\n    if (obj1.y < obj2.y + obj2.height && obj1.y > obj2.y + (obj2.height / 2)) {\n      if ((obj2.dir === \"right\" && obj1.x < obj2.x + obj2.width && obj1.x + obj1.width > obj2.x + (obj2.width / 3)) ||\n        (obj2.dir === \"left\" && obj1.x < obj2.x + (obj2.width * (2 / 3)) && obj1.x + obj1.width > obj2.x)){\n        return true;\n      }\n\n    } else if ((obj1.y < (obj2.height / 2) && obj1.y > obj2.y) || obj1.y + obj1.height > obj2.y) {\n      if (obj1.x < obj2.x + obj2.width && obj1.x + obj1.width > obj2.x) {\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nexport default Enemy;\n","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Helicopter extends Enemy {\n  constructor(options) {\n    super(options);\n    this.velX = options.velX || 3;\n    this.velY = 0;\n    this.image = options.image || \"./assets/footEn.png\";\n    this.enemy = this.loadImage(this.image);\n    this.frameNum = options.frameNum || 3;\n    this.frameStartX = options.frameStartX || 68;\n    this.frameStartY = options.frameStartY || 290;\n    this.frameWidth = options.frameWidth || 116;\n    this.frameHeight = options.frameHeight || 80;\n    this.projectiles = {};\n    this.bounds = options.bounds;\n\n    this.loadImage = this.loadImage.bind(this);\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n    this.callAttack();\n  }\n\n\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    if (this.dir === \"left\") {\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x - this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n\n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + (this.width * 0.15),\n            this.bottomSide() - (this.height * 0.184)],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - (this.width * 0.2),\n            this.bottomSide() - (this.height * 0.184)],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      setTimeout(() => {\n        this.dead = true;\n      }, 300);\n    }\n  }\n\n  ////////CPU\n  callAttack() {\n    this.attackInterval = setInterval(() => {\n\n      this.shootProj();\n\n    }, 500);\n  }\n\n  move(canvas) {\n    this.oldX = this.x;\n    this.x += this.velX;\n\n    if (this.bounds) {\n      if ((this.x + (this.width / 2)) < this.bounds[0] || this.x + (this.width / 2) > this.bounds[1]) {\n        this.velX *= -1;\n        this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n      }\n    } else {\n      if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n        this.velX *= -1;\n        this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n      }\n\n    }\n\n  }\n\n  //////\n\n\n\n  static hel1(pos, bounds, dir = \"right\", velY) {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/footEn.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 200,\n      height: 125,\n      health: 100,\n      velX: (dir === \"left\") ? -3 : 3,\n      velY: velY || 0,\n      dir: dir,\n      bounds: bounds\n    };\n  }\n  \n  static hel2(pos, bounds, dir = \"right\") {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/footEn.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 150,\n      height: 85,\n      health: 100,\n      velX: (dir === \"left\") ? -3 : 3,\n      dir: dir,\n      bounds: bounds\n    };\n  }\n\n}\n\nexport default Helicopter;\n","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Flower extends Enemy {\n  constructor(options) {\n    super(options);\n    this.velX = options.velX || 0;\n    this.velY = 0;\n    this.image = options.image || \"./assets/footEn.png\";\n    this.enemy = this.loadImage(this.image);\n    this.frameNum = options.frameNum || 4;\n    this.frameStartX = 10;\n    this.frameStartY = 265;\n    this.frameWidth = options.frameWidth || 117;\n    this.frameHeight = options.frameHeight || 107;\n    this.active = true;\n    this.opening = false;\n    \n    this.projectiles = {};\n\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n\n  }\n\n  isActive() {\n\n  }\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    if (this.active) {\n      let count = Math.floor(frameCount / 2.5) % this.frameNum;\n      let x = (count > 0) ? 20 : this.frameStartX;\n\n\n      ctx.drawImage(\n        this.enemy,\n        // (Math.floor(frameCount / 2) % this.frameNum) * this.frameWidth + this.frameStartX,\n        (count % this.frameNum) * this.frameWidth + x,\n        // (0) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x - this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n\n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + 30,\n          this.bottomSide() - 23],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - 40,\n          this.bottomSide() - 23],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      setTimeout(() => {\n        this.dead = true;\n      }, 300);\n    }\n  }\n\n  ////////CPU\n  // callAttack() {\n  //   this.attackInterval = setInterval(() => {\n\n  //     this.shootProj();\n\n  //   }, 500);\n  // }\n\n  move(canvas) {\n    this.oldX = this.x;\n    this.x += this.velX;\n\n\n    if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n      this.velX *= -1;\n      this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n    }\n  }\n\n  //////\n\n\n\n  static flow1(pos, dir = \"right\") {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/plant.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 54,\n      height: 54,\n      health: 50,\n      velX: 0,\n      dir: dir\n    };\n  }\n  static flow2(pos, dir = \"right\") {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/plant.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 84,\n      height: 84,\n      health: 50,\n      velX: 0,\n      dir: dir\n    };\n  }\n  static flow3(pos, dir = \"right\") {\n    return {\n      name: \"helicopter\",\n      image: \"./assets/plant.png\",\n      frameNum: 3,\n      pos: pos,\n      width: 110,\n      height: 110,\n      health: 100,\n      velX: 0,\n      dir: dir\n    };\n  }\n\n}\n\nexport default Flower;\n","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass Vinehead extends Enemy {\n  constructor(options) {\n    super(options);\n    this.player = options.player;\n    this.velX = options.velX || 0;\n    this.velY = 0;\n    this.image = options.image || \"./assets/vinehead.png\";\n    this.enemy = this.loadImage(this.image);\n    this.frameNum = options.frameNum || 8;\n    this.frameStartX = 0;\n    this.frameStartY = 0;\n    this.frameWidth = options.frameWidth || 57;\n    this.frameHeight = options.frameHeight || 87;\n    this.active = true;\n    this.opening = false;\n    this.projectiles = {};\n    this.playerCheckTimeout = \"\";\n    this.damage = 20;\n\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    // this.setPlayerCheckInterval = this.setPlayerCheckInterval.bind();\n    this.checkPlayerPos = this.checkPlayerPos.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n\n\n  }\n\n  checkPlayerPos(x, y, homing) {\n    if (y > this.y) {\n      this.velY = 1;\n    } else {\n      this.velY = -1;\n    }\n\n    if ((y > this.y && y < this.y + this.height) && (x > this.x || x < this.x) ) {\n      this.velX = (this.dir === \"left\") ? -5 : 5;\n    } else {\n      this.velX = (this.dir === \"left\") ? -1 : 1;\n    }\n\n    if (x > this.x && this.dir === \"left\") {\n      // clearTimeout(this.playerCheckTimeout);\n      this.playerCheckTimeout = setTimeout(() => {\n        this.velX = 1;\n        this.dir = \"right\";\n      }, 1000);\n    } else if (x < this.x && this.dir === \"right\") {\n      // clearTimeout(this.playerCheckTimeout);\n      this.playerCheckTimeout = setTimeout(() => {\n        this.velX = -1;\n        this.dir = \"left\";\n\n      }, 1000);\n      \n    } else if ((x > this.x && this.dir === \"right\") || (x < this.x && this.dir === \"left\")) {\n      clearTimeout(this.playerCheckTimeout);\n    }\n  }\n\n  setPlayerCheckInterval(player) {\n    // debugger\n    this.playerCheckInterval = setInterval(() => {\n      this.checkPlayerPos(player);\n    }, 2);\n  }\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    if (this.dir === \"right\") {\n      let count = Math.floor(frameCount / 2.5) % this.frameNum;\n\n\n      ctx.drawImage(\n        this.enemy,\n        (Math.floor(frameCount / 1.5) % this.frameNum) * this.frameWidth,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        this.frameStartY,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x - this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n\n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + 30,\n          this.bottomSide() - 23],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - 40,\n          this.bottomSide() - 23],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      setTimeout(() => {\n        this.dead = true;\n      }, 300);\n    }\n  }\n\n  ////////CPU\n  // callAttack() {\n  //   this.attackInterval = setInterval(() => {\n\n  //     this.shootProj();\n\n  //   }, 500);\n  // }\n\n  move(canvas, x, y) {\n    this.oldY = this.y;\n    this.oldX = this.x;\n    this.x += this.velX;\n    this.y += this.velY;\n    this.checkPlayerPos(x, y);\n\n    // if ((this.x + (this.width / 2)) < 0 || this.x + (this.width / 2) > canvas.width) {\n    //   this.velX *= -1;\n    //   this.dir = (this.dir === \"right\") ? \"left\" : \"right\";\n    // }\n  }\n\n  //////\n\n\n\n  static vine1(pos, player, dir = \"right\") {\n    \n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 65,\n      height: 95,\n      health: 75,\n      velX: 1,\n      dir: dir,\n      player: player\n    };\n  }\n  static vine2(pos, player, dir = \"right\") {\n    \n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 100,\n      height: 145,\n      health: 120,\n      velX: 1,\n      dir: dir,\n      player: player\n    };\n  }\n  static vine3(pos, player, dir = \"right\") {\n    \n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 35,\n      height: 45,\n      health: 50,\n      velX: 1,\n      dir: dir,\n      player: player\n    };\n  }\n  \n\n}\n\nexport default Vinehead;\n","import Enemy from \"./Enemy\";\n\nimport GameObject from \"../GameObject\";\nimport Projectile from \"../Projectiles/Projectile\";\nimport Player from \"../../Player\";\nimport Vinehead from \"./Vinehead\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\nclass BossVinehead extends Enemy {\n  constructor(options) {\n    super(options);\n    this.player = options.player;\n    this.velX = options.velX || 0;\n    this.velY = 0;\n    this.image = options.image || \"./assets/vinehead.png\";\n    this.enemy = this.loadImage(this.image);\n    this.frameNum = options.frameNum || 8;\n    this.frameStartX = 0;\n    this.frameStartY = 0;\n    this.frameWidth = options.frameWidth || 57;\n    this.frameHeight = options.frameHeight || 87;\n    this.active = true;\n    this.opening = false;\n    this.projectiles = {};\n    this.playerCheckTimeout = \"\";\n    this.damage = 50;\n    this.attacking = false;\n    this.charging = false;\n    this.frameCount = 0;\n\n    this.drawEnemy = this.drawEnemy.bind(this);\n    this.shootProj = this.shootProj.bind(this);\n    // this.setPlayerCheckInterval = this.setPlayerCheckInterval.bind();\n    this.checkPlayerPos = this.checkPlayerPos.bind(this);\n    this.callAttack = this.callAttack.bind(this);\n    this.charge = this.charge.bind(this);\n    this.startFrameCount = this.startFrameCount.bind(this);\n\n    this.startFrameCount();\n  }\n\n  startFrameCount() {\n    this.bossInterval = setInterval(() => {\n      this.frameCount++;\n    }, 1000 / 30);\n\n    this.attackTimeout = setTimeout(() => {\n      this.attack();\n    }, 1000);\n  }\n\n  spawnEnemies() {\n    // if (this.enemies.length < 8) {\n    //   this.enemiesnew Vinehead(Vinehead.vine3([500, 100], this.player));\n    // }\n  }\n\n  attack() {\n    this.attacking = true;\n    this.chargeTimeout = setTimeout(() => {\n      this.charge();\n    }, 2500);\n  }\n\n  charge() {\n    this.charging = true;\n    this.velX = -10;\n  }\n  checkPlayerPos(x, y, homing) {\n\n  }\n\n  setPlayerCheckInterval(player) {\n    this.playerCheckInterval = setInterval(() => {\n      this.checkPlayerPos(player);\n    }, 2);\n  }\n\n  drawEnemy(ctx, frameCount) {\n    this.setDying();\n\n    \n    if ((this.isHit || this.dying) && frameCount % 3 === 0) return;\n\n    let y = ((this.attacking && \n      (this.frameCount % 3 === 0 || this.frameCount % 3 === 1)) ||\n      this.charging) ? 87 : this.frameStartY;\n    if (this.dir === \"right\") {\n      let count = Math.floor(frameCount / 2.5) % this.frameNum;\n      ctx.drawImage(\n        this.enemy,\n        (Math.floor(this.frameCount / 1.5) % this.frameNum) * this.frameWidth,\n        y,\n        this.frameWidth,\n        this.frameHeight,\n        this.x, this.y,\n        this.width, this.height\n      );\n    } else {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        this.enemy,\n        (this.frameCount % this.frameNum) * this.frameWidth + this.frameStartX,\n        y,\n        this.frameWidth,\n        this.frameHeight,\n        -this.x - this.width, this.y,\n        this.width, this.height\n      );\n      ctx.scale(-1, 1);\n\n    }\n  }\n\n  shootProj() {\n\n    if (Object.keys(this.projectiles).length === 3) return;\n\n    let key;\n    for (let i = 1; i <= 3; i++) {\n      if (!this.projectiles[i]) {\n        key = i;\n        break;\n      }\n    }\n\n    if (this.dir === \"left\") {\n\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.leftSide() + 30,\n          this.bottomSide() - 23],\n          -9, 7, \"left\")\n      );\n    } else {\n      this.projectiles[key] = new Projectile(\n        Projectile.helibullet(\n          [this.rightSide() - 40,\n          this.bottomSide() - 23],\n          9, 7, \"right\")\n      );\n\n    }\n  }\n\n  setDying() {\n    if (this.health <= 0) {\n      this.dying = true;\n      this.damage = 0;\n      this.velX = 0;\n      this.velY = 0;\n      clearInterval(this.attackInterval);\n      setTimeout(() => {\n        this.dead = true;\n      }, 300);\n    }\n  }\n\n  ////////CPU\n\n  \n  backUp() {\n    this.charging = false;\n    this.velX = 2;\n  }\n\n  move(canvas, x, y) {\n    this.oldX = this.x;\n    this.x += this.velX;\n    if (this.x < 160) {\n      this.x = 160;\n      // this.attacking = false;\n      this.backUp();\n    } else if (this.x > 650) {\n      this.velX = 0;\n      this.attacking = false;\n      this.x = 650;\n\n      this.attackTimeout = setTimeout(() => {\n        this.attack();\n      }, 10000);\n    }\n  }\n\n  //////\n\n\n\n  static boss1(pos, player, dir = \"right\") {\n\n    return {\n      name: \"vinehead\",\n      image: \"./assets/vinehead.png\",\n      frameNum: 8,\n      pos: pos,\n      width: 260,\n      height: 370,\n      health: 1200,\n      velX: 0,\n      dir: \"left\",\n      player: player\n    };\n  }\n\n\n\n}\n\nexport default BossVinehead;\n","import Tile from \"../Objects/Platforms/Tile\";\nimport Music from \"../util/Music\";\nimport Enemy from \"../Objects/Enemies/Enemy\";\nimport Helicopter from \"../Objects/Enemies/Helicopter\";\nimport Flower from \"../Objects/Enemies/Flower\";\nimport Vinehead from \"../Objects/Enemies/Vinehead\";\nimport BossVinehead from \"../Objects/Enemies/BossVinehead\";\n\nclass Level {\n  constructor(options) {\n    this.ctx = options.ctx;\n    this.player = options.player;\n    this.mapKeys = options.mapKeys;\n    this.screen = 1;\n    this.renderMap = options.renderMap || this.mapKeys[this.screen].renderMap;\n    this.physicalMap = options.physicalMap || this.mapKeys[this.screen].physicalMap;\n    this.cols = 15;\n    this.rows = 10;\n    this.tileSize = 60;\n    this.tileMap = this.loadImage();\n    this.mapTileSize = this.tileMap.width / this.rows;\n    this.enemies = this.mapKeys[this.screen].enemies;\n    this.enemyCount = 1;\n    this.theme = new Music({src: this.mapKeys[this.screen].theme});\n    \n    this.levelLayers = this.loadImages(this.mapKeys[this.screen].levelLayers);\n    \n\n    this.getTile = this.getTile.bind(this);\n    this.getLeft = this.getLeft.bind(this);\n    this.getRight = this.getRight.bind(this);\n    this.getTop = this.getTop.bind(this);\n    this.getBottom = this.getBottom.bind(this);\n    this.drawLevel = this.drawLevel.bind(this);\n    this.loadImage = this.loadImage.bind(this);\n    this.loadLevel = this.loadLevel.bind(this);\n    this.enemiesInterval = this.enemiesInterval.bind(this);\n    this.spawnEnemies = this.spawnEnemies.bind(this);\n\n    this.loadImages = this.loadImages.bind(this);\n    this.renderBackground = this.renderBackground.bind(this);\n    this.renderMid = this.renderMid.bind(this);\n    this.renderFront = this.renderFront.bind(this);\n    // this.loadImage(this.ctx);\n\n    this.enemiesInterval();\n\n  }\n\n//15 x 10\n\n  loadImage() {\n    let tileMap = new Image();\n    tileMap.src = \"./assets/tileGen.png\";\n    return tileMap;\n  }\n\n  loadImages(images) {\n    let background = new Image();\n    background.src = images.background;\n\n    let mid = new Image();\n    mid.src = images.mid;\n\n    let front = new Image();\n    front.src = images.front;\n\n    return {\n      background,\n      mid,\n      front\n    }\n  }\n\n  renderBackground(ctx, canvas) {\n\n      ctx.drawImage(\n        this.levelLayers.background,\n        0,\n        0,\n        900,\n        600,\n        0,\n        0,\n        canvas.width,\n        canvas.height\n      );\n  }\n\n  renderMid(ctx, canvas) {\n\n    ctx.drawImage(\n      this.levelLayers.mid,\n      0,\n      0,\n      900,\n      600,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n  }\n\n  renderFront(ctx, canvas) {\n\n    ctx.drawImage(\n      this.levelLayers.front,\n      0,\n      0,\n      900,\n      600,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n  }\n\n  getTile(col, row) {\n    return this.renderMap[row * this.cols + col];\n  }\n\n  getLeft(col, row) {\n    return Math.floor(col * this.tileSize);\n  }\n  getRight(col, row) {\n    return Math.floor((col * this.tileSize) + this.tileSize);\n  }\n  getTop(col, row) {\n    return Math.floor(row * this.tileSize - this.tileSize);\n  }\n  getBottom(col, row) {\n    return Math.floor(row * this.tileSize);\n  }\n\n  enemiesInterval() {\n    if (this.screen < 6) return;\n    this.spawnInterval = setInterval(() => {\n      if (!this.enemies[1]) {\n        clearInterval(this.spawnInterval);\n      }\n      this.spawnEnemies();\n    }, 8000);\n  }\n\n  spawnEnemies() {\n\n    if (Object.keys(this.enemies).length >= 8) return;\n    this.enemyCount++;\n    let key = this.enemyCount;\n    let y = Math.random() * 600;\n    this.enemies[key] = new Vinehead(Vinehead.vine2([890, y], this.player, \"left\"));\n  }\n\n  loadLevel(num) {\n    // if (this.screen + num === 0) return;\n    this.screen += num;\n\n    this.renderMap = this.mapKeys[this.screen].renderMap;\n    this.physicalMap = this.mapKeys[this.screen].physicalMap;\n    this.enemies = this.mapKeys[this.screen].enemies;\n    if (this.mapKeys[this.screen].levelLayers) {\n\n      this.levelLayers = this.loadImages(this.mapKeys[this.screen].levelLayers);\n    }\n    if (this.mapKeys[this.screen].theme) {\n      this.theme.pause();\n      this.theme = new Music({ src: this.mapKeys[this.screen].theme });\n      this.theme.play();\n    }\n    this.enemiesInterval();\n\n  }\n\n  drawLevel(ctx) {\n\n    for (let c = 0; c < this.cols; c++) {\n      for (let r = 0; r < this.rows; r++) {\n        let tile = this.getTile(c, r);\n        let tileCut = (tile % 8 === 0) ? 8 : (tile % 8);\n\n        if (tile > 0) {\n\n          ctx.drawImage(\n            this.tileMap,\n            (tileCut - 1) * (this.tileMap.width/ 8),\n            (Math.floor(tile / 8) * (this.tileMap.width / 8)),\n            64,\n            64,\n            c * this.tileSize,\n            r * this.tileSize,\n            this.tileSize,\n            this.tileSize\n          );\n        }\n      }\n    }\n  }\n\n\n  static level1() {\n    return {\n      1: {\n        renderMap: [\n          9,  0,  0,  0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0, 38, 39,  0,  0,  0,  0,  0,\n          0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 42,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         28,  0,  0,  0,  0, 22, 23, 23, 63,  0,  0,  0,  0,  0,  0,\n          1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0, 29, 29, 29, 29,\n          9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3, 27, 27, 27,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0, 17,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0, 17,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         16, 16, 16,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0, 12,  4,  4,  4, 13,  0,  0,  0,\n          1,  2, 19,  0,  0,  0,  0, 12,  0,  0,  0, 13,  0,  0,  0,\n          0,  0,  0, 19,  0,  0,  0, 12,  0,  0,  0, 13,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        // physicalMap: [\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,\n        //   6,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n        //   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        // ],\n        enemies: {\n          // 1: new Helicopter(Helicopter.hel1([100, 100])),\n          // 2: new Helicopter(Helicopter.hel1([570, 50], \"left\")),\n          // 3: new Flower(Flower.flow1([600, 500])),\n          // 4: new Flower(Flower.flow1([400, 320])),\n          // 5: new Flower(Flower.flow1([240, 500])),\n \n        },\n        theme: \"./assets/Sound/ff9_stirring_forest.mp3\",\n        levelLayers: {\n          background: \"./assets/lv1_back.png\",\n          mid: \"./assets/lv1_mid.png\",\n          front:  \"./assets/lv1_front.png\"\n        }\n      },\n      2: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0, 29, 29, 29,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0, 53, 54,  1,  1,  2,  0,  0,  0,  0,  0,  0,\n          0,  0,  0, 57, 58,  9, 16, 16, 16,  0,  0, 29, 29, 29, 29,\n          0, 53, 54,  5,  5,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n          1,  5,  5,  5, 11,  0,  0,  0,  0,  0,  0,  5,  5,  5,  5\n        ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 26,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 26,  0,\n          0,  0,  0,  0,  0,  0,  0,  4, 28,  0,  0,  0,  0, 26,  0,\n          0,  0,  0,  0,  0,  0,  0,  9, 25,  0,  0,  0,  0, 26,  0,\n          0,  0,  0,  0,  0,  0,  0,  9, 27, 28,  0,  0,  0, 26,  0,\n          0,  0,  3,  8,  0,  0, 20,  9, 10,  0,  0,  0,  0, 26, 16,\n          0,  0,  9, 14,  0,  0,  9, 10, 10,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  9, 10,  0,  0,  0, 30, 29, 29, 29,\n          0,  0,  0,  0,  0, 18,  0, 10,  0,  0,  0,  0,  9,  0,  0,\n          1,  1,  1,  1,  1,  0,  0, 10,  0,  0,  0,  0,  9,  0,  0\n        ],\n        levelLayers: {\n          background: \"./assets/lvl2_back.png\",\n          mid: \"./assets/lvl2_mid.png\",\n          front: \"./assets/lvl2_front.png\"\n        },\n        // physicalMap: [\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,\n        //   6,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n        //   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        // ],\n        enemies: {\n          1: new Helicopter(Helicopter.hel2([10, 10], [0, 700])),\n          2: new Helicopter(Helicopter.hel2([570, 0], [0, 700], \"left\")),\n          3: new Helicopter(Helicopter.hel2([10, 140], [0, 320], \"left\")),\n          // 3: new Flower(Flower.flow2([120, 200])),\n          // 4: new Flower(Flower.flow1([400, 320])),\n          // 5: new Flower(Flower.flow1([240, 500])),\n \n        }\n      },\n      3: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0, 17,  0,  0,  0, 17,  0,  0,  0,  0,  0,\n          0,  0,  0, 17,  0, 16,  0, 17,  0, 16,  0,  3,  1,  1,  1,\n          0,  0,  0, 16,  0,  0,  0, 16,  0,  0,  0,  4, 50,  5,  5,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  5,  5,  5,\n          1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0, 55,  5, 40,  5,\n          5,  5,  5,  5,  5,  0,  0,  0,  0,  0,  0,  0,  5,  5,  5\n        ],\n        // renderMap: [\n        //   0,  0,  0,  0, 38, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0, 38, 39,  0,  0, 42, 41, 39,\n        //  41, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        //   0,  0,  0,  0,  0, 17,  0,  0,  0, 17,  0,  0,  0,  0,  0,\n        //   0,  0,  0, 17,  0, 16,  0, 17,  0, 16,  0,  3,  1,  1,  1,\n        //   0,  0,  0, 16,  0,  0,  0, 16,  0,  0,  0,  6,  6,  6,  6,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6,\n        //   1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6,\n        //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6\n        // ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  5,  0,  0,  0,  5,  0,  0,  0,  0,  0,\n          0,  0,  0,  5,  0,  7,  0,  5,  0,  7,  0,  3,  1,  1,  1,\n          0,  0,  0,  7,  0,  0,  0,  7,  0,  0,  0,  6,  6,  6,  6,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6,\n          1,  1,  4,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6,\n          0,  0, 10,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6\n        ],\n        enemies: {\n          1: new Helicopter(Helicopter.hel1([100, 25])),\n          3: new Flower(Flower.flow2([290, 190])),\n          5: new Vinehead(Vinehead.vine1([500, 100], this.player)),\n          6: new Vinehead(Vinehead.vine3([800, 20], this.player)),\n\n          4: new Flower(Flower.flow2([530, 190])),\n\n        }\n      },\n      4: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  0,  0,  0,  3,  5,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4, 28,\n          1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n          9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 16, 16, 16, 16,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  5,  5,  5,  5,  5,  0,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0, 38, 39,  0,  0,  0, 42, 41, 39,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         38, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  8,  0,  0,  0,  2,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n          9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  7,  7,  7,  7,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  9,  0,  0,  0, 10,  0,  1,  1,  1,  1\n        ],\n        enemies: {\n          1: new Helicopter(Helicopter.hel2([500, 0])),\n          // // 3: new Flower(Flower.flow2([290, 190])),\n          4: new Vinehead(Vinehead.vine3([500, 100], this.player)),\n          5: new Vinehead(Vinehead.vine3([300, 450], this.player)),\n          6: new Vinehead(Vinehead.vine3([850, 500], this.player)),\n          7: new Vinehead(Vinehead.vine1([800, -20], this.player)),\n\n          // 4: new Flower(Flower.flow2([530, 190])),\n\n        }\n      },\n      5: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         29, 29, 29, 29, 29, 29, 29,  0, 29, 29, 29, 29, 29, 29, 29,\n          1,  1,  1,  1,  1,  1,  2,  0,  3,  1,  1,  1,  1,  1,  1,\n          5,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 13,  5,  5,\n         28,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4, 28,\n          1,  1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n         16, 16, 16,  0,  0,  0,  0,  0,  0,  0,  0,  5,  5,  5,  5,\n          0,  0,  0,  0,  0, 29, 29, 29, 29, 29,  3,  1,  1,  1,  1,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  2,  5,  5,  5,  5,  5,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  0,  1,  1,  1,  1,  1,  1,  1,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,\n          7,  7,  7,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,  1,\n          0,  0,  0,  0,  0,  3,  1,  1,  1,  1,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        enemies: {\n          1: new Vinehead(Vinehead.vine3([10, 530], this.player)),\n          2: new Vinehead(Vinehead.vine3([830, 0], this.player)),\n          3: new Vinehead(Vinehead.vine2([600, 600], this.player)),\n          4: new Vinehead(Vinehead.vine1([500, 100], this.player)),\n          5: new Vinehead(Vinehead.vine2([200, 450], this.player)),\n          6: new Vinehead(Vinehead.vine2([850, 500], this.player)),\n          7: new Vinehead(Vinehead.vine1([800, -20], this.player)),\n        }\n      },\n      6: {\n        renderMap: [\n          0,  0,  0,  0,  0,  0,  0, 13,  5,  5,  5, 49,  5,  5,  5,\n          0,  0,  0,  0,  0,  0,  0,  0, 16, 16, 16, 16, 16, 16, 16,\n          2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         28,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          3,  1,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n         28,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          5, 29, 29, 29,  0, 29, 29,  0, 47, 47, 47, 47, 47, 47, 47,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        physicalMap: [\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,\n          1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n        ],\n        enemies: {\n          1: new BossVinehead(BossVinehead.boss1([650, 120], this.player))\n        },\n        theme: \"./assets/Sound/dk3_boss_boogie.mp3\"\n      }\n    };\n  }\n  // static level2() {\n  //   return {\n  //     1: {\n  //       renderMap: [\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0, 38, 39,  0,  0,  0,  0,  0,\n  //         0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6\n  //       ],\n  //       physicalMap: [\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  1,  1,\n  //         1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1\n  //       ],\n  //       enemies: {\n  //         1: new Helicopter(Helicopter.hel1([100, 100])),\n  //         2: new Helicopter(Helicopter.hel1([570, 50], \"left\")),\n  //         3: new Flower(Flower.flow1([600, 500])),\n  //         4: new Flower(Flower.flow1([400, 320])),\n  //         5: new Flower(Flower.flow1([240, 500])),\n  //       }\n  //     }\n  //   };\n  // }\n\n}\n\nexport default Level;\n\n\n// [\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0, 38, 39,  0,  0,  0,  0,  0,\n//           0, 42, 41, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1,  1,  1,\n//           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  6,  6\n//         ],","class GameHUD {\n  constructor(options) {\n    // this.health = options.health;\n    // this.name = name;\n    this.fire = this.loadImage();\n    \n\n    this.drawHealth = this.drawHealth.bind(this);\n    this.loadImage = this.loadImage.bind(this);\n    this.drawHUD = this.drawHUD.bind(this);\n    this.drawAmmo = this.drawAmmo.bind(this);\n  }\n\n  loadImage() {\n    let img = new Image();\n    img.src = \"./assets/fireball.png\";\n    return img;\n  }\n\n  drawHUD(canvas, ctx, player, frameCount) {\n    ctx.beginPath();\n    ctx.rect(0, (canvas.height - 55), canvas.width, 55);\n    ctx.fillStyle = \"black\";\n    ctx.fill();\n    ctx.closePath();\n\n    this.drawHealth(canvas, ctx, player);\n    this.drawAmmo(canvas, ctx, player, frameCount);\n  }\n\n\n  drawHealth(canvas, ctx, player) {\n\n    let healthMeter = ((canvas.width / 2) * (player.health / 200));\n\n    ctx.beginPath();\n    ctx.rect(20, (canvas.height - 40), (canvas.width / 2), 25);\n    ctx.fillStyle = \"rgba(255, 255, 255, .1)\";\n    ctx.fill();\n    ctx.closePath();\n\n    ctx.beginPath();\n    ctx.rect(20, (canvas.height - 40), (healthMeter), 25);\n    ctx.fillStyle = \"red\";\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  drawAmmo(canvas, ctx, player, frameCount) {\n    // let healthMeter = ((canvas.width - ) * (player.health / 200));\n    let fromRight = canvas.width - 50;\n    ctx.beginPath();\n    ctx.arc(fromRight, canvas.height - 24, 5, 0, 2 * Math.PI, false);\n    ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n    ctx.fill();\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n    ctx.stroke();\n    ctx.closePath();\n\n    ctx.beginPath();\n    ctx.arc(canvas.width - 100, canvas.height - 24, 5, 0, 2 * Math.PI, false);\n    ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n    ctx.fill();\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n    ctx.stroke();\n    ctx.closePath();\n\n    ctx.beginPath();\n    ctx.arc(canvas.width - 150, canvas.height - 24, 5, 0, 2 * Math.PI, false);\n    ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n    ctx.fill();\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n    ctx.stroke();\n    ctx.closePath();\n\n\n    switch (Object.keys(player.fireballs).length) {\n      case 0: \n        ctx.drawImage(\n          this.fire,\n          (frameCount % 8) * 43 + (((frameCount % 8) + 1) * 21),\n          400,\n          22,\n          35,\n          canvas.width - 170, canvas.height - 50,\n          40, 40\n        );\n      case 1:\n        ctx.drawImage(\n          this.fire,\n          (frameCount % 8) * 43 + (((frameCount % 8) + 1) * 21),\n          400,\n          22,\n          35,\n          canvas.width - 120, canvas.height - 50,\n          40, 40\n        );\n      case 2:\n        ctx.drawImage(\n          this.fire,\n          (frameCount % 8) * 43 + (((frameCount % 8) + 1) * 21),\n          400,\n          22,\n          35,\n          canvas.width - 70, canvas.height - 50,\n          40, 40\n        );\n      default:\n        break;\n\n    }\n\n\n  }\n\n\n}\n\nexport default GameHUD;","import Player from \"./Player\";\nimport Level from \"./Levels/Level\";\nimport Tile from \"./Objects/Platforms/Tile\";\nimport Collision from \"./util/Collision\";\nimport Controller from \"./util/Controller\";\nimport Enemy from \"./Objects/Enemies/Enemy\";\nimport Helicopter from \"./Objects/Enemies/Helicopter\";\nimport Flower from \"./Objects/Enemies/Flower\";\nimport GameHUD from \"./GameHUD\";\n\nconst CONSTANTS = {\n  GRAVITY: 0.8,\n  FRICTION: 2.5,\n  MAX_VEL: 50\n};\n\n\nclass Game {\n  constructor(canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.player = new Player(this.ctx, this.canvas);\n    this.controller = new Controller(this.player);\n    this.level = new Level({ \n      ctx: ctx,\n      mapKeys: Level.level1(),\n      player: this.player\n    });\n    // this.physicalMap = this.level.physicalMap;\n    this.tileSize = this.level.tileSize;\n    this.collider = new Collision();\n    this.HUD = new GameHUD();\n    this.frameCount = 0;\n    this.enemies = this.level.enemies;\n    this.gameOver = false;\n    this.embers = new Image();\n    this.embers.src = \"./assets/embers.jpg\";\n    // this.getPlayerTilePos = this.getPlayerTilePos.bind(this);\n\n    this.getTopLeftPos = this.getTopLeftPos.bind(this);\n    this.getTopRightPos = this.getTopRightPos.bind(this);\n    this.getBottomLeftPos = this.getBottomLeftPos.bind(this);\n    this.getBottomRightPos = this.getBottomRightPos.bind(this);\n    this.playerPlatformCheck = this.playerPlatformCheck.bind(this);\n    this.playerUpdate = this.playerUpdate.bind(this);\n    this.projectilePlatformCheck = this.projectilePlatformCheck.bind(this);\n    this.renderFireballs = this.renderFireballs.bind(this);\n    this.renderEnemies = this.renderEnemies.bind(this);\n    this.renderEnemyProjectiles = this.renderEnemyProjectiles.bind(this);\n    this.startFrameCount = this.startFrameCount.bind(this);\n    this.runGame = this.runGame.bind(this);\n    this.isGameOver = this.isGameOver.bind(this);\n    this.win = this.win.bind(this);\n    this.enemiesCleared = this.enemiesCleared.bind(this);\n    this.loadLevel = this.loadLevel.bind(this);\n\n    this.enemyCount = Object.keys(this.enemies).length;\n    this.cleared = false;\n\n    this.startFrameCount();\n  }\n\n  startFrameCount() {\n    this.frameInterval = setInterval(() => {\n      this.frameCount++;\n    }, (1000 / 30));\n  }\n\n  getTopLeftPos() {\n    let x = Math.floor(this.player.leftSide() / this.tileSize);\n    let y = Math.floor(this.player.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getTopRightPos() {\n    let x = Math.floor(this.player.rightSide() / this.tileSize);\n    let y = Math.floor(this.player.topSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomLeftPos() {\n    let x = Math.floor(this.player.leftSide() / this.tileSize);\n    let y = Math.floor(this.player.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n  getBottomRightPos() {\n    let x = Math.floor(this.player.rightSide() / this.tileSize);\n    let y = Math.floor(this.player.bottomSide() / this.tileSize);\n    return [x, y];\n  }\n\n\n  enemiesCleared() {\n    if (Object.keys(this.enemies).length === 0) {\n      this.cleared = true;\n      return true;\n    }else {\n      return false;\n    }\n  }\n\n  playerPlatformCheck() {\n    let colVal;\n    let top;\n    let bottom;\n    let right;\n    let left;\n    let cols = 15;\n    let rows = 10;\n    let floorCount = 0;\n    let physMap = this.level.physicalMap;\n\n    [left, top] = this.getTopLeftPos();\n    colVal = physMap[top * cols + left];\n    this.collider.collidePlatform(\n      this.player,\n      left * this.tileSize,\n      top * this.tileSize,\n      colVal    \n    );\n\n    [right, top] = this.getTopRightPos();\n    colVal = physMap[top * cols + right];\n    this.collider.collidePlatform(\n      this.player,\n      right * this.tileSize,\n      top * this.tileSize,\n      colVal    \n    );\n\n    [left, bottom] = this.getBottomLeftPos();\n    colVal = physMap[bottom * cols + left];\n    (colVal === 0) ? floorCount++ : \"\";\n    this.collider.collidePlatform(\n      this.player,\n      left * this.tileSize,\n      bottom * this.tileSize,\n      colVal    \n    );\n\n\n    [right, bottom] = this.getBottomRightPos();\n    colVal = physMap[bottom * cols + right];\n    (colVal === 0) ? floorCount++ : \"\";\n    if (floorCount === 2) {\n      this.player.onGround = false;\n      // if (this.player.jumpCount === 2) this.player.jumpCount -=;\n    }\n    this.collider.collidePlatform(\n      this.player,\n      right * this.tileSize,\n      bottom * this.tileSize,\n      colVal\n    );\n  }\n\n\n  projectilePlatformCheck(projectile) {\n    let colVal;\n    let top;\n    let bottom;\n    let right;\n    let left;\n    let cols = 15;\n    let physMap = this.level.physicalMap;\n\n    if (projectile.dir === \"left\") {\n      [left, top] = projectile.getTopLeftPos();\n      colVal = physMap[top * cols + left];\n      this.collider.collidePlatform(\n        projectile,\n        left * this.tileSize,\n        top * this.tileSize,\n        colVal\n      );\n\n      [left, bottom] = projectile.getBottomLeftPos();\n      colVal = physMap[bottom * cols + left];\n      this.collider.collidePlatform(\n        projectile,\n        left * this.tileSize,\n        bottom * this.tileSize,\n        colVal\n      );\n    }\n\n    if (projectile.dir === \"right\") {\n      [right, top] = projectile.getTopRightPos();\n      colVal = physMap[top * cols + right];\n      this.collider.collidePlatform(\n        projectile,\n        right * this.tileSize,\n        top * this.tileSize,\n        colVal\n      );\n\n      [right, bottom] = projectile.getBottomRightPos();\n      colVal = physMap[bottom * cols + right];\n\n      this.collider.collidePlatform(\n        projectile,\n        right * this.tileSize,\n        bottom * this.tileSize,\n        colVal\n      );\n\n    }\n\n  }\n  \n\n  playerUpdate() {\n    this.player.setRunning();\n    this.player.isIdle();\n    this.player.setOldPos();\n\n    if (!this.player.idle) {\n      \n      if (this.player.direction === \"right\") {\n        if (this.player.onGround && !this.player.keydown) {\n          this.player.velX < 1 ? (this.player.velX = 0) : (this.player.velX /= CONSTANTS.FRICTION);\n        }\n      } else if (this.player.direction === \"left\") {\n        if (this.player.onGround && !this.player.keydown) {\n          this.player.velX > -1 ? (this.player.velX = 0) : (this.player.velX /= CONSTANTS.FRICTION);\n        }\n      }\n      this.player.x += this.player.velX;\n    }\n\n    this.player.inAir();\n\n    this.collider.collidePlayer(this.player, this.canvas, this.cleared);\n    this.playerPlatformCheck();\n  }\n\n  renderEnemies() {\n    if (this.level.screen === 6) {\n      this.enemyCount = Object.keys(this.level.enemies).length;\n    }\n    \n    if (!this.cleared) {\n      for (let key in this.enemies) {\n        if (this.enemies[key].dying && !this.enemies[key].dead) continue;\n        this.projectilePlatformCheck(this.enemies[key]);\n\n        if (!this.enemies[key].dead) {\n          this.enemies[key].move(this.canvas, this.player.x, this.player.y);\n          this.collider.collideEnemy(this.player, this.enemies[key]);\n          this.enemies[key].drawEnemy(this.ctx, this.frameCount);\n\n        } else {\n          delete this.enemies[key];\n          this.enemyCount -= 1;\n        }\n      }\n      this.enemiesCleared();\n    }\n  }\n\n  renderFireballs() {\n    if (Object.keys(this.player.fireballs).length !== 0) {\n      for (let key in this.player.fireballs) {\n        let fireball = this.player.fireballs[key];\n        \n        if (this.enemyCount !== 0) {\n          for (let key in this.enemies) {\n            this.collider.collideEnemy(fireball, this.enemies[key]);\n          }\n        }\n        \n        this.projectilePlatformCheck(fireball);\n\n        (!fireball.isHit) ? \n          fireball.drawProjectile(this.ctx, this.frameCount) :\n          delete this.player.fireballs[key];\n      }\n    }\n  }\n\n  renderEnemyProjectiles() {\n    ///Check if any enemies\n    Object.values(this.enemies).forEach((enemy) => {\n      if (Object.keys(enemy.projectiles).length !== 0) {\n        for (let key in enemy.projectiles) {\n          this.collider.collideProjectile(this.player, enemy.projectiles[key]);\n\n          this.projectilePlatformCheck(enemy.projectiles[key]);\n\n          (!enemy.projectiles[key].isHit) ?\n            enemy.projectiles[key].drawProjectile(this.ctx, this.frameCount) :\n            delete enemy.projectiles[key];\n        }\n      }\n    });\n  }\n\n  loadLevel() {\n    // debugger\n    if (((this.player.x + (this.player.width / 2)) >= this.canvas.width)) {\n      this.level.loadLevel(1);\n      this.cleared = false;\n      this.enemies = this.level.enemies;\n      this.enemyCount = Object.keys(this.enemies);\n      this.player.x = 0;\n    } else if ((this.player.x + (this.player.width / 2)) <= 0) {\n      this.level.loadLevel(-1);\n      this.player.x = this.canvas.width - this.player.width;\n    }\n  }\n\n  isGameOver() {\n    this.win();\n    this.gameOver = (this.player.dead || this.won) ? true : false;\n  }\n\n  //refactor\n  win() {\n    this.won = (this.level.screen === 6 && Object.keys(this.enemies).length === 0) ? true : false;\n  }\n  \n\n  runGame() {\n    this.isGameOver();\n\n    if (!this.gameOver) {\n      this.loadLevel();\n      this.level.renderBackground(this.ctx, this.canvas);\n      if (this.level.screen > 2) this.level.drawLevel(this.ctx);\n      this.player.drawPlayer(this.frameCount);\n      this.playerUpdate();\n      if (this.level.screen < 3) {\n        this.level.renderMid(this.ctx, this.canvas);\n        this.level.renderFront(this.ctx, this.canvas);\n      }\n\n\n      // this.enemies[1].drawEnemy(this.ctx, this.frameCount);\n      this.renderEnemies();\n      // this.enemies[1].callAttack(this.frameCount);\n      \n      this.renderEnemyProjectiles();\n      this.renderFireballs();\n      \n      this.HUD.drawHUD(this.canvas, this.ctx, this.player, this.frameCount);\n\n    } else {\n      if (!this.won) {\n        this.level.theme.pause();\n        // this.ctx.beginPath();\n        // this.ctx.rect(0, 0, this.canvas.width, this.canvas.height);\n        // this.ctx.fillStyle = \"rgba(255, 255, 255, .1)\";\n        // this.ctx.fill();\n        // this.ctx.closePath();\n\n        // // let img = new Image();\n        // // img.src = \"./assets/embers.jpg\";\n        // // img.onload = () => {\n        //   // ctx.drawImage(img, 0, 0);\n            this.ctx.drawImage(\n                this.embers,\n                0,\n                0,\n                852,\n                400,\n                0, 0,\n                900, 600\n          );\n        // };\n  \n        this.ctx.font = \"130px Arial\";\n        this.ctx.fillStyle = \"rgb(46, 2, 2)\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"GAME OVER\", this.canvas.width / 2, this.canvas.height / 2);\n\n\n        this.ctx.font = \"50px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"Press Enter to Play Again\", this.canvas.width / 2, 400);\n\n      } else {\n        this.level.theme.pause();\n\n        this.ctx.drawImage(\n          this.embers,\n          0,\n          0,\n          852,\n          400,\n          0, 0,\n          900, 600\n        );\n        this.ctx.font = \"80px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"CONGRATS!\", this.canvas.width / 2, 160);\n\n\n        this.ctx.font = \"80px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"YOU BEAT LEVEL 1\", this.canvas.width / 2, this.canvas.height / 2);\n\n\n        this.ctx.font = \"50px Arial\";\n        this.ctx.fillStyle = \"pink\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"Press Enter to Play Again\", this.canvas.width / 2, 400);\n      }\n\n    } \n    \n  }\n\n}\n\n\n\nexport default Game;","import Controller from \"./util/Controller\";\nimport Level from \"./Levels/Level\";\nimport Player from \"./Player\";\nimport Game from \"./Game\";\nimport GameHUD from \"./GameHUD\";\n\n\nclass GameView {\n  constructor (canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    // this.game = new Game(this.canvas, this.ctx);\n    this.game = null;\n    this.splash = new Image();\n    this.splash.src = \"./assets/firegirl.jpg\";\n    // this.HUD = new GameHUD();\n    // this.tileMap = this.loadImage();\n\n\n    this.renderGame = this.renderGame.bind(this);\n    this.loadImage = this.loadImage.bind(this);\n    this.newGame = this.newGame.bind(this);\n\n    window.addEventListener(\"keydown\", (event) => {\n      if ((!this.game || this.game.gameOver) && event.keyCode === 13) {\n        this.newGame();\n\n      } else if (event.keyCode === 77) {\n        this.game.level.theme.mute();\n        // let music = document.getElementById(\"theme\");\n        // (music.muted === false) ? music.muted = true : false;\n      }\n    });\n  }\n\n  loadImage() {\n    let tileMap = new Image();\n    tileMap.src = \"./assets/tileGen.png\";\n    return tileMap;\n  }\n\n  newGame() {\n    if (!this.game || this.game.gameOver) {\n      this.game = new Game(this.canvas, this.ctx);\n      this.game.level.theme.play();\n    }\n  }\n\n\n  renderGame() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    if (!this.game) {\n        this.ctx.drawImage(\n            this.splash,\n            0,\n            0,\n            920,\n            644,\n            0, 0,\n            900, 600\n        );\n\n      this.ctx.font = \"150px Arial\";\n      this.ctx.fillStyle = \"rgb(46, 2, 2)\";\n      this.ctx.textAlign = \"center\";\n      this.ctx.fillText(\"FIRE GIRL\", this.canvas.width / 2, 230);\n\n      this.ctx.font = \"60px Arial\";\n      this.ctx.fillStyle = \"pink\";\n      this.ctx.textAlign = \"center\";\n      this.ctx.fillText(\"Press Enter to Play\", this.canvas.width / 2, 350);\n    }\n\n    if (this.game) {\n\n      this.game.runGame();\n      \n    }\n\n    window.requestAnimationFrame(this.renderGame);\n  }\n\n\n\n\n} \n\n\n\nexport default GameView;\n\n","import \"./styles/index.scss\";\nimport GameView from \"./GameView\";\n\n// const greeting = testObj?.key2?.key3 || testObj.key1;\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  let canvas = document.getElementById(\"gameCanvas\");\n  let ctx = canvas.getContext(\"2d\");\n  let gameView = new GameView(canvas, ctx);\n\n  gameView.renderGame();\n\n  // ctx.beginPath();\n  // ctx.rect(0, 0, canvas.width, canvas.height);\n  // ctx.fillStyle = \"rgba(255, 255, 255, .1)\";\n  // ctx.fill();\n  // ctx.closePath();\n\n  // ctx.font = \"130px Arial\";\n  // ctx.fillStyle = \"red\";\n  // ctx.textAlign = \"center\";\n  // ctx.fillText(\"GAME OVER\", canvas.width / 2, canvas.height / 2);\n  // let img = new Image();\n  // img.src = \"./assets/firegirl.jpg\";\n  // img.onload = () => {\n  //   // ctx.drawImage(img, 0, 0);\n  //         ctx.drawImage(\n  //         img,\n  //         0,\n  //         0,\n  //         920,\n  //         644,\n  //         0, 0,\n  //         900, 600\n  //   );\n  // };\n  \n\n  // let fromRight = canvas.width - 50;\n  // ctx.beginPath();\n  // ctx.arc(fromRight, canvas.height - 30, 5, 0, 2 * Math.PI, false);\n  // ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.fill();\n  // ctx.lineWidth = 5;\n  // ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.stroke();\n  // ctx.closePath();\n\n  // ctx.beginPath();\n  // ctx.arc(canvas.width - 80, canvas.height - 30, 5, 0, 2 * Math.PI, false);\n  // ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.fill();\n  // ctx.lineWidth = 5;\n  // ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.stroke();\n  // ctx.closePath();\n\n  // ctx.beginPath();\n  // ctx.arc(canvas.width - 110, canvas.height - 30, 5, 0, 2 * Math.PI, false);\n  // ctx.fillStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.fill();\n  // ctx.lineWidth = 5;\n  // ctx.strokeStyle = 'rgba(255, 255, 255, .1)';\n  // ctx.stroke();\n  // ctx.closePath();\n  \n  // img.onload = () => {\n  //   ctx.drawImage(\n  //     img,\n  //     22 ,\n  //     400,\n  //     35,\n  //     35,\n  //     0, 0,\n  //     35, 35\n  //   );\n  // };\n\n\n\n});\n"],"sourceRoot":""}